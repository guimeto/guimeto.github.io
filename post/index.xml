<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | GDueymes</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Fri, 29 Jan 2021 10:52:17 -0500</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Mann_Kendall</title>
      <link>/post/mann_kendall/</link>
      <pubDate>Fri, 29 Jan 2021 10:52:17 -0500</pubDate>
      <guid>/post/mann_kendall/</guid>
      <description>&lt;h2 id=&#34;netcdf-interpolation-between-grids-using-ckdtree-from-scipy-library&#34;&gt;Netcdf: Interpolation between grids using cKDTree from Scipy library&lt;/h2&gt;
&lt;p&gt;In this post, we will see how to use pyMannKendall package functions on meteorological stations&amp;rsquo; time series.&lt;/p&gt;
&lt;p&gt;We will use in this example daily temperature data from the second generation homogenized dataset of Environment and Climate Change Canada developed by Vincent et al. 2012.&lt;/p&gt;
&lt;p&gt;We will directly work with monthly indices of daily mean temperature.&lt;/p&gt;
&lt;h2 id=&#34;1---lets-import-python-librairies&#34;&gt;1-  Let&amp;rsquo;s import Python librairies&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#data manipulation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime

&lt;span style=&#34;color:#75715e&#34;&gt;#data statistics&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pymannkendall &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mk
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; statsmodels.api &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; sm

&lt;span style=&#34;color:#75715e&#34;&gt;#for plotting&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mpl
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; carto &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; cartopy.mpl.gridliner &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; LATITUDE_FORMATTER, LONGITUDE_FORMATTER
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2---loading-source-file&#34;&gt;2 - Loading source file&lt;/h2&gt;
&lt;p&gt;We will load work monthly mean of daily mean temperature for every stations over Canada.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;LatLon_Stations_POSITIONS.png&#34; alt=&#34;LatLon_Stations_POSITIONS.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We will work with monthly values from 1970 to 2019. Let&amp;rsquo;s work with all january months:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;yearmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1970&lt;/span&gt;                                                        &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
yearmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;   
dt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(yearmax&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;yearmin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;                                                       &lt;span style=&#34;color:#75715e&#34;&gt;#                                                                                                    &lt;/span&gt;
varin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tasmoy&amp;#39;&lt;/span&gt;                 
indice &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MOY&amp;#39;&lt;/span&gt; 
list_nom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;F:/DATA/Donnees_Stations/2nd_generation_V2019/TEMP_ID/stations_noms_CANADA_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmax)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;,usecols &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
list_latlon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;F:/DATA/Donnees_Stations/2nd_generation_V2019/TEMP_ID/stations_latlon_CANADA_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmax)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;,usecols &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
path_m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;F:/DATA/Donnees_Stations/2nd_generation_V2019/INDICES/INDICES_MONTH/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(varin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/MOY/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmax)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;

month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 
name_month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(&lt;span style=&#34;color:#ae81ff&#34;&gt;1900&lt;/span&gt;, int(month), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%B&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will use the first sation in our list &amp;lsquo;list_nom&amp;rsquo;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list_nom[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iloc[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
station
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;BLIND_CHANNEL&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(path_m &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; list_nom[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iloc[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_MONTH_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;varin&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;indice&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmax)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(month))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;, skiprows&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{ data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;var&amp;#34;&lt;/span&gt; })&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;)
data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Quick plot with matplotlib:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;));
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_10_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can assume the distribution of each variable fits a Gaussian (bell curve) distribution. If this is the case, we can use the Pearson’s correlation coefficient to summarize the correlation between the variables.&lt;/p&gt;
&lt;p&gt;The Pearson’s correlation coefficient is a number between -1 and 1 that describes a negative or positive correlation respectively. A value of zero indicates no correlation.&lt;/p&gt;
&lt;p&gt;We can calculate the correlation for time series observations with observations with previous time steps, called lags. Because the correlation of the time series observations is calculated with values of the same series at previous times, this is called a serial correlation, or an autocorrelation.&lt;/p&gt;
&lt;p&gt;A plot of the autocorrelation of a time series by lag is called the AutoCorrelation Function, or the acronym ACF. This plot is sometimes called a correlogram or an autocorrelation plot.&lt;/p&gt;
&lt;p&gt;Below is an example of calculating and plotting the autocorrelation plot for the Monthly Mean of Mean Daily Temperatures using the plot_acf() function from the statsmodels library.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;))
sm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;graphics&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tsa&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot_acf(data, lags&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, ax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ax);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_12_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We created a 2D plot showing the lag value along the x-axis and the correlation on the y-axis between -1 and 1.&lt;/p&gt;
&lt;p&gt;Confidence intervals are drawn as a cone. By default, this is set to a 95% confidence interval, suggesting that correlation values outside of this code are very likely a correlation and not a statistical fluke.&lt;/p&gt;
&lt;p&gt;From this ACF plot, here show autocorrelation in the first lag. So, modified Mann Kendall test should be applied in here. We can use Hamed and Rao Modified MK Test, Yue and Wang Modified MK Test, Modified MK test using Pre-Whitening method or Modified MK test using Trend free Pre-Whitening method for this station Dataset.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;trend_free_pre_whitening_modification_test(data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Modified_Mann_Kendall_Test_Trend_Free_PreWhitening_Approach(trend=&#39;increasing&#39;, h=True, p=0.0007050819678833253, z=3.3875953797502283, Tau=0.33503401360544216, s=394.0, var_s=13458.666666666666, slope=0.18567741935483859, intercept=-18.02651612903226)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From this result, we can say that there is a significant trend in this dataset. Because the p-value is smaller than alpha=0.05 and h=True. The trend is increasing and the value of trend/slope is 0.18567741935483859.&lt;/p&gt;
&lt;p&gt;Modified MK test using Trend free Pre-Whitening show that there is a significant trend in this dataset. We can check this using other modified tests.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hamed_rao_modification_test(data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Modified_Mann_Kendall_Test_Hamed_Rao_Approach(trend=&#39;increasing&#39;, h=True, p=0.013359193023802174, z=2.4740475090816463, Tau=0.3142857142857143, s=385.0, var_s=24090.531318030477, slope=0.18567741935483859, intercept=-18.02651612903226)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;yue_wang_modification_test(data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Modified_Mann_Kendall_Test_Yue_Wang_Approach(trend=&#39;increasing&#39;, h=True, p=1.6579404515937313e-11, z=6.733355507841542, Tau=0.3142857142857143, s=385.0, var_s=3252.3655991793858, slope=0.18567741935483859, intercept=-18.02651612903226)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;trend_free_pre_whitening_modification_test(data)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Modified_Mann_Kendall_Test_Trend_Free_PreWhitening_Approach(trend=&#39;increasing&#39;, h=True, p=0.0007050819678833253, z=3.3875953797502283, Tau=0.33503401360544216, s=394.0, var_s=13458.666666666666, slope=0.18567741935483859, intercept=-18.02651612903226)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All Modified test shows that there is a significant increasing trend. So we are sure about this trend.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s plot our previous timeserie with trend function:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;trend_free_pre_whitening_modification_test(data)
trend_line &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(len(data)) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; res&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;slope &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; res&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;intercept

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(data)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, trend_line)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend line&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0x1abfb8e83c8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_22_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can now make loops over  every stations, we will only keep significant (90%) stations&amp;rsquo; trend values so with p-value &amp;lt; 0.1. 
We are choosing to only use here modified Kendall-test &lt;!-- raw HTML omitted --&gt;trend_free_pre_whitening_modification_test&lt;!-- raw HTML omitted --&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
name_month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(&lt;span style=&#34;color:#ae81ff&#34;&gt;1900&lt;/span&gt;, int(month), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%B&amp;#39;&lt;/span&gt;)
        
TREND&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]    
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;  index, row &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; list_nom&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iterrows():
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(path_m &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; row[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_MONTH_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;varin&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;indice&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmax)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(month))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;, skiprows&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rename(columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{ data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;var&amp;#34;&lt;/span&gt; })&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;) 
    trend, h, p, z, Tau, s, var_s, slope, intercept &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mk&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;trend_free_pre_whitening_modification_test(data)
                
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;):   &lt;span style=&#34;color:#75715e&#34;&gt;# aucune tendance n&amp;#39;a été détectée &lt;/span&gt;
          slope&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan                             
    TREND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(slope&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;) 
            
trend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;:TREND})
df&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([list_nom,trend,list_latlon], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)               
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And now we could plot all trends over Canada:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plot_background&lt;/span&gt;(ax):
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt;])  
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coastlines(resolution&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;110m&amp;#39;&lt;/span&gt;);
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;), zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)      
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    
    coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,    
                        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)
    
    states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
        category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
        name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
        scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;) 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ax


fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;), frameon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)    
        
crs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal()
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;crs)
        
plot_background(ax)
cmap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet  &lt;span style=&#34;color:#75715e&#34;&gt;# define the colormap&lt;/span&gt;
norm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BoundaryNorm(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2.1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;), cmap&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;N)
&lt;span style=&#34;color:#75715e&#34;&gt;# Plots the data onto map&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude&amp;#39;&lt;/span&gt;][(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)], 
             df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude&amp;#39;&lt;/span&gt;][(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)],
             alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;,
             s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tmoy Trend&amp;#34;&lt;/span&gt;,
             c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;][(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)],
             vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
             vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
             cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap,
             norm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;norm,
             transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),
             marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^&amp;#34;&lt;/span&gt;, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
        
mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude&amp;#39;&lt;/span&gt;][(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)], 
                df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude&amp;#39;&lt;/span&gt;][(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)],
                alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;,
                s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tmoy Trend&amp;#34;&lt;/span&gt;,
                c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;][(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;trend&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)],
                vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
                vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
                cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap,
                norm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;norm,
                transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),
                marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;v&amp;#34;&lt;/span&gt;, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;canvas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw()
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;160&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt; ,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;]
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gridlines(xlocs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xticks, ylocs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yticks, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xaxis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_major_formatter(LONGITUDE_FORMATTER)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;yaxis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_major_formatter(LATITUDE_FORMATTER)
lambert_xticks(ax, xticks)
lambert_yticks(ax, yticks)
    
      
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;55.&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40.&lt;/span&gt;,  &lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\u25B2\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;N&amp;#39;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geodetic())
        
string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Theil-Sen estimator/slope &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Month mean Tmoy [Celcius]&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; (p-value 90%)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Modified MK test using Trend free Pre-Whitening method&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; name_month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; from &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(yearmin) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; to &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(yearmax)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;)
cbar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(mm,  shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;, drawedges&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, ticks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), extend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;,label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Temperatures (°C)&amp;#39;&lt;/span&gt;)
cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick_params(labelsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;) 
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax
text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;yaxis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;label
font &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;font_manager&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FontProperties(size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;)
text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_font_properties(font) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_26_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Spearman correlation between two Netcdf datasets</title>
      <link>/post/spearman/</link>
      <pubDate>Fri, 24 Apr 2020 12:03:32 -0700</pubDate>
      <guid>/post/spearman/</guid>
      <description>&lt;h2 id=&#34;netcdf-interpolation-between-grids-using-ckdtree-from-scipy-library-and-correlation&#34;&gt;Netcdf: Interpolation between grids using cKDTree from Scipy library and correlation&lt;/h2&gt;
&lt;p&gt;In this post, we will interpolate a nectcdf file to another netcdf grid and then calculate timeseries spearman correlation between two datasets on same resolution grid.&lt;/p&gt;
&lt;p&gt;To interpolate, we will follow this &lt;a href=&#34;https://www.guillaumedueymes.com/post/netcdf_interpolation/&#34;&gt;post&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this example, we will interpolate &lt;a href=&#34;https://daymet.ornl.gov/&#34;&gt;Daymet-1km dataset&lt;/a&gt; on &lt;a href=&#34;https://www.ecmwf.int/en/forecasts/datasets/reanalysis-datasets/era5&#34;&gt;ERA5-grid&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We will compute monthly total precipipitation and then compare the two datasets using spearman correlation.&lt;/p&gt;
&lt;p&gt;The Daymet dataset provides gridded estimates of daily weather parameters. Seven surface weather parameters are available at a daily time step, 1 km x 1 km spatial resolution, with a North American spatial extent.&lt;/p&gt;
&lt;p&gt;ERA5 Reanalyses provide a numerical description, with horizontal resolution of 31 km, of the recent climate (1979-present) by combining models with observations.&lt;/p&gt;
&lt;h3 id=&#34;1---lets-import-python-librairies&#34;&gt;1-  Let&amp;rsquo;s import Python librairies&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings; warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;span style=&#34;color:#75715e&#34;&gt;#for Netcdf manipulation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; netCDF4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Dataset
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; netCDF4 &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; nc

&lt;span style=&#34;color:#75715e&#34;&gt;#for array manipulation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

&lt;span style=&#34;color:#75715e&#34;&gt;#for plotting&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

&lt;span style=&#34;color:#75715e&#34;&gt;#for interpolation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; scipy.spatial &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cKDTree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;we-will-only-work-over-july-month-from-1980-to-2019&#34;&gt;We will only work over july month from 1980 to 2019:&lt;/h4&gt;
&lt;h3 id=&#34;2---interpolation--daymet-1km-to-daymet-32km-era5-grid&#34;&gt;2 - Interpolation : Daymet-1km to Daymet-32km (ERA5 grid)&lt;/h3&gt;
&lt;p&gt;We are going to use daily precipitation of Daymet-1km for july. In this analysis, we will use a subset of Daymet-1km and ERA5-32km. Indeed, we will only work over a specific watershed in Canada: Outaouais river&amp;rsquo;s watershed:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;attachment:image.png&#34; alt=&#34;watershed.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the script to interpolate:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;path_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;K:/PROJETS/PROJET_OUTAOUAIS/Daily/prcp/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# path with daily precipitation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; gc
gc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;collect()

variable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Prcp&amp;#39;&lt;/span&gt;
yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1980&lt;/span&gt;
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Load target grid to interpolate&lt;/span&gt;
target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Outaouais_ERA5_Grid.nc&amp;#39;&lt;/span&gt;)
lat_target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude
lon_target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude
lat_target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape

lon_target2d, lat_target2d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;meshgrid(lon_target, lat_target)

&lt;span style=&#34;color:#75715e&#34;&gt;# Load source file to create cKDTree &lt;/span&gt;
source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(path_source &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet_v3_prcp_1980_OUTAOUAIS.nc&amp;#39;&lt;/span&gt;)
lat_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;][:]
lon_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;][:]

&lt;span style=&#34;color:#75715e&#34;&gt;# function to convert latlon to xy coordinate system&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lon_lat_to_cartesian&lt;/span&gt;(lon, lat):
    &lt;span style=&#34;color:#75715e&#34;&gt;# WGS 84 reference coordinate system parameters&lt;/span&gt;
    A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6378.137&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# major axis [km]   &lt;/span&gt;
    E2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6.69437999014e-3&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# eccentricity squared &lt;/span&gt;
    
    lon_rad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;radians(lon)
    lat_rad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;radians(lat)
    &lt;span style=&#34;color:#75715e&#34;&gt;# convert to cartesian coordinates&lt;/span&gt;
    r_n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; A &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; E2 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lon_rad)
    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lon_rad)
    z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; E2) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lat_rad)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x,y,z

xs, ys, zs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lon_lat_to_cartesian(lon_source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten(), lat_source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten())
xt, yt, zt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lon_lat_to_cartesian(lon_target2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten(), lat_target2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten())

tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cKDTree(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;column_stack((xs, ys, zs)))

d, inds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;column_stack((xt, yt, zt)), k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# let&amp;#39;s define a function to interpolate &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;interpolate&lt;/span&gt;(source, target, d, inds):    
    nt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
    tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, nt):        
        w &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; d&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        air_idw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(w &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prcp[t]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten()[inds], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(w, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        air_idw&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
        tmp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(air_idw)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; tmp

&lt;span style=&#34;color:#75715e&#34;&gt;# we will make a loop over years and save netcdf files by month&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yi,yf&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
    source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(path_source &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet_v3_prcp_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_OUTAOUAIS.nc&amp;#39;&lt;/span&gt;)
    air_idw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; interpolate(source,lon_target2d, d, inds)
    
    data_set &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dataset( coords&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;: ([ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;], lon_target),
                                     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;: ([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;,], lat_target),
                                     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;: source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values})
    data_set[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prcp&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;],  air_idw)
    [data_set&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(path_source &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet_v3_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; variable &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_OUTAOUAIS_ERA5grid.nc&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;)]
    

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3---compute-monthly-indices&#34;&gt;3 - Compute monthly indices&lt;/h3&gt;
&lt;p&gt;We can now open daily files to compute monthly indices.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#########################################################&lt;/span&gt;
tmin_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Daily/prcp/&amp;#39;&lt;/span&gt;
monthly_out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Month_Indice/&amp;#39;&lt;/span&gt; 

&lt;span style=&#34;color:#75715e&#34;&gt;# Compute monthly indices&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yi,yf&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):   &lt;span style=&#34;color:#75715e&#34;&gt;# loop over years  &lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;):      &lt;span style=&#34;color:#75715e&#34;&gt;# we just want to work over july (i_month = 7)&lt;/span&gt;
        data_pcp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tmin_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet_v3_Prcp_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(year) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_OUTAOUAIS_ERA5grid.nc&amp;#39;&lt;/span&gt;
        ds_pcp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_mfdataset(data_pcp)         
        monthly_pcp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds_pcp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;)     &lt;span style=&#34;color:#75715e&#34;&gt;# sum over days to calculate monthly accumulation&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# we can save our netcdf files&lt;/span&gt;
        monthly_pcp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(monthly_out &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet_v3_Monthly_PrecTOT_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_OUTAOUAIS_ERA5grid.nc&amp;#39;&lt;/span&gt;,  format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NETCDF4&amp;#39;&lt;/span&gt;)
            
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4---apply-watershed-netcdf-mask&#34;&gt;4 - Apply watershed netcdf mask&lt;/h3&gt;
&lt;p&gt;We will mask a specific area using a netcdf file. To create a netcdf file using any shapefile, please follow this &lt;a href=&#34;https://www.guillaumedueymes.com/post/shapefile_netcdf/&#34;&gt;post&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# this function will be use later to create a netcdf file using source attributs&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_file_from_source&lt;/span&gt;(src_file, trg_file):
    src &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dataset(src_file)
    trg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dataset(trg_file, mode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)

    &lt;span style=&#34;color:#75715e&#34;&gt;# Create the dimensions of the file&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; name, dim &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; src&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dimensions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
        trg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createDimension(name, len(dim) &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; dim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isunlimited() &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; None)

    &lt;span style=&#34;color:#75715e&#34;&gt;# Copy the global attributes&lt;/span&gt;
   &lt;span style=&#34;color:#75715e&#34;&gt;# trg.setncatts({a:src.getncattr(a) for a in src.ncattrs()})&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# Create the variables in the file&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; name, var &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; src&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items():
        trg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;createVariable(name, var&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dtype, var&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dimensions)

        &lt;span style=&#34;color:#75715e&#34;&gt;# Copy the variable attributes&lt;/span&gt;
        trg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[name]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setncatts({a:var&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getncattr(a) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; var&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ncattrs()})

        &lt;span style=&#34;color:#75715e&#34;&gt;# Copy the variables values (as &amp;#39;f4&amp;#39; eventually)&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; name &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tomask:
            trg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[name][:] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; src&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[name][:]
            
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:    
            trg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[name][:] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data

    &lt;span style=&#34;color:#75715e&#34;&gt;# Save the file&lt;/span&gt;
    trg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()

&lt;span style=&#34;color:#75715e&#34;&gt;#create 2d grid mask http://meteo.unican.es/work/xarray_seminar/xArray_seminar.html&lt;/span&gt;
tomask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prcp&amp;#39;&lt;/span&gt;]

m_f&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Outaouais_ERA5_Grid.nc&amp;#39;&lt;/span&gt;)
lat2d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;m_f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;][:]
lon2d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;m_f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;][:]
mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; m_f[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tp&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; month &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;):
        
        infile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Month_Indice/Daymet_v3_Monthly_PrecTOT_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(int(month))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_OUTAOUAIS_ERA5grid.nc&amp;#39;&lt;/span&gt;           
        outfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Month_Indice/Daymet_v3_Monthly_PrecTOT_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{:02d}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(month)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_OUTAOUAIS_ERA5grid_BV.nc&amp;#39;&lt;/span&gt;
       
        nc_Modc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(infile)
        nc_Modc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
        nc_Modf&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Dataset(infile,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
        data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nc_Modc[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prcp&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
        create_file_from_source(infile, outfile)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5---compute-correlation&#34;&gt;5 - Compute correlation&lt;/h3&gt;
&lt;p&gt;To compute spearman correlation, we use stats module from &lt;a href=&#34;https://docs.scipy.org/doc/scipy-0.18.1/reference/generated/scipy.stats.mstats.spearmanr.html/&#34;&gt;scipy library&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; scipy &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; stats
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np

variable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Monthly_PrecTOT&amp;#39;&lt;/span&gt;
yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;
out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Month_Indice/&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; month &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;07&amp;#39;&lt;/span&gt;]:  
    &lt;span style=&#34;color:#75715e&#34;&gt;# load ERA5 &lt;/span&gt;
    path_era5 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/Month_PrecTOT_Outaouais/&amp;#39;&lt;/span&gt;
    file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; path_era5 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_Outaouais_Monthly_PrecTOT_CAN_&amp;#39;&lt;/span&gt;
    multi_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{file}{year}{month}_BV.nc&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yi,yf,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)]
    era5_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(f) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; multi_file], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;day&amp;#39;&lt;/span&gt;)
    
    &lt;span style=&#34;color:#75715e&#34;&gt;# load daymet&lt;/span&gt;
    path_daymet &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;K:/PROJETS/PROJET_OUTAOUAIS/Month_Indice/&amp;#39;&lt;/span&gt;
    
    file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; path_daymet &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet_v3_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;variable &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;
    multi_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{file}{year}{month}_OUTAOUAIS_ERA5grid_BV.nc&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yi,yf,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)]
    daymet_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(f) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; multi_file], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;)
    
    &lt;span style=&#34;color:#75715e&#34;&gt;# Spearman correlation between two datasets for each grid point&lt;/span&gt;
    corr_spearman_ERA5 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zeros((era5_all[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tp&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],era5_all[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tp&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]),dtype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;float)    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ni &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,era5_all[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tp&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]):   &lt;span style=&#34;color:#75715e&#34;&gt;# loop over longitudes&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; nj &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, era5_all[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tp&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]):  &lt;span style=&#34;color:#75715e&#34;&gt;# loop over latitudes&lt;/span&gt;
            
             r, p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stats&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;spearmanr(era5_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(latitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[nj], longitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[ni])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] ,
                                   daymet_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[nj], lon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[ni])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;prcp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] ) 
             &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; :
                 corr_spearman_ERA5[nj,ni] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan
             &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                 corr_spearman_ERA5[nj,ni] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r
                 
    data_set &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dataset( coords&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;: ([ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;], era5_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude),
                                             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;: ([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;,], era5_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude)})
    
    data_set[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spearmanr&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;],  corr_spearman_ERA5)
        
    data_set&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(out &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet_v3_spearmann_Correlation_ERA5grid&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; variable &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yi)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yf)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_OUTAOUAIS_python.nc&amp;#39;&lt;/span&gt;)             
             
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;6---plot-correlation&#34;&gt;6 - Plot correlation&lt;/h3&gt;
&lt;p&gt;We can now make a quick plot using matplotlib.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; netCDF4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Dataset
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mpl
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#75715e&#34;&gt;####https://uoftcoders.github.io/studyGroup/lessons/python/cartography/lesson/&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Date à utiliser &lt;/span&gt;

path_in&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Month_Indice/&amp;#39;&lt;/span&gt;
file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet_v3_spearmann_Correlation_ERA5gridMonthly_PrecTOT&amp;#39;&lt;/span&gt;
yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# lecture du contour du bassin versant &lt;/span&gt;
BV_border &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./points_contour_BV.csv&amp;#39;&lt;/span&gt;, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plot_background&lt;/span&gt;(ax):
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;])
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coastlines(resolution&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;110m&amp;#39;&lt;/span&gt;);
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    
    coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,    
                        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)
    
    states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
        category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
        name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
        scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)

   
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ax

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; month &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;07&amp;#39;&lt;/span&gt;]:
        
    monthstr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(&lt;span style=&#34;color:#ae81ff&#34;&gt;1900&lt;/span&gt;, int(month), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%B&amp;#39;&lt;/span&gt;)   
    filename &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; path_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; file
    
    dset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Dataset(filename &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(yi) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(yf) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; month &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_OUTAOUAIS_python.nc&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#75715e&#34;&gt;## Lecture du fichier &lt;/span&gt;
    var&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;spearmanr&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;squeeze()
    lon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;][:]
    lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;][:]

    
    fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;))
    crs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal()
    ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;crs)
    plot_background(ax)
    
    &lt;span style=&#34;color:#75715e&#34;&gt;## Choisissons une colormap&lt;/span&gt;
    cmap0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_cmap(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jet&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;)
    &lt;span style=&#34;color:#75715e&#34;&gt;#cmap0.set_under(&amp;#39;w&amp;#39;) ## on met en blanc les valeurs inferieures au min de clev&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#cmap0.set_over(&amp;#39;black&amp;#39;)&lt;/span&gt;
    levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;) 
    mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(lon,\
                           lat,\
                           var,\
                           vmin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.&lt;/span&gt;,\
                           vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;, \
                           transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                           cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0,
                           levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;levels)
        
    &lt;span style=&#34;color:#75715e&#34;&gt;# ajout du contour du basson versant &lt;/span&gt;
    colors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;]
    maskBV &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Outaouais Watershed&amp;#39;&lt;/span&gt;]                      
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X,BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Y, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;colors[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;maskBV[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
    plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;best&amp;#34;&lt;/span&gt;, markerscale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
    xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
    yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)    
    fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;canvas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw()    

    cbar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(mm, orientation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horizontal&amp;#39;&lt;/span&gt;, shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;, drawedges&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, ticks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),extend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;)
    cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_label(&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; DAYMET/ERA Correlation - Résolution: 32km&amp;#39;&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;medium&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# Affichage de la légende de la barre de couleur&lt;/span&gt;
    cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick_params(labelsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;)  
    
    string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Spearman Correlation Monthly total precipitation Daymet/ERA5 &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; monthstr &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; reference period 1990-2019&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
    plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)
    plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savefig(path_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Spearman_DAYMET_ERA5_PrecTOT_1990-2019_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(month)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_python.png&amp;#39;&lt;/span&gt;, bbox_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tight&amp;#39;&lt;/span&gt;, pad_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
    plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()  
    plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_13_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Netcdf Interpolation using Python</title>
      <link>/post/netcdf_interpolation/</link>
      <pubDate>Wed, 08 Apr 2020 06:48:49 -0700</pubDate>
      <guid>/post/netcdf_interpolation/</guid>
      <description>&lt;h2 id=&#34;netcdf-interpolation-between-grids-using-ckdtree-from-scipy-library&#34;&gt;Netcdf: Interpolation between grids using cKDTree from Scipy library&lt;/h2&gt;
&lt;p&gt;In this post, we are going to define an algorithm to locate the closest points to a reference points, by using coordinate transformations, k-dimensional trees, and xarray pointwise indexing.&lt;/p&gt;
&lt;p&gt;To select closest grid points, we will use here one approach using &lt;a href=&#34;http://docs.scipy.org/doc/scipy-0.12.0/reference/generated/scipy.spatial.cKDTree.html&#34;&gt;cKDTree&lt;/a&gt; class from scipy.spatial package.&lt;/p&gt;
&lt;p&gt;Different method are considered here:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- nearest neighbour
- nearest neighbours, weighting with the inverse of distance squared: 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;$T_t = \frac{\sum_{i=1}^{m}T_{s,i}w_i}{\sum_{i=1}^{m}w_i}$, $w_i = 1/d_i^2$).&lt;/p&gt;
&lt;p&gt;In this example, we will interpolate &lt;a href=&#34;https://daymet.ornl.gov/&#34;&gt;Daymet-1km dataset&lt;/a&gt; on &lt;a href=&#34;https://www.ecmwf.int/en/forecasts/datasets/reanalysis-datasets/era5&#34;&gt;ERA5-grid&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Daymet dataset provides gridded estimates of daily weather parameters. Seven surface weather parameters are available at a daily time step, 1 km x 1 km spatial resolution, with a North American spatial extent.&lt;/p&gt;
&lt;p&gt;ERA5 Reanalyses provide a numerical description, with horizontal resolution of 31 km, of the recent climate (1979-present) by combining models with observations.&lt;/p&gt;
&lt;h2 id=&#34;1---lets-import-python-librairies&#34;&gt;1-  Let&amp;rsquo;s import Python librairies&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings; warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;span style=&#34;color:#75715e&#34;&gt;#for Netcdf manipulation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr

&lt;span style=&#34;color:#75715e&#34;&gt;#for array manipulation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

&lt;span style=&#34;color:#75715e&#34;&gt;#for plotting&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

&lt;span style=&#34;color:#75715e&#34;&gt;#for interpolation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; scipy.spatial &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cKDTree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2---loading-source-file&#34;&gt;2 - Loading source file&lt;/h2&gt;
&lt;p&gt;We are going to use daily maximum temperature of Daymet-1km for january 2017. In this analysis, we will use a subset of Daymet-1km and ERA5-32km. Indeed, we will only work over a specific watershed in Canada: Outaouais river&amp;rsquo;s watershed:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;watershed.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DAYMET_1km_subset_BV_tmax_2017_01.nc4&amp;#39;&lt;/span&gt;)
lat_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;][:]
lon_source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;][:]
lat_source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(678, 702)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;3--loading-target-file&#34;&gt;3- Loading target file&lt;/h2&gt;
&lt;p&gt;We want to interpolate our source file on ERA5-grid. Let&amp;rsquo;s load ERA5 reanalysis as target grid.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_Outaouais_daily_tmax_201701.nc&amp;#39;&lt;/span&gt;)
lat_target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude
lon_target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude
lat_target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(29,)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ERA5 latitude and longitude are 1D array dimension.  We must convert these 1-dimensional arrays into  2-dimensional arrays.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;lon_target2d, lat_target2d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;meshgrid(lon_target, lat_target)
lon_target2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(29, 121)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This next function will be use for converting lat/lon to cartesian coordinates (x, y, z):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lon_lat_to_cartesian&lt;/span&gt;(lon, lat):
    &lt;span style=&#34;color:#75715e&#34;&gt;# WGS 84 reference coordinate system parameters&lt;/span&gt;
    A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6378.137&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# major axis [km]   &lt;/span&gt;
    E2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6.69437999014e-3&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# eccentricity squared &lt;/span&gt;
    
    lon_rad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;radians(lon)
    lat_rad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;radians(lat)
    &lt;span style=&#34;color:#75715e&#34;&gt;# convert to cartesian coordinates&lt;/span&gt;
    r_n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; A &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; E2 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lon_rad)
    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lon_rad)
    z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; E2) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lat_rad)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x,y,z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now all necessary inputs are read in memory, we can now convert lat/lon to the Cartesian coordinate reference system (CRS):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;xs, ys, zs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lon_lat_to_cartesian(lon_source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten(), lat_source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten())
xt, yt, zt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lon_lat_to_cartesian(lon_target2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten(), lat_target2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4--step1--construct-the-ckdtree-object&#34;&gt;4- Step1:  construct the cKDTree object&lt;/h2&gt;
&lt;p&gt;We can then create a KD-tree with the set of points within which we want to search for a closest point in our source grid.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cKDTree(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;column_stack((xs, ys, zs)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5--step2-interpolation-on-target-grid&#34;&gt;5- Step2: Interpolation on target grid&lt;/h2&gt;
&lt;p&gt;The second step provides a query point and returns the closest point or points in the KD-tree to the query point, where how &amp;ldquo;closest&amp;rdquo; is defined can be varied.&lt;/p&gt;
&lt;p&gt;Here, we use 3D points on spherical Earth with unit radius.&lt;/p&gt;
&lt;p&gt;Two methods of interpolation are considered here: nearest neighbour and weighting with the inverse of distance squared.&lt;/p&gt;
&lt;h3 id=&#34;a--nearest-neighbour-interpolation&#34;&gt;a- Nearest neighbour interpolation&lt;/h3&gt;
&lt;p&gt;In this step, we find indices of the nearest neighbors in the flattened array using our &amp;lsquo;tree&amp;rsquo; from step1.  To do this, we will apply
&lt;a href=&#34;https://docs.scipy.org/doc/scipy-0.12.0/reference/generated/scipy.spatial.cKDTree.query.html#scipy.spatial.cKDTree.query&#34;&gt;cKDTree.query method&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#find indices of the nearest neighbors in the flattened array&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#d, inds = tree.query(zip(xt, yt, zt), k = 1)&lt;/span&gt;
d, inds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;column_stack((xt, yt, zt)), k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now interpolate our 2d field using our index tree. We will interpolate our first timestep for daymet source file (ie datetime64[ns] 2017-01-01T12:00:00)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#get interpolated 2d field&lt;/span&gt;
air_nearest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten()[inds]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape(lon_target2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;b--interpolation-using-inverse-distance-weighting-using-10-nearest-neighbours-k10&#34;&gt;b- Interpolation using inverse distance weighting, using 10 nearest neighbours (k=10):&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;d, inds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;column_stack((xt, yt, zt)), k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
w &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; d&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
air_idw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(w &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten()[inds], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(w, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
air_idw&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lon_target2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;6--plot-the-results&#34;&gt;6- Plot the results:&lt;/h2&gt;
&lt;p&gt;Now let us plot the results from these two approaches. For ERA5-target grid, we will apply a mask to visualize the same watershed. 
This mask was created using a shapefile.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;MASK &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Outaouais_ERA5_Grid.nc&amp;#39;&lt;/span&gt;)
lat1d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MASK&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;][:]
lon1d&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;MASK&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;][:]
lon2d, lat2d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;meshgrid(lon1d, lat1d)
mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MASK[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tp&amp;#39;&lt;/span&gt;][ :, :]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;))

subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;221&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pcolormesh(source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transpose())
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlim([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylim([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar()
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Daymet grid&amp;#34;&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)

subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;222&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pcolormesh(target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transpose())
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlim([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylim([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar()
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERA5 grid&amp;#34;&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)

subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;223&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pcolormesh(air_nearest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transpose())
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlim([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, air_nearest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylim([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, air_nearest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar()
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Daymet on ERA5 grid Nearest neighbor&amp;#34;&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)

subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;224&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pcolormesh(air_idw&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transpose())
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar()
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlim([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, air_idw&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylim([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, air_idw&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Daymet on  ERA5 grid IDW of square distance &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; using 10 neighbors&amp;#34;&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_26_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;This was a quick plot, let&amp;rsquo;s make better plots using Cartopy library.&lt;/p&gt;
&lt;p&gt;We first define a function to create the map subplots:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plot_background&lt;/span&gt;(ax):
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;])
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coastlines(resolution&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;110m&amp;#39;&lt;/span&gt;);
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    
    coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,    
                        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)
    
    states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
        category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
        name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
        scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)

   
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; ax
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will plot the two different interpolations (a) and (b):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib.gridspec &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; GridSpec
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_under(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkblue&amp;#39;&lt;/span&gt;) 
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_over(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;)

gs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GridSpec(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, width_ratios&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;], wspace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;)
crs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal()
&lt;span style=&#34;color:#75715e&#34;&gt;# Left plot - ERA5 grid Nearest neighbor&lt;/span&gt;
ax1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(gs[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;crs)
plot_background(ax1)
ax1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(lon_target2d,\
                   lat_target2d,\
                   air_nearest,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0 )
ax1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contour(lon_target2d, lat_target2d, air_nearest, 
                          levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), 
                          linewidths&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
                          colors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,
                          transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
ax1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(lon_target2d, lat_target2d, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet on ERA5 grid Nearest neighbor: 2017-01-01&amp;#39;&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Right plot - ERA5 grid IDW of square distance &lt;/span&gt;
ax2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(gs[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;crs)

plot_background(ax2)
mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(lon_target2d,\
                   lat_target2d,\
                   air_idw,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0 )
ax2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contour(lon_target2d, lat_target2d, air_idw, 
                          levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), 
                          linewidths&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
                          colors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,
                          transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())

ax2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(lon_target2d, lat_target2d, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet on  ERA5 grid IDW of square distance &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; using 10 neighbors: 2017-01-01 &amp;#39;&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(gs[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(mm,  shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;, drawedges&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, ticks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;), extend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;, cax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick_params(labelsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;) 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_30_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We plot Daymet-1km and ERA5 datasets for the same date: 2017-01-01&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib.gridspec &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; GridSpec
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_under(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkblue&amp;#39;&lt;/span&gt;) 
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_over(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;)

gs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GridSpec(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, width_ratios&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;], wspace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;)
crs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal()
&lt;span style=&#34;color:#75715e&#34;&gt;# Left plot: Daymet: source grid&lt;/span&gt;
ax1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(gs[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;crs)
plot_background(ax1)
ax1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(lon_s,\
                   lat_s,\
                   source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:],\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0 )
ax1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contour(lon_s, lat_s, source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:], 
                          levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), 
                          linewidths&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
                          colors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,
                          transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daymet 1km: Tmax: 2017-01-01&amp;#39;&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Right plot: ERA5: target grid&lt;/span&gt;
ax2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(gs[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;crs)

plot_background(ax2)
mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(lon_target2d,\
                   lat_target2d,\
                   target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;),\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0 )
ax2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contour(lon_target2d, lat_target2d, target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,:,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), 
                          levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), 
                          linewidths&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
                          colors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,
                          transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5 grid: Tmax: 2017-01-01&amp;#39;&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(gs[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(mm,  shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;, drawedges&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, ticks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;), extend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;, cax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick_params(labelsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_32_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;7--saving-netcdf-files-with-every-daily-timesteps&#34;&gt;7- Saving Netcdf files with every daily timesteps:&lt;/h2&gt;
&lt;p&gt;We can work and interpolate for one timestep (ie 2017-01-01). We can now create a function to interpolate every timesteps of our source grid on target grid and then save the result array into netcdf file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;d, inds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;column_stack((xt, yt, zt)), k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
w &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; d&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;interpolate&lt;/span&gt;(source, target, d, inds):    
    nt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; source[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
    tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, nt):        
        result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zeros(target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
        w &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; d&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        air_idw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(w &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tmax[t]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten()[inds], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(w, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        air_idw&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
        tmp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(air_idw)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; tmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DAYMET_1km_subset_BV_tmax_2017_01.nc4&amp;#39;&lt;/span&gt;)
target &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_Outaouais_daily_tmax_201701.nc&amp;#39;&lt;/span&gt;)
lon_target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude
lat_target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;target&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude
lon_target2d, lat_target2d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;meshgrid(lon_target, lat_target)

air_idw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; interpolate(source,lon_target2d, d, inds)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now save our numpy array to xarray and then into netcdf file.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data_set &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Dataset( coords&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;: ([ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;], lon_target),
                                     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;: ([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;,], lat_target),
                                     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;: source&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values})
data_set[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tasmax&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;],  air_idw)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data_set&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DAYMET_32km_subset_BV_tmax_2017_01.nc&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data_set
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Working with ERA5 reanalysis</title>
      <link>/post/era5_analyse/</link>
      <pubDate>Sun, 05 Apr 2020 12:49:01 -0700</pubDate>
      <guid>/post/era5_analyse/</guid>
      <description>&lt;p&gt;﻿&lt;/p&gt;
&lt;h3 id=&#34;exemples-using-era5-reanalysis&#34;&gt;Exemples using ERA5 reanalysis&lt;/h3&gt;
&lt;p&gt;In this post, we will work with ERA5 reanalysis and show how to extract a region using shapefile and compute standard deviation.&lt;/p&gt;
&lt;p&gt;We first import our librairies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; netCDF4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Dataset, num2date
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; regionmask
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; geopandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; gpd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings; warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;working-over-canadian-provinces&#34;&gt;Working over canadian provinces&lt;/h3&gt;
&lt;p&gt;Canadian province shapefiles are available on this  &lt;a href=&#34;https://www.arcgis.com/home/item.html?id=5cf4f223c4a642eb9aa7ae1216a04372&#34;&gt;website&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;After downloaded the shapefiles, we must load it using geopandas library:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;PATH_TO_SHAPEFILE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Canadian_province/lpr_000b16a_e/lpr_000b16a_e.shp&amp;#39;&lt;/span&gt;
province &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_file(PATH_TO_SHAPEFILE)
province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iloc[:,:&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;PRUID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PRNAME&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PRENAME&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PRFNAME&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PREABBR&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PRFABBR&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Newfoundland and Labrador / Terre-Neuve-et-Labrador&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Newfoundland and Labrador&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Terre-Neuve-et-Labrador&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.L.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;T.-N.-L.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Prince Edward Island / Île-du-Prince-Édouard&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Prince Edward Island&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Île-du-Prince-Édouard&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;P.E.I.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Î.-P.-É.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nova Scotia / Nouvelle-Écosse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nova Scotia&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nouvelle-Écosse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.S.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.-É.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Brunswick / Nouveau-Brunswick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Brunswick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nouveau-Brunswick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.B.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.-B.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec / Québec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Québec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Que.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Qc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ontario&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ontario&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ontario&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ont.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ont.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;46&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Manitoba&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Manitoba&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Manitoba&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Man.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Man.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saskatchewan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saskatchewan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saskatchewan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sask.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sask.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alberta&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alberta&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alberta&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alta.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alb.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;British Columbia / Colombie-Britannique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;British Columbia&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Colombie-Britannique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;B.C.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;C.-B.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yukon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yukon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yukon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y.T.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;61&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Northwest Territories / Territoires du Nord-Ouest&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Northwest Territories&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Territoires du Nord-Ouest&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.W.T.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;T.N.-O.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nunavut&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nunavut&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nunavut&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nvt.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nt&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tmpWGS84 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_crs({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;proj&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longlat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ellps&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;WGS84&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datum&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;WGS84&amp;#39;&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tmpWGS84&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x436e8908&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_5_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Shapes are here a GeoDataFrame containing all polygons illustrating the canadian province boundaries.&lt;/p&gt;
&lt;p&gt;Now we can load the ERA5 gridded data. The parameter chunks is very important, it defines how big are the “pieces” of data moved from the disk to the memory. With this value the entire computation on a workstation with 32 GB takes a couple of minutes.&lt;/p&gt;
&lt;p&gt;We will load all the temperature files for the year 2018 using Xarray library.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_T2m_1h&amp;#39;&lt;/span&gt;
t_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/T2m_1h/&amp;#39;&lt;/span&gt;        
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; model &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_2018*_sfc.nc&amp;#39;&lt;/span&gt;
ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_mfdataset(data, chunks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The next function &lt;!-- raw HTML omitted --&gt;assign_coords&lt;!-- raw HTML omitted --&gt; will convert the longitude from the 0-360 range to -180,180&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;assign_coords(longitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(((ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;360&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sortby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our xarray Dataset contains a single variable (t2m) which is stored as a dask.array. This is the result of loading files with open_mfdataset.&lt;/p&gt;
&lt;p&gt;Now we will use  regionmask module to create a gridded mask with the function regions_cls documented &lt;a href=&#34;https://regionmask.readthedocs.io/en/stable/generated/regionmask.Regions_cls.html#regionmask.Regions_cls&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this function we will create an object able to mask ERA5 gridded data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;province_mask_poly &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; regionmask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Regions_cls(name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PRENAME&amp;#39;&lt;/span&gt;, numbers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;)), names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(tmpWGS84&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PRENAME), abbrevs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(tmpWGS84&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PRENAME), outlines &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(tmpWGS84&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[i] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;)))
province_mask_poly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;13 &#39;PRENAME&#39; Regions ()
Newfoundland and Labrador Prince Edward Island Nova Scotia New Brunswick Quebec Ontario Manitoba Saskatchewan Alberta British Columbia Yukon Northwest Territories Nunavut
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are ready to apply the mask on the gridded dataset xarray ERA5.&lt;/p&gt;
&lt;p&gt;We select only the first timestep to speed up the process.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; province_mask_poly&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mask(ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), lat_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;, lon_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;)
mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_mask_Canadian_provinces.nc&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;masque &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_mfdataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_mask_Canadian_provinces.nc&amp;#39;&lt;/span&gt;)
lat_bnd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;]
lon_bnd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;148&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;]
masque &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; masque&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(longitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;lon_bnd), latitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;lat_bnd),)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here&amp;rsquo;s a function to make maps in the future.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;make_figure&lt;/span&gt;():
    fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;), frameon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True) 
    ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal())
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac&lt;/span&gt;

    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;), linestyle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dotted&amp;#39;&lt;/span&gt;)    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières &lt;/span&gt;
    coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                                facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)   
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fig, ax

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can make a quick visualisation of our netcdf mask:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;_, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_figure()
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt;])
masque&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;region&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.contour.QuadContourSet at 0x16563e48&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_18_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;compute-daily-and-monthly-2-meters-temperature--mean&#34;&gt;Compute daily and monthly 2 meters temperature  mean&lt;/h3&gt;
&lt;p&gt;We will now compute daily and monthly 2 meters temperature mean using hourly ERA5 datasets. To speed up our calcul, we will cut a subset over Canada only.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example code just for one month and one year:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_T2m_1h&amp;#39;&lt;/span&gt;

yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#########################################################&lt;/span&gt;
t_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/T2m_1h/&amp;#39;&lt;/span&gt;
daily_out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/T2m_daily/&amp;#39;&lt;/span&gt; 
monthly_out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/T2m_monthly/&amp;#39;&lt;/span&gt; 
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yi,yf&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):                    &lt;span style=&#34;color:#75715e&#34;&gt;# loop over years&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):                   &lt;span style=&#34;color:#75715e&#34;&gt;# loop over months&lt;/span&gt;
        
        data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; model &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_sfc.nc&amp;#39;&lt;/span&gt;
        ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_mfdataset(data)        
        ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;273.15&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;# convert from Kelvin to Celcius &lt;/span&gt;
        ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;assign_coords(longitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(((ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;360&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sortby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;)
        
        lat_bnd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;84&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;]
        lon_bnd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;148&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;]
        ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(longitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;lon_bnd), latitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;lat_bnd),)
        
        daily_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time.day&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;)
        daily_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(daily_out &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Daily_Mean_T2m_CAN_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.nc&amp;#39;&lt;/span&gt;)
        
        monthly_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; daily_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;day&amp;#39;&lt;/span&gt;)
        monthly_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(monthly_out &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Monthly_Mean_T2m_CAN_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.nc&amp;#39;&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;monthly-climatologies-and-standardized-anomalies&#34;&gt;Monthly climatologies and standardized anomalies&lt;/h3&gt;
&lt;p&gt;Once we have monthly mean values, we can now compute climatology and standard anomaly for monthly temperature from 1979 to 2019. Our reference climatology to compute standardized anomalies is 1990-2019 period.&lt;/p&gt;
&lt;p&gt;We will first work with one month (ie january), we will make a loop over all months after.&lt;/p&gt;
&lt;p&gt;First we open and load datasets:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr 

&lt;span style=&#34;color:#75715e&#34;&gt;#### First we open and load datasets&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#for month in range (1,2,1):&lt;/span&gt;
m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/T2m_monthly/Monthly_Mean_T2m_CAN_&amp;#39;&lt;/span&gt;
month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{:02d}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(m)
multi_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{file}{year}{month}.nc&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)]
ds_all &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(f) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; multi_file], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;)
ds_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;time
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Our time is without dimension, it&amp;rsquo;s just an integer. To easly handle our fields, we can define a DatetimeIndex to change &amp;lsquo;time&amp;rsquo; dimension in our Xarray. For more &lt;a href=&#34;https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#timeseries-offset-aliases&#34;&gt;information&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds_all[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date_range(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1990-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-01&amp;#39;&lt;/span&gt;, freq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;YS&amp;#39;&lt;/span&gt;, periods&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ds_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;We can compute our climatology and standard deviation over 30 years: 1990-2019&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;clim_yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1990&lt;/span&gt;
clim_yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;
ds_clim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  ds_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(str(clim_yi)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-01&amp;#39;&lt;/span&gt;, str(clim_yf)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-01&amp;#39;&lt;/span&gt;))
data_clim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds_clim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t2m&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;)
data_std  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds_clim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t2m&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;std(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can apply a function with .apply_unfunc and groupby methods to compute a standardized anomaly:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stand_anomalies &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply_ufunc(
    &lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x, m, s: (x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; m) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; s,
    ds_all&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;),
    data_clim,
    data_std,
)

stand_anomalies&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/T2m_Month_Anomaly/Std_Anomaly_Monthly_Mean_T2m_CAN_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                          str(yi)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yf)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_vs_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(clim_yi)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(clim_yf)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(month)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.nc&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will mask all Canadian provinces with applying our mask region created at the begining of this post:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data_clim_can &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data_clim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(masque&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;region &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now display january monthly mean temperature climatology:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;_, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_figure()
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;82&lt;/span&gt;])
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mpl
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
monthstr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(&lt;span style=&#34;color:#ae81ff&#34;&gt;1900&lt;/span&gt;, int(month), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%B&amp;#39;&lt;/span&gt;)
data_levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.1&lt;/span&gt;)
Y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;181&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;160&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;222&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;195&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;93&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;177&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;95&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;227&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;224&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;248&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;202&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;179&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;181&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;139&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;81&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;157&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;213&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;166&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;241&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;248&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;124&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;235&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;215&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;189&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;135&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;107&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;]])&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;255.&lt;/span&gt;

colbar&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListedColormap(Y)
mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(data_clim_can&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude,\
                   data_clim_can&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude,\
                   data_clim_can,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;data_levels,\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;colbar )

data_contour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contour(data_clim_can&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude, data_clim_can&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude, data_clim_can, 
                          levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data_levels, 
                          linewidths&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
                          colors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,
                          transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
&lt;span style=&#34;color:#75715e&#34;&gt;#Plot contour labels for the heights, leaving a break in the contours for the text (inline=True)&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clabel(data_contour,  data_levels, inline&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, fmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%1i&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# Define gridline locations and draw the lines using cartopy&amp;#39;s built-in gridliner:&lt;/span&gt;
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

cbar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(mm,  shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;, drawedges&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, ticks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.&lt;/span&gt;), extend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 2018&lt;/span&gt;

cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick_params(labelsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;) 

string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Climatology of monthly mean 2meters temperature: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; monthstr
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Text(0.5, 1.0, &#39;Climatology of monthly mean 2meters temperature: January&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_34_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;If we just want to display over one province, we can adjust our mask.  Let&amp;rsquo;s plot climatology over Quebec:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data_clim_qc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data_clim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(masque&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;region &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;_, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_figure()
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;])
monthstr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(&lt;span style=&#34;color:#ae81ff&#34;&gt;1900&lt;/span&gt;, int(month), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%B&amp;#39;&lt;/span&gt;)
data_levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.1&lt;/span&gt;)
Y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;181&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;160&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;222&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;195&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;93&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;177&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;95&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;227&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;224&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;248&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;202&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;179&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;181&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;139&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;81&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;157&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;213&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;166&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;241&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;248&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;124&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;235&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;215&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;189&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;135&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;107&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;]])&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;255.&lt;/span&gt;

colbar&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListedColormap(Y)

data_levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.1&lt;/span&gt;)

mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(data_clim_qc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude,\
                   data_clim_qc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude,\
                   data_clim_qc,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;data_levels,\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;colbar )

data_contour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contour(data_clim_qc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude, data_clim_qc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude, data_clim_qc, 
                          levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data_levels, 
                          linewidths&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
                          colors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,
                          transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
&lt;span style=&#34;color:#75715e&#34;&gt;#Plot contour labels for the heights, leaving a break in the contours for the text (inline=True)&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clabel(data_contour,  data_levels, inline&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, fmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%1i&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# Define gridline locations and draw the lines using cartopy&amp;#39;s built-in gridliner:&lt;/span&gt;
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

cbar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(mm,  shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;, drawedges&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, ticks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.&lt;/span&gt;), extend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 2018&lt;/span&gt;

cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick_params(labelsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;) 

string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5 T2m Climatology (1990-2019) over Quebec &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; monthstr
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Text(0.5, 1.0, &#39;ERA5 T2m Climatology (1990-2019) over Quebec January&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_37_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;inter-annual-standardised-anomaly&#34;&gt;Inter-annual standardised anomaly&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s compute and draw inter-annual standardised anomaly over Quebec:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stand_anomalies_qc  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stand_anomalies&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(masque&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;region &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
stand_anomalie_serie &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stand_anomalies_qc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;])
stand_anomalie_serie&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;numpy.datetime64(&#39;2019-01-01T00:00:00.000000000&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;]
fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)) 


plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;figure.figsize&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;]       &lt;span style=&#34;color:#75715e&#34;&gt;#  &lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(stand_anomalie_serie&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, stand_anomalie_serie&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, 
         label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5 2m temperature&amp;#39;&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;color[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;upper left&amp;#34;&lt;/span&gt;, markerscale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;, scatterpoints&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;yticks( fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid(axis &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--&amp;#34;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid(axis &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--&amp;#34;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setp(plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gca()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_xticklabels(), rotation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;, ha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;right&amp;#34;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Date&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;semibold&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;°C&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;semibold&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Inter annual standardised anomaly of monthly mean temperature over Quevec in January: (1990-2019) compared with normal (1990-2019)&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;semibold&amp;#39;&lt;/span&gt;)
 
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_facecolor(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;yticks( fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_40_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working with XML climate data</title>
      <link>/post/working_with_xml_climate_data/</link>
      <pubDate>Tue, 10 Mar 2020 11:16:07 -0700</pubDate>
      <guid>/post/working_with_xml_climate_data/</guid>
      <description>&lt;p&gt;﻿
In this tutorial, we will extract Hourly Observation from ECCC and display hourly temperature using plotly library.&lt;/p&gt;
&lt;p&gt;We are going to work here with the hourly weather observations data found on the ECCC Datamart.&lt;/p&gt;
&lt;p&gt;These observations data are subject to quality control.
Any value that does not pass quality control is deleted.
This includes values that are categorized as questionable.&lt;/p&gt;
&lt;p&gt;For each province or territory, one file for one specific hour contains:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The coldest place and temperature in Canada for this hour&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The hottest location and temperature in Canada for this hour&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The coldest place and temperature in the province or territory for this hour&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The hottest location and temperature in the province for territory for this hour&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The observations and the records of the stations available in this province:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Present condition (expression)&lt;/li&gt;
&lt;li&gt;Sea level pressure (kPa)&lt;/li&gt;
&lt;li&gt;Value of the pressure trend (kPa)&lt;/li&gt;
&lt;li&gt;Pressure trend (upward, downward, or stable)&lt;/li&gt;
&lt;li&gt;Visibility (km)&lt;/li&gt;
&lt;li&gt;Air temperature (° C)&lt;/li&gt;
&lt;li&gt;Dew point (° C)&lt;/li&gt;
&lt;li&gt;Relative humidity (%)&lt;/li&gt;
&lt;li&gt;Wind speed (km / h)&lt;/li&gt;
&lt;li&gt;Wind direction (code)&lt;/li&gt;
&lt;li&gt;Burst speed (km / h)&lt;/li&gt;
&lt;li&gt;Cloud cover&lt;/li&gt;
&lt;li&gt;Wind Chill&lt;/li&gt;
&lt;li&gt;Humidex&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;stations-information&#34;&gt;Stations information:&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;For each station, the following information is available:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Station name&lt;/li&gt;
&lt;li&gt;Latitude (decimal degree)&lt;/li&gt;
&lt;li&gt;Longitude (decimal degree)&lt;/li&gt;
&lt;li&gt;Transport Canada identification number&lt;/li&gt;
&lt;li&gt;Observation times are in UTC time and local time&lt;/li&gt;
&lt;li&gt;Climate station ID&lt;/li&gt;
&lt;li&gt;WMO station number&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are over 500 observation stations in Canada. However, this number is constantly evolving. The stations are present in the files only if observation data are available.&lt;/p&gt;
&lt;p&gt;&amp;lsquo;swob-xml_station_list.csv&amp;rsquo; document on this &lt;a href=&#34;https://dd.weather.gc.ca/observations/doc/&#34;&gt;link&lt;/a&gt; is a list of XML observations available.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://dd.weather.gc.ca/observations/doc/Met-ML-SchemaDescriptionV2_e.pdf&#34;&gt;Here&lt;/a&gt; is a full documentation for XML description of observation point meteorological:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.opengeospatial.org/standards/om&#34;&gt;OpenGIS&lt;/a&gt; : Standards for observations and measurement.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.weatheroffice.gc.ca/mainmenu/faq_f.html&#34;&gt;Frequently Asked Questions from Environment and Change Weather Service Climate Canada&lt;/a&gt; Frequently Asked Questions from Environment and Change Weather Service Climate Canada. Miscellaneous information about meteorology and climatology.&lt;/p&gt;
&lt;p&gt;Historical climatic data are available on this &lt;a href=&#34;http://climate.weatheroffice.gc.ca&#34;&gt;site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Synoptic and METAR bulletins can also be found on the &lt;a href=&#34;http://dd.weather.gc.ca/bulletins/doc/README_bulletins.txt&#34;&gt;MSC HTTP data server&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, we import python librairies and define the date we want to extract:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime, timedelta
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ET
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; wget
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os 
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os.path &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; exists
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will work first with all the stations over Quebec (ie file with prefix hourly_qc_):&lt;/p&gt;
&lt;p&gt;We will work on this &lt;a href=&#34;https://dd.weather.gc.ca/observations/xml/&#34;&gt;directory&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We want to extreact the latest value recorded.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;now &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow() &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; timedelta(hours&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://dd.weather.ec.gc.ca/observations/xml/QC/hourly/hourly_qc_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_e.xml&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(tmp_file)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;hourly_qc_2020031017_e (1).xml&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hourly_qc_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_e.xml&amp;#39;&lt;/span&gt;)
root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
children &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getchildren()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Number of elements in our file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# total amount of items&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(len(root))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;122
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;to-scan-the-elements-of-our-set-ie-the-children-of-our-root&#34;&gt;To scan the elements of our set, ie the children of our &amp;lsquo;root&amp;rsquo;:&lt;/h3&gt;
&lt;p&gt;for child in root.iter(&#39;*&#39;):&lt;br&gt;
#print(child)
#print(child.attrib)
#print(child.attrib.get(&amp;lsquo;value&amp;rsquo;))
print(child.attrib.get(&amp;lsquo;name&amp;rsquo;))&lt;/p&gt;
&lt;h3 id=&#34;example-of-station-detection&#34;&gt;Example of station detection:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iter(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;): 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;7110600&amp;#39;&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tag)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;station trouvee&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: 7110600&amp;#39;&lt;/span&gt; )
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items())
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.//&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tag)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;{http://dms.ec.gc.ca/schema/point-observation/2.1}element
station trouvee
climate_station_number: 7110600
[(&#39;name&#39;, &#39;climate_station_number&#39;), (&#39;uom&#39;, &#39;unitless&#39;), (&#39;value&#39;, &#39;7110600&#39;)]
7110600
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The list of variables is available on this &lt;a href=&#34;https://dd.weather.gc.ca/observations/doc/Met-ML-SchemaDescriptionV2_f.pdf&#34;&gt;document&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;1--observations-extraction&#34;&gt;1- Observations extraction:&lt;/h2&gt;
&lt;p&gt;We will loop over all stations in Quebec and extract some meteorological values.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mslp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
air&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]  
dew&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
rel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
winds&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
windd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
windc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
humidex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
stid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
present_weather &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
horizontal_visibility &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
station_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
latitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
longitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iter(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;):      
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;present_weather&amp;#39;&lt;/span&gt;:
        present_weather&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))        
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mean_sea_level&amp;#39;&lt;/span&gt;:
        mslp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;:
        air&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dew_point&amp;#39;&lt;/span&gt;:
        dew&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relative_humidity&amp;#39;&lt;/span&gt;:
        rel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wind_speed&amp;#39;&lt;/span&gt;:
        winds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wind_direction&amp;#39;&lt;/span&gt;:
        windd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wind_chill&amp;#39;&lt;/span&gt;:
        windc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;humidex&amp;#39;&lt;/span&gt;:
        humidex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horizontal_visibility&amp;#39;&lt;/span&gt;:
        horizontal_visibility&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;)) 
        
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;climate_station_number&amp;#39;&lt;/span&gt;:
        stid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;)) 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;station_name&amp;#39;&lt;/span&gt;:
        station_name&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;:
        latitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;:
        longitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))        
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:00&amp;#34;&lt;/span&gt;)
month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;makedirs(month, exist_ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)  

data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;climate_station_number&amp;#39;&lt;/span&gt;:stid,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;station_name&amp;#39;&lt;/span&gt;: station_name,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;: latitude,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;: longitude,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;:date, 
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mean_sea_level&amp;#39;&lt;/span&gt;:mslp,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;:air,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dew_point&amp;#39;&lt;/span&gt;:dew,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relative_humidity&amp;#39;&lt;/span&gt;: rel,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wind_speed&amp;#39;&lt;/span&gt;:winds,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wind_direction&amp;#39;&lt;/span&gt;:windd,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wind_chill&amp;#39;&lt;/span&gt;:windc,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;humidex&amp;#39;&lt;/span&gt;:humidex,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horizontal_visibility&amp;#39;&lt;/span&gt;:horizontal_visibility } 

data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(data)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_index(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;climate_station_number&amp;#34;&lt;/span&gt;)   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we want to select a specific station:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data[data[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;station_name&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Montréal&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;| climate_station_number   | station_name   |   latitude |   longitude | date             |   mean_sea_level |   air_temperature |   dew_point |   relative_humidity |   wind_speed | wind_direction   | wind_chill   | humidex   | horizontal_visibility   |
|:-------------------------|:---------------|-----------:|------------:|:-----------------|-----------------:|------------------:|------------:|--------------------:|-------------:|:-----------------|:-------------|:----------|:------------------------|
| 702S006                  | Montréal       |    45.4678 |    -73.7417 | 2020-03-10 17:00 |            100.7 |               2.1 |         1.5 |                  96 |           10 | NNE              |              |           |                         |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To save our data by stations:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; index, row &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iterrows(): 
    file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; exists(file):
        &lt;span style=&#34;color:#75715e&#34;&gt;#print (&amp;#34;File exist&amp;#34;)&lt;/span&gt;
        pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(row)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;,mode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False,header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False) 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;#print (&amp;#34;File not exist&amp;#34;)&lt;/span&gt;
        pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(row)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;,index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now have everything we need to use Plotly library in order to have interactive scatter plots on maps.&lt;/p&gt;
&lt;p&gt;We use the Plotly Express function px.scatter_mapbox to display current temperature observations over Canada.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;list_province &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AB&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BC&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MB&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NB&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NL&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NS&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NT&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NU&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ON&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PE&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;QC&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SK&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;YT&amp;#39;&lt;/span&gt;]

dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; province &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; list_province:    
    tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://dd.weather.ec.gc.ca/observations/xml/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/hourly/hourly_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower()&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_e.xml&amp;#39;&lt;/span&gt;
    r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(tmp_file)
    root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromstring(r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content)
    latitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    longitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    air&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]  
    stid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    station_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    latitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    longitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iter(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;):      
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;:
            air&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))       
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;climate_station_number&amp;#39;&lt;/span&gt;:
            stid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;)) 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;station_name&amp;#39;&lt;/span&gt;:
            station_name&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;:
            latitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;:
            longitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;climate_station_number&amp;#39;&lt;/span&gt;:stid,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;station_name&amp;#39;&lt;/span&gt;: station_name,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;: latitude,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;: longitude,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;:date, 
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;:air } 

    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(data)
    dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(data)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat(dataset)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;]] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataset[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;]]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(float)
dataset[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;]] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_numeric(dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;str&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(float)
dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Size&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;([&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; len(dataset))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now create our scatter plot using plotly:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly.express &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; px
&lt;span style=&#34;color:#75715e&#34;&gt;# Create a token in mapbox&lt;/span&gt;
token &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;**** &amp;#39;&lt;/span&gt;

fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; px&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter_mapbox(dataset,
        lat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;,
        lon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;,
        zoom&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.5&lt;/span&gt;,
        hover_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;,
        range_color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;),
        size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Size&amp;#39;&lt;/span&gt;,
        color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;,
        color_continuous_scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;px&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sequential&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Jet,
        width &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;,
        height &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
        )
&lt;span style=&#34;color:#75715e&#34;&gt;# Configure the style of the map&lt;/span&gt;
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update_layout(
        mapbox_style&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;light&amp;#34;&lt;/span&gt;, 
        mapbox_accesstoken&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;token
    )

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;scatter.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can push our visualization to our plotly account using the following lines of code:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; chart_studio

username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;username&amp;#39;&lt;/span&gt;
api_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;******&amp;#39;&lt;/span&gt;

chart_studio&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tools&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_credentials_file(username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; username, api_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; api_key)
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; chart_studio.plotly &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; py 
py&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(fig, filename &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;scatter_plot&amp;#39;&lt;/span&gt;, auto_open &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If done correctly, this code should open a new window with your visualization on your account and return the link in your notebook.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;https://plot.ly/~guimeteo/19/&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have the &lt;a href=&#34;https://plot.ly/~guimeteo/19/&#34;&gt;link&lt;/a&gt;  to our plotly visualization (either hosted on plotly or github pages).&lt;/p&gt;
&lt;h2 id=&#34;2--plot-timeserie-for-one-station&#34;&gt;2- Plot timeserie for one station:&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
end_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow() &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; timedelta(hours&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
start_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow() &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; timedelta(days&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mydate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start_date
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; mydate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; end_date:    
    &lt;span style=&#34;color:#75715e&#34;&gt;#print((mydate).strftime(&amp;#34;%Y-%m-%d %H:00&amp;#34;))&lt;/span&gt;
    mydate &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; timedelta(hours&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
end_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow() &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; timedelta(hours&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
start_date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow() &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; timedelta(days&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;)
mydate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; start_date
dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; mydate &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; end_date:    
    &lt;span style=&#34;color:#75715e&#34;&gt;#print((mydate).strftime(&amp;#34;%Y-%m-%d %H:00&amp;#34;))  &lt;/span&gt;
    tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://dd.weather.ec.gc.ca/observations/xml/QC/hourly/hourly_qc_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;mydate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%H&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_e.xml&amp;#39;&lt;/span&gt;
    r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(tmp_file)
    root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromstring(r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content)
    air&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]  
    stid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    latitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    longitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    data  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [] 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iter(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;):      
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;:
            air&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;climate_station_number&amp;#39;&lt;/span&gt;:
            stid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))       
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;:
            latitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;:
            longitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;station_name&amp;#39;&lt;/span&gt;:
            station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    

    date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %H:00&amp;#34;&lt;/span&gt;)
    month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)

    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;climate_station_number&amp;#39;&lt;/span&gt;:stid,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;: latitude,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;: longitude,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;:mydate&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:%H&amp;#34;&lt;/span&gt;), 
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;:air,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name station&amp;#39;&lt;/span&gt;: station} 
    
    mydate &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; timedelta(hours&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) 
    
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(data)
    dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(data)   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat(dataset)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | climate_station_number   |   latitude |   longitude | date          |   air_temperature | name station        |
|---:|:-------------------------|-----------:|------------:|:--------------|------------------:|:--------------------|
|  0 | 7100071                  |    60.8186 |    -78.1486 | 2020-02-25:18 |             -29.9 | Akulivik Airport    |
|  1 | 7110600                  |    59.2967 |    -69.5997 | 2020-02-25:18 |             -26.6 | Aupaluk Airport     |
|  2 | 704S001                  |    49.2592 |    -68.1458 | 2020-02-25:18 |               0.6 | Baie-Comeau         |
|  3 | 7040444                  |    49.1325 |    -68.2044 | 2020-02-25:18 |               2.1 | Baie-Comeau Airport |
|  4 | 7040442                  |    49.1333 |    -68.2    | 2020-02-25:18 |               1.7 | Baie-Comeau Climate |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will plot daily timeserie for station with climate_station_number = &amp;lsquo;702S006&amp;rsquo;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  dataset[dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;climate_station_number&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;702S006&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | climate_station_number   |   latitude |   longitude | date          |   air_temperature | name station   |
|---:|:-------------------------|-----------:|------------:|:--------------|------------------:|:---------------|
| 64 | 702S006                  |    45.4678 |    -73.7417 | 2020-02-25:18 |               4.2 | Montréal       |
| 66 | 702S006                  |    45.4678 |    -73.7417 | 2020-02-25:19 |               3.5 | Montréal       |
| 65 | 702S006                  |    45.4678 |    -73.7417 | 2020-02-25:20 |               4.5 | Montréal       |
| 65 | 702S006                  |    45.4678 |    -73.7417 | 2020-02-25:21 |               5   | Montréal       |
| 65 | 702S006                  |    45.4678 |    -73.7417 | 2020-02-25:22 |               5   | Montréal       |
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; px&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;line(dataset1, x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;)
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update_layout(title_text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hourly mean temperature in Montreal&amp;#39;&lt;/span&gt;,
                  xaxis_rangeslider_visible&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly.io &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pio
pio&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_html(fig, file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;timeserie.html&amp;#39;&lt;/span&gt;, auto_open &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_image(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;timeserie.png&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;timeserie.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Follow this &lt;a href=&#34;https://plot.ly/~guimeteo/22/&#34;&gt;link&lt;/a&gt; for interactive plot.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ECCC climate data</title>
      <link>/post/working_with_eccc_climate_data/</link>
      <pubDate>Tue, 10 Mar 2020 09:38:17 -0700</pubDate>
      <guid>/post/working_with_eccc_climate_data/</guid>
      <description>&lt;p&gt;﻿&lt;/p&gt;
&lt;h2 id=&#34;--extract-hourly-daily-and-monthly-climate-data-from-eccc-datamart&#34;&gt;- Extract hourly, daily and monthly climate data from ECCC datamart&lt;/h2&gt;
&lt;p&gt;In this post, we will see how to automatically download all weather data for one station from environment and climate change canada using Python librairies.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the  &lt;a href=&#34;https://climate.weather.gc.ca/&#34;&gt;URL&lt;/a&gt; to get historical data.&lt;/p&gt;
&lt;p&gt;We will use a daily updated list of Climate stations in the National Archive available on this &lt;a href=&#34;https://drive.google.com/drive/folders/1WJCDEU34c60IfOnG4rv5EPZ4IhhW9vZH&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As usual, we import our python librairies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; wget
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shutil
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ET
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;First, we can open and read the list of Climate stations using Pandas:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/Donnees_Stations/Donnees_EC/Codes/Station_Inventory_EN.csv&amp;#39;&lt;/span&gt;, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, skiprows&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | Name                   | Province         |   Climate ID |   Station ID |   WMO ID |   TC ID |   Latitude (Decimal Degrees) |   Longitude (Decimal Degrees) |   Latitude |   Longitude |   Elevation (m) |   First Year |   Last Year |   HLY First Year |   HLY Last Year |   DLY First Year |   DLY Last Year |   MLY First Year |   MLY Last Year |
|---:|:-----------------------|:-----------------|-------------:|-------------:|---------:|--------:|-----------------------------:|------------------------------:|-----------:|------------:|----------------:|-------------:|------------:|-----------------:|----------------:|-----------------:|----------------:|-----------------:|----------------:|
|  0 | ACTIVE PASS            | BRITISH COLUMBIA |      1010066 |           14 |      nan |     nan |                        48.87 |                       -123.28 |  485200000 | -1231700000 |             4   |         1984 |        1996 |              nan |             nan |             1984 |            1996 |             1984 |            1996 |
|  1 | ALBERT HEAD            | BRITISH COLUMBIA |      1010235 |           15 |      nan |     nan |                        48.4  |                       -123.48 |  482400000 | -1232900000 |            17   |         1971 |        1995 |              nan |             nan |             1971 |            1995 |             1971 |            1995 |
|  2 | BAMBERTON OCEAN CEMENT | BRITISH COLUMBIA |      1010595 |           16 |      nan |     nan |                        48.58 |                       -123.52 |  483500000 | -1233100000 |            85.3 |         1961 |        1980 |              nan |             nan |             1961 |            1980 |             1961 |            1980 |
|  3 | BEAR CREEK             | BRITISH COLUMBIA |      1010720 |           17 |      nan |     nan |                        48.5  |                       -124    |  483000000 | -1240000000 |           350.5 |         1910 |        1971 |              nan |             nan |             1910 |            1971 |             1910 |            1971 |
|  4 | BEAVER LAKE            | BRITISH COLUMBIA |      1010774 |           18 |      nan |     nan |                        48.5  |                       -123.35 |  483000000 | -1232100000 |            61   |         1894 |        1952 |              nan |             nan |             1894 |            1952 |             1894 |            1952 |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this Dataframe, we have all informations to select and work with climate stations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Name : name of the station&lt;/li&gt;
&lt;li&gt;Province:  province of the station&lt;/li&gt;
&lt;li&gt;Climate ID: Climate ID number&lt;/li&gt;
&lt;li&gt;Station ID: Station ID number&lt;/li&gt;
&lt;li&gt;Latitude: latitude of the station in decimal degrees&lt;/li&gt;
&lt;li&gt;Longitude: longitude of the station in decimal degrees&lt;/li&gt;
&lt;li&gt;First Year: first year of record&lt;/li&gt;
&lt;li&gt;Last Year: last year of record&lt;/li&gt;
&lt;li&gt;HLY First Year: first year of hourly record&lt;/li&gt;
&lt;li&gt;HLY Last Year: last year of hourly record&lt;/li&gt;
&lt;li&gt;DLY First Year: first year of daily record&lt;/li&gt;
&lt;li&gt;DLY Last Year: last year of daily record&lt;/li&gt;
&lt;li&gt;MLY First Year: first year of monthly record&lt;/li&gt;
&lt;li&gt;MLY Last Year: last year of monthly record&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can easily create 3 dataframes to distinguish hourly, daily and monthly datasets:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df_hourly &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Province&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Climate ID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Station ID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude (Decimal Degrees)&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude (Decimal Degrees)&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HLY First Year&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;HLY Last Year&amp;#39;&lt;/span&gt;]]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dropna()

df_daily &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Province&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Climate ID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Station ID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude (Decimal Degrees)&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude (Decimal Degrees)&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DLY First Year&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DLY Last Year&amp;#39;&lt;/span&gt;]]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dropna()

df_monthly &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Province&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Climate ID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Station ID&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude (Decimal Degrees)&amp;#39;&lt;/span&gt;,
              &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude (Decimal Degrees)&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MLY First Year&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MLY Last Year&amp;#39;&lt;/span&gt;]]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dropna()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will use wget python command to download data using a specific path:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=1&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;year&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;year of the record&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;month&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;month of the record&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;format&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;[csv&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;timeframe = 1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;for hourly data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;timeframe = 2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;for daily data&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;timeframe = 3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;for monthly data&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code&gt;- Day: the value of the &amp;quot;day&amp;quot; variable is not used and can be an arbitrary value
- For another station, change the value of the variable stationID
- For the data in XML format, change the value of the variable format to xml in the URL.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1--working-with-hourly-data&#34;&gt;1- Working with hourly data:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df_hourly&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | Name              | Province         |   Climate ID |   Station ID |   Latitude (Decimal Degrees) |   Longitude (Decimal Degrees) |   HLY First Year |   HLY Last Year |
|---:|:------------------|:-----------------|-------------:|-------------:|-----------------------------:|------------------------------:|-----------------:|----------------:|
| 28 | DISCOVERY ISLAND  | BRITISH COLUMBIA |      1012475 |        27226 |                        48.42 |                       -123.23 |             1997 |            2020 |
| 39 | ESQUIMALT HARBOUR | BRITISH COLUMBIA |      1012710 |           52 |                        48.43 |                       -123.44 |             1994 |            2020 |
| 49 | KELP REEFS        | BRITISH COLUMBIA |      1013998 |        10853 |                        48.55 |                       -123.24 |             1997 |            2020 |
| 53 | MALAHAT           | BRITISH COLUMBIA |      1014818 |        10730 |                        48.58 |                       -123.58 |             1991 |            1992 |
| 54 | MALAHAT           | BRITISH COLUMBIA |      1014820 |           65 |                        48.57 |                       -123.53 |             1994 |            2020 |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We want to extract hourly observations from DISCOVERY ISLAND in 2019. So we will select id_stat = 27226, year = 2019 and timeframe = 1 .&lt;/p&gt;
&lt;h3 id=&#34;--we-want-to-work-in-csv-format&#34;&gt;- We want to work in csv format.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;id_stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;27226&lt;/span&gt;
year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;
wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=csv&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=1&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;en_climate_hourly_BC_1012475_001-2019_P1H.csv&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;en_climate_hourly_BC_1012475_001-2019_P1H.csv&amp;#39;&lt;/span&gt;, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;, skiprows&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    |   Longitude (x) |   Latitude (y) | Station Name     |   Climate ID | Date/Time        |   Year |   Month |   Day | Time   |   Temp (°C) |   Temp Flag |   Dew Point Temp (°C) |   Dew Point Temp Flag |   Rel Hum (%) |   Rel Hum Flag |   Wind Dir (10s deg) |   Wind Dir Flag |   Wind Spd (km/h) |   Wind Spd Flag |   Visibility (km) |   Visibility Flag |   Stn Press (kPa) |   Stn Press Flag |   Hmdx |   Hmdx Flag |   Wind Chill |   Wind Chill Flag |   Weather |
|---:|----------------:|---------------:|:-----------------|-------------:|:-----------------|-------:|--------:|------:|:-------|------------:|------------:|----------------------:|----------------------:|--------------:|---------------:|---------------------:|----------------:|------------------:|----------------:|------------------:|------------------:|------------------:|-----------------:|-------:|------------:|-------------:|------------------:|----------:|
|  0 |         -123.23 |          48.42 | DISCOVERY ISLAND |      1012475 | 2019-01-01 00:00 |   2019 |       1 |     1 | 00:00  |         5.2 |         nan |                   0.7 |                   nan |            73 |            nan |                   17 |             nan |                 5 |             nan |               nan |               nan |            102.87 |              nan |    nan |         nan |          nan |               nan |       nan |
|  1 |         -123.23 |          48.42 | DISCOVERY ISLAND |      1012475 | 2019-01-01 01:00 |   2019 |       1 |     1 | 01:00  |         5.2 |         nan |                   0.7 |                   nan |            72 |            nan |                   17 |             nan |                 5 |             nan |               nan |               nan |            102.87 |              nan |    nan |         nan |          nan |               nan |       nan |
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;url_template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://climate.weather.gc.ca/climateData/bulkdata_e.html?format=csv&amp;amp;stationID=5415&amp;amp;Year={year}&amp;amp;Month={month}&amp;amp;timeframe=1&amp;amp;submit=Download+Data&amp;#34;&lt;/span&gt;
url_template
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;http://climate.weather.gc.ca/climateData/bulkdata_e.html?format=csv&amp;amp;stationID=5415&amp;amp;Year={year}&amp;amp;Month={month}&amp;amp;timeframe=1&amp;amp;submit=Download+Data&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;--if-we-work-in-xml-format&#34;&gt;- If we work in xml format:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=1&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(tmp_file)
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(tmp_file)
root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is the structure of xml file and informations we could find in &amp;lsquo;stationinformation&amp;rsquo; child:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stationsinfo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stationinformation&amp;#39;&lt;/span&gt;)

stationsinfo[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;, stationsinfo[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;, stationsinfo[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text
&lt;span style=&#34;color:#75715e&#34;&gt;###############################################################&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;######### stationsinfo[0].text : station name&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;######### stationsinfo[1].text : province&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;######### stationsinfo[2].text : provider&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;######### stationsinfo[3].text : latitude  &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;######### stationsinfo[4].text : longitude&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(&#39;DISCOVERY ISLAND&#39;, &#39;latitude&#39;, &#39;48.42&#39;, &#39;longitude&#39;, &#39;-123.23&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Climate records are available in &amp;lsquo;station data&amp;rsquo; child:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image2.png&#34; alt=&#34;png&#34;&gt;
Let&amp;rsquo;s extract Temperature data for one year:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stationsdata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.//stationdata&amp;#39;&lt;/span&gt;)
result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;  stationdata &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stationsdata    :&lt;span style=&#34;color:#75715e&#34;&gt;# loop over hourly values or child &lt;/span&gt;
    champs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;) 
    tmp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(result,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)  
    result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(champs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text)   
    tmp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(result,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To loop over years available for this station:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;id_stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;27226&lt;/span&gt;
yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt;
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yi,yf&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):    &lt;span style=&#34;color:#75715e&#34;&gt;### loop over years&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; month &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;):
        tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(month)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Day=14&amp;amp;timeframe=1&amp;#39;&lt;/span&gt;)
        tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(tmp_file)
        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(tmp_file)
        root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()       
        stationsdata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.//stationdata&amp;#39;&lt;/span&gt;)
        temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []  
        date  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        data  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;  stationdata &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stationsdata: 
            date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;day&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; 
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hour&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:00&amp;#39;&lt;/span&gt;)                  
            champs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;temp&amp;#39;&lt;/span&gt;)
            tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(champs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;  tmp &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nan&amp;#39;&lt;/span&gt;:
                temperature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:   
                temperature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(tmp)   &lt;span style=&#34;color:#75715e&#34;&gt;#  loop over days in one year&lt;/span&gt;

        data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;:date, 
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;:temperature} 
        data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(data)
        dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(data)
dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat(dataset)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; tabulate &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; tabulate
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tabulate(dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(), headers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;keys&amp;#39;&lt;/span&gt;, tablefmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pipe&amp;#39;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | date          |   air_temperature |
|---:|:--------------|------------------:|
|  0 | 2015-1-1 0:00 |               3   |
|  1 | 2015-1-1 1:00 |               2.9 |
|  2 | 2015-1-1 2:00 |               3   |
|  3 | 2015-1-1 3:00 |               3.1 |
|  4 | 2015-1-1 4:00 |               3.1 |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To save our dataframe into csv format:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./Hourly_dataset.csv&amp;#34;&lt;/span&gt;, index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False, header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True, sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We Can make  quick plot using  plotly.express:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly.express &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; px
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly
fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; px&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;line(dataset, x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air_temperature&amp;#39;&lt;/span&gt;)
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update_layout(title_text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hourly temperature record&amp;#39;&lt;/span&gt;,
                  xaxis_rangeslider_visible&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;file1.png&#34; alt=&#34;png&#34;&gt;
Follow this &lt;a href=&#34;http://www.guillaumedueymes.com/Plotly_plots/file1.html&#34;&gt;link&lt;/a&gt; for interactive plot:&lt;/p&gt;
&lt;p&gt;To save our file in html:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly.io &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pio
pio&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_html(fig, file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file1.html&amp;#39;&lt;/span&gt;, auto_open &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To save our file in png:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_image(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file1.png&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2--working-with-daily-data&#34;&gt;2- Working with daily data:&lt;/h3&gt;
&lt;p&gt;We will do the same job with daily mean temperature for one Climate station:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df_daily&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | Name                   | Province         |   Climate ID |   Station ID |   Latitude (Decimal Degrees) |   Longitude (Decimal Degrees) |   DLY First Year |   DLY Last Year |
|---:|:-----------------------|:-----------------|-------------:|-------------:|-----------------------------:|------------------------------:|-----------------:|----------------:|
|  0 | ACTIVE PASS            | BRITISH COLUMBIA |      1010066 |           14 |                        48.87 |                       -123.28 |             1984 |            1996 |
|  1 | ALBERT HEAD            | BRITISH COLUMBIA |      1010235 |           15 |                        48.4  |                       -123.48 |             1971 |            1995 |
|  2 | BAMBERTON OCEAN CEMENT | BRITISH COLUMBIA |      1010595 |           16 |                        48.58 |                       -123.52 |             1961 |            1980 |
|  3 | BEAR CREEK             | BRITISH COLUMBIA |      1010720 |           17 |                        48.5  |                       -124    |             1910 |            1971 |
|  4 | BEAVER LAKE            | BRITISH COLUMBIA |      1010774 |           18 |                        48.5  |                       -123.35 |             1894 |            1952 |
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=2&amp;#39;&lt;/span&gt;)
tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(tmp_file)
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(tmp_file)
root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is the structure of xml file and informations we could find in &amp;lsquo;stationinformation&amp;rsquo; child:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Climate records are available in &amp;lsquo;station data&amp;rsquo; child:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image3.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;url_template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=2&amp;#39;&lt;/span&gt;
url_template
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=5415&amp;amp;Year=2020&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=2&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We want to extract 4 specific years for Climate station with ID=27226:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;id_stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;27226&lt;/span&gt;
df_daily[df_daily[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Station ID&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; id_stat][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DLY First Year&amp;#39;&lt;/span&gt;]
yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2015&lt;/span&gt;
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yi,yf&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):    &lt;span style=&#34;color:#75715e&#34;&gt;### loop over years&lt;/span&gt;
        tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=1&amp;amp;Day=14&amp;amp;timeframe=2&amp;#39;&lt;/span&gt;)
        tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(tmp_file)
        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(tmp_file)
        root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()       
        stationsdata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.//stationdata&amp;#39;&lt;/span&gt;)
        temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []  
        date  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        data  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;  stationdata &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stationsdata: 
            date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;day&amp;#39;&lt;/span&gt;])                  
            champs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;meantemp&amp;#39;&lt;/span&gt;)
            tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(champs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;  tmp &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nan&amp;#39;&lt;/span&gt;:
                temperature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan)
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:   
                temperature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(tmp)   &lt;span style=&#34;color:#75715e&#34;&gt;#  loop over days in one year&lt;/span&gt;

        data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;:date, 
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;temperature&amp;#39;&lt;/span&gt;:temperature} 
        data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(data)
        dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(data)
dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat(dataset)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | date     |   temperature |
|---:|:---------|--------------:|
|  0 | 2015-1-1 |           nan |
|  1 | 2015-1-2 |           nan |
|  2 | 2015-1-3 |           nan |
|  3 | 2015-1-4 |           nan |
|  4 | 2015-1-5 |           nan |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We Can make  quick plot using  plotly.express:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly.express &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; px
fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; px&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;line(dataset, x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;temperature&amp;#39;&lt;/span&gt;)
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update_layout(title_text&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Time Series with Rangeslider&amp;#39;&lt;/span&gt;,
                  xaxis_rangeslider_visible&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;file2.png&#34; alt=&#34;png&#34;&gt;
Follow this &lt;a href=&#34;http://www.guillaumedueymes.com/Plotly_plots/file2.html&#34;&gt;link&lt;/a&gt; for interactive plot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./Daily_dataset.csv&amp;#34;&lt;/span&gt;, index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False, header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True, sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly.io &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pio
pio&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_html(fig, file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file2.html&amp;#39;&lt;/span&gt;, auto_open &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_image(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file2.png&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3--working-with-monthly-data&#34;&gt;3- Working with monthly data:&lt;/h3&gt;
&lt;p&gt;We will do the same job with monthly total precipitation for one Climate station:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df_monthly&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;|    | Name                   | Province         |   Climate ID |   Station ID |   Latitude (Decimal Degrees) |   Longitude (Decimal Degrees) |   MLY First Year |   MLY Last Year |
|---:|:-----------------------|:-----------------|-------------:|-------------:|-----------------------------:|------------------------------:|-----------------:|----------------:|
|  0 | ACTIVE PASS            | BRITISH COLUMBIA |      1010066 |           14 |                        48.87 |                       -123.28 |             1984 |            1996 |
|  1 | ALBERT HEAD            | BRITISH COLUMBIA |      1010235 |           15 |                        48.4  |                       -123.48 |             1971 |            1995 |
|  2 | BAMBERTON OCEAN CEMENT | BRITISH COLUMBIA |      1010595 |           16 |                        48.58 |                       -123.52 |             1961 |            1980 |
|  3 | BEAR CREEK             | BRITISH COLUMBIA |      1010720 |           17 |                        48.5  |                       -124    |             1910 |            1971 |
|  4 | BEAVER LAKE            | BRITISH COLUMBIA |      1010774 |           18 |                        48.5  |                       -123.35 |             1894 |            1952 |
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=3&amp;#39;&lt;/span&gt;)
url_template &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=3&amp;#39;&lt;/span&gt;
url_template
tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(tmp_file)
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(tmp_file)
root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
url_template
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=27226&amp;amp;Year=2020&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=3&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Climate records are available in &amp;lsquo;station data&amp;rsquo; child:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image4.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We want to dowload monthly total precipitation for Climate station with ID=5415.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;id_stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5415&lt;/span&gt;
df_monthly[df_monthly[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Station ID&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; id_stat][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MLY First Year&amp;#39;&lt;/span&gt;]
yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(df_monthly[df_monthly[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Station ID&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; id_stat][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MLY First Year&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values)
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(df_monthly[df_monthly[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Station ID&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; id_stat][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MLY Last Year&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=2020&amp;amp;Month=1&amp;amp;Day=14&amp;amp;timeframe=3&amp;#39;&lt;/span&gt;)
tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(tmp_file)
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(tmp_file)
root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()       
stationsdata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.//stationdata&amp;#39;&lt;/span&gt;)
totprecip &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []  
date  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
data  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;  stationdata &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stationsdata: 
    date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;])                  
    champs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;totprecip&amp;#39;&lt;/span&gt;)
    tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(champs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;  tmp &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nan&amp;#39;&lt;/span&gt;:
        totprecip&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:   
        totprecip&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(tmp)   &lt;span style=&#34;color:#75715e&#34;&gt;#  loop over days in one year&lt;/span&gt;

    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;:date, 
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;totprecip&amp;#39;&lt;/span&gt;:totprecip} 
    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(data)
    dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(data)
dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat(dataset)
dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop_duplicates(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;,keep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;last&amp;#39;&lt;/span&gt;)
dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;]  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_datetime(dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;], format&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly.graph_objects &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; go
fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; go&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Figure(data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[
    go&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Bar(name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;totprecip1&amp;#39;&lt;/span&gt;, 
           x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dataset[dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;], 
           y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dataset[dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;totprecip&amp;#39;&lt;/span&gt;])    
])
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update_layout(
    title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;July monthly precipitation&amp;#39;&lt;/span&gt;,
    xaxis_tickfont_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,
    yaxis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dict(
        title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Total precipitation (mm)&amp;#39;&lt;/span&gt;,
        titlefont_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,
        tickfont_size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,
    ),
    barmode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;group&amp;#39;&lt;/span&gt;,
    bargap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.15&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;# gap between bars of adjacent location coordinates.&lt;/span&gt;
    bargroupgap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# gap between bars of the same location coordinate.&lt;/span&gt;
)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;file3.png&#34; alt=&#34;png&#34;&gt;
Follow this &lt;a href=&#34;http://www.guillaumedueymes.com/Plotly_plots/file3.html&#34;&gt;link&lt;/a&gt; for interactive plot.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataset[dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./Monthly_dataset.csv&amp;#34;&lt;/span&gt;, index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False, header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True, sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; plotly.io &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pio
pio&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_html(fig, file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file2.html&amp;#39;&lt;/span&gt;, auto_open &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True)
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write_image(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file2.png&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Netcdf select closest gridpoints</title>
      <link>/post/ckdtree_netcdf/</link>
      <pubDate>Wed, 26 Feb 2020 13:10:29 -0800</pubDate>
      <guid>/post/ckdtree_netcdf/</guid>
      <description>&lt;p&gt;﻿&lt;/p&gt;
&lt;h2 id=&#34;--netcdf-select-closest-points-using-ckdtree&#34;&gt;- Netcdf: Select closest points using CKDTree&lt;/h2&gt;
&lt;p&gt;In this post, we are going to define an algorithm to locate the closest points to a reference point, by using coordinate transformations, k-dimensional trees, and xarray pointwise indexing.&lt;/p&gt;
&lt;p&gt;To select closest grid points, we will use here one approach using &lt;a href=&#34;http://docs.scipy.org/doc/scipy-0.12.0/reference/generated/scipy.spatial.cKDTree.html&#34;&gt;cKDTree&lt;/a&gt; class from scipy.spatial package.&lt;/p&gt;
&lt;p&gt;Different method are considered here:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- nearest neighbour
- nearest neighbours, weighting with the inverse of distance squared: 
- 
\begin{equation*}
$T_t = \frac{\sum_{i=1}^{m}T_{s,i}w_i}{\sum_{i=1}^{m}w_i}$, $w_i = 1/d_i^2$)
\end{equation*}

- query ball point : Find all pairs of points whose distance is at most one distance
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1--lets-import-python-librairies&#34;&gt;1- Let&amp;rsquo;s import Python librairies&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#for Netcdf manipulation&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#import netCDF4&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#from netCDF4 import Dataset&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr

&lt;span style=&#34;color:#75715e&#34;&gt;#for array manipulation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

&lt;span style=&#34;color:#75715e&#34;&gt;#for plotting&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt

&lt;span style=&#34;color:#75715e&#34;&gt;#for interpolation&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; scipy.spatial &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cKDTree
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2--loading-netcdf-files&#34;&gt;2- Loading Netcdf files&lt;/h3&gt;
&lt;p&gt;We are going to use daily ERA5 reanalysis data from April 1st to 31th of october 2018.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;unique_dataDIR &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;K:/PROJETS/PROJET_FIRE_INDEX/ERA5_FWI_Netcdf/ERA5_FWI_QC_SNOW_New_2018_from_4_to_8.nc&amp;#39;&lt;/span&gt;
TAS &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(unique_dataDIR)
TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape, TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;((121,), (77,))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Regrid 1D latitude and longitude to 2D grid.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;lon2d, lat2d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;meshgrid(TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon, TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat)
lon2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape, lat2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;((77, 121), (77, 121))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s have a quick look at our dataset, we will plot one day in our time range:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;, projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;])
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coastlines(resolution&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;110m&amp;#39;&lt;/span&gt;);
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,    
                        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)

states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
        category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
        name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
        scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)

cmap0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_under(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkblue&amp;#39;&lt;/span&gt;) 
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_over(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;) 

mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon,\
                   TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat,\
                   TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0 )
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(lon2d, lat2d, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.collections.PathCollection at 0xc7d6828&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_8_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;The blue dots in the plot identify the grid points.&lt;/p&gt;
&lt;p&gt;What we want to achieve is to come up with a way to compare distances between a reference point (defined by latitude and longitude values), and all grid points, and pick the minimum value.&lt;/p&gt;
&lt;p&gt;But first, we need to measure distances between two points on our planet, given their geodetic (latitude/longitude/altitude) coordinates.&lt;/p&gt;
&lt;p&gt;In this post, we are going to use the cartesian or ECEF (“earth-centered, earth-fixed”) geographic coordinate system, which represents positions (in meters) as X, Y, and Z coordinates, approximating the earth surface as an ellipsoid of revolution (close enough for our purposes).&lt;/p&gt;
&lt;p&gt;Once we convert our latitude/longitude coordinates to cartesian coordinates, measuring the distance between two points is as simple as computing the Euclidean distance between them.&lt;/p&gt;
&lt;p&gt;The conversion between cartesian and geodetic coordinates latitude, longitude is done according to:&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Where &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;    is the local curvature of the ellipsoid along the first vertical, and where e, the first eccentricity, and a, the semi-major axis, are the parameters defining the ellipsoid.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finding the closest&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our problem falls into the class of nearest neighbour searches. A common approach when it comes to finding the nearest neighbour in a number of points with k dimensions is to use a KD-tree, or k-dimensional tree. 
SciPy library provides a very efficient KD-tree implementation . Once we have constructed our tree, all we have to do is to populate it with a (n,m) shaped array of points and then query it the nearest neighbor to a reference point.&lt;/p&gt;
&lt;p&gt;We will have to make use of some NumPy acrobatics to reshape our data structures from a two-dimensional grid to a one-dimensional array, and to convert the returned one-dimensional index to a set of two indices on our original grid.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;KDTreeIndex&lt;/span&gt;():    
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; A KD-tree implementation for fast point lookup on a 2D grid
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Keyword arguments: 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    dataset -- a xarray DataArray containing lat/lon coordinates
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;               (named &amp;#39;lat&amp;#39; and &amp;#39;lon&amp;#39; respectively)               
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;transform_coordinates&lt;/span&gt;(self, coords):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Transform coordinates from geodetic to cartesian
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Keyword arguments:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        coords - a set of lan/lon coordinates (e.g. a tuple or 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                 an array of tuples)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# WGS 84 reference coordinate system parameters&lt;/span&gt;
        A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6378.137&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# major axis [km]   &lt;/span&gt;
        E2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6.69437999014e-3&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# eccentricity squared    &lt;/span&gt;
        
        coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;asarray(coords)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;astype(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;float)
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# is coords a tuple? Convert it to an one-element array of tuples&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; coords&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ndim &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
            coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([coords])
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# convert to radiants&lt;/span&gt;
        lat_rad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;radians(coords[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
        lon_rad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;radians(coords[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) 
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# convert to cartesian coordinates&lt;/span&gt;
        r_n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; A &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; E2 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
        x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lon_rad)
        y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cos(lat_rad) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lon_rad)
        z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r_n &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; E2) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sin(lat_rad)
        
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;column_stack((x, y, z))
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, dataset):
        &lt;span style=&#34;color:#75715e&#34;&gt;# store original dataset shape&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
        lon2d, lat2d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;meshgrid(dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon, dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat)
        &lt;span style=&#34;color:#75715e&#34;&gt;# reshape and stack coordinates&lt;/span&gt;
        coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;column_stack((lat2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ravel(),
                                  lon2d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ravel()))
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# construct KD-tree&lt;/span&gt;
        self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cKDTree(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transform_coordinates(coords))
        
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(self, point, k):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Query the kd-tree for nearest neighbour.
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Keyword arguments:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        point -- a (lat, lon) tuple or array of tuples
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        d, inds  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transform_coordinates(point),k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;k)
        w &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; d&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# regrid to 2D grid&lt;/span&gt;
        indslatlon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unravel_index(inds, self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; d, inds, w, indslatlon
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;query_ball_point&lt;/span&gt;(self, point, radius):
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34; Query the kd-tree for all point within distance 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        radius of point(s) x
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        Keyword arguments:
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        point -- a (lat, lon) tuple or array of tuples
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        radius -- the search radius (km)
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
        
        index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query_ball_point(self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;transform_coordinates(point),
                                           radius)

        &lt;span style=&#34;color:#75715e&#34;&gt;# regrid to 2D grid &lt;/span&gt;
        index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;unravel_index(index[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape)
        
        &lt;span style=&#34;color:#75715e&#34;&gt;# return DataArray indexers&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataArray(index[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;), \
               xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataArray(index[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;)
    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will construct our cKDTree object using one time step from our xarray.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;latlon_tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; KDTreeIndex(TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now query the tree the nearest grid point to one reference point:&lt;/p&gt;
&lt;h3 id=&#34;3--nearest-neighbour-k1&#34;&gt;3- Nearest neighbour k=1:&lt;/h3&gt;
&lt;p&gt;Let&amp;rsquo;s select reference point defined by:
- latitude = 50 degN
- longitude = -68.1461 degE&lt;/p&gt;
&lt;p&gt;We can now query the tree the nearest point :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;site &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;68.1461&lt;/span&gt;)
d, inds, w, indslatlon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; latlon_tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query(site, k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(inds)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(indslatlon)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[5871]
(array([48], dtype=int64), array([63], dtype=int64))
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;latpt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indslatlon[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
lonpt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indslatlon[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(latpt, lonpt)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;48 63
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The query method actually  returns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;two array objects a latitude and a longitude indexer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;one 1D indexer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;one distance value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;one corresponding weighting.&lt;/p&gt;
&lt;p&gt;*inds value (ie 5871) represents the index found for our one-dimensional array.&lt;/p&gt;
&lt;p&gt;*indslatlon are the corresponding longitude and latitude values for the closest point found.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To extract the xarray field value using our previous index, first we need to convert a two-dimensional grid to a one-dimensional array and then select index value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten()[inds]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([10.517308])
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI[latpt,lonpt]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;FWI&#39; ()&amp;gt;
array(10.517308)
Coordinates:
    lon      float64 -68.25
    lat      float32 50.0
    time     datetime64[ns] 2018-08-01
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s make a quick look:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;, projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;])
   &lt;span style=&#34;color:#75715e&#34;&gt;# ax.coastlines(resolution=&amp;#39;110m&amp;#39;);&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac    &lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)

  
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
        category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
        name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
        scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;## Choisissons une colormap&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_under(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkblue&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;## on met en blanc les valeurs inferieures au min de clev&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_over(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;## bleu fonce pour les valeurs extremes de pluie&lt;/span&gt;

mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon,\
                   TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat,\
                   TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0 )
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(lon2d, lat2d, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5 grid points&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI[latpt,lonpt]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon, 
           TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI[latpt,lonpt]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat, 
           color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;closest grid point&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;68.1461&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reference point&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;upper left&amp;#39;&lt;/span&gt;, numpoints&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, ncol&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0xc7d6358&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_22_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4--nearest-neighbours-k10&#34;&gt;4- Nearest neighbours k=10&lt;/h3&gt;
&lt;p&gt;We will now make the same exercice using k=10.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;site &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;68.1461&lt;/span&gt;)
d, inds, w, indslatlon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ground_pixel_tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query(site, k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(d)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(w)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(inds)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(indslatlon)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[[ 7.44918778 10.47474677 25.37308687 28.39863145 28.78330094 28.79213291
  29.70566615 29.72368634 37.59953757 37.68733316]]
[[0.01802114 0.00911408 0.00155329 0.00123995 0.00120703 0.00120629
  0.00113324 0.00113187 0.00070735 0.00070406]]
[[5871 5872 5870 5873 5750 5992 5751 5993 5749 5991]]
(array([[48, 48, 48, 48, 47, 49, 47, 49, 47, 49]], dtype=int64), array([[63, 64, 62, 65, 63, 63, 64, 64, 62, 62]], dtype=int64))
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten()[inds]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[10.517308  ,  9.87137321,  8.57146189, 11.99096501,  9.32552318,
        10.0954969 ,  9.84150618, 11.8046335 ,  9.26170112,  8.3454113 ]])
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;latpts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indslatlon[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
lonpts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indslatlon[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(latpts, lonpts)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[48 48 48 48 47 49 47 49 47 49] [63 64 62 65 63 63 64 64 62 62]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can know Interpolate our field using inverse distance weighting, using 10 nearest neighbours (k=10):&lt;/p&gt;
&lt;p&gt;(i.e. Tt=∑mi=1Ts,iwi∑mi=1wi, wi=1/d2i).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(w &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;flatten()[inds], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sum(w, axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([10.21868978])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s make a quick look:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;latpts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indslatlon[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
lonpts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indslatlon[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI[latpts,lonpts]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;lon&#39; (lon: 10)&amp;gt;
array([-68.25, -68.  , -68.5 , -67.75, -68.25, -68.25, -68.  , -68.  , -68.5 ,
       -68.5 ])
Coordinates:
  * lon      (lon) float64 -68.25 -68.0 -68.5 -67.75 ... -68.0 -68.0 -68.5 -68.5
    time     datetime64[ns] 2018-08-01
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;, projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;])
   &lt;span style=&#34;color:#75715e&#34;&gt;# ax.coastlines(resolution=&amp;#39;110m&amp;#39;);&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac    &lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)

  
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
        category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
        name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
        scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;## Choisissons une colormap&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_under(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkblue&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;## on met en blanc les valeurs inferieures au min de clev&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_over(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;## bleu fonce pour les valeurs extremes de pluie&lt;/span&gt;

mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon,\
                   TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat,\
                   TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0 )
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(lon2d, lat2d, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5 grid points&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI[latpts,lonpts]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon, 
           TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI[latpts,lonpts]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat, 
           color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;closest grid points&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;68.1461&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reference point&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;upper left&amp;#39;&lt;/span&gt;, numpoints&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, ncol&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0xcb78ac8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_32_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now we will find all grid points  within a given distance from a reference point, by using the query_ball_point method in SciPy’s KD-tree implementation.&lt;/p&gt;
&lt;p&gt;Let’s find out which ground pixels fall into a 700km radius from our reference point:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ball_point_index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ground_pixel_tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;query_ball_point(site, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)
lons &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI[ball_point_index]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon
lats &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI[ball_point_index]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;, projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;])
   &lt;span style=&#34;color:#75715e&#34;&gt;# ax.coastlines(resolution=&amp;#39;110m&amp;#39;);&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac    &lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)

  
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
        category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
        name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
        scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
        facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;## Choisissons une colormap&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_under(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkblue&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;## on met en blanc les valeurs inferieures au min de clev&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_over(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkred&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;## bleu fonce pour les valeurs extremes de pluie&lt;/span&gt;

mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon,\
                   TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat,\
                   TAS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-08-01&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;FWI,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0 )
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(lon2d, lat2d, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5 grid points&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(lons, 
           lats, 
           color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grid points within 50 km from reference point&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;68.1461&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), marker&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reference point&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;upper left&amp;#39;&lt;/span&gt;, numpoints&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, ncol&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.legend.Legend at 0xcb86b38&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_35_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ECCC SWOB Stations</title>
      <link>/post/ecc_swob_stations/</link>
      <pubDate>Tue, 18 Feb 2020 13:06:38 -0800</pubDate>
      <guid>/post/ecc_swob_stations/</guid>
      <description>&lt;p&gt;﻿In this post, we will show how to work with Surface Weather Observation from ECCC in XML language (Extensible Markup Language)&lt;/p&gt;
&lt;h3 id=&#34;sw-ob-xml&#34;&gt;SW-OB-XML&lt;/h3&gt;
&lt;p&gt;For xml files, we will use a package called xml which will allow us to decrypt the xml file.&lt;/p&gt;
&lt;p&gt;Pandas does not directly have tools to transform xml into DataFrame because the semi-structured aspect of xml forces us to perform a few steps before filling out a DataFrame.&lt;/p&gt;
&lt;p&gt;We will first download &lt;a href=&#34;https://dd.weather.gc.ca/observations/doc/&#34;&gt;an xml file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are going to work here with the meteorological ground (SWOB-ML) and marine observations data found on the ECCC Datamart.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Data are available at the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h2 id=&#34;earth-observations&#34;&gt;Earth observations:&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://dd.meteo.gc.ca/observations/swob-ml/AAAAMMJJ/XXXX/&#34;&gt;https://dd.meteo.gc.ca/observations/swob-ml/AAAAMMJJ/XXXX/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AAAAMMJJ: observations date, UTC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;XXXX: station ID (OMM ID)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h2 id=&#34;marine-observations&#34;&gt;Marine observations:&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://dd.meteo.gc.ca/observations/swob-ml/marine/moored-buoys/YYYMMDD/XXXXXXX&#34;&gt;https://dd.meteo.gc.ca/observations/swob-ml/marine/moored-buoys/YYYMMDD/XXXXXXX&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;AAAAMMJJ: observations date, UTC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;XXXXXXX: station ID (OMM ID), can be 5 or 7 digits&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h2 id=&#34;partner-observations&#34;&gt;Partner observations:&lt;/h2&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://dd.meteo.gc.ca/observations/swob-ml/partners/NETWORK/YYYMMDD/MSC-ID&#34;&gt;https://dd.meteo.gc.ca/observations/swob-ml/partners/NETWORK/YYYMMDD/MSC-ID&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Where:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NETWORK: acronym of the partner network&lt;/li&gt;
&lt;li&gt;YYYYMMDD: observations date, UTC&lt;/li&gt;
&lt;li&gt;MSC-ID: ID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;################################################&lt;/p&gt;
&lt;h3 id=&#34;description------------------------&#34;&gt;Description                       &lt;/h3&gt;
&lt;p&gt;################################################&lt;/p&gt;
&lt;p&gt;The markup language for ground weather (SWOB Met-ML) and marine observations is an XML format for the distribution of weather data observed by Environment and Climate Change Canada and its partners.&lt;/p&gt;
&lt;p&gt;The list of observation stations is available here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dd.meteo.gc.ca/observations/doc/swob-xml_station_list.csv&#34;&gt;https://dd.meteo.gc.ca/observations/doc/swob-xml_station_list.csv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The list of marine observation stations is available here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dd.meteo.gc.ca/observations/doc/swob-xml_marine_station_list.csv&#34;&gt;https://dd.meteo.gc.ca/observations/doc/swob-xml_marine_station_list.csv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The list of partner stations is available here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://dd.meteo.gc.ca/observations/doc/swob-xml_partner_station_list.csv&#34;&gt;https://dd.meteo.gc.ca/observations/doc/swob-xml_partner_station_list.csv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The format specification is available in the following directory:
&lt;a href=&#34;https://dd.meteo.gc.ca/observations/doc/&#34;&gt;https://dd.meteo.gc.ca/observations/doc/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is the structure of a SWOB file:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;First, we import python librairies and define the date we want to extract:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# importations des librairies &lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime, timedelta
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ET
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; wget
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os 
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; os.path &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; exists
now &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow() &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; timedelta(hours&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;year)
month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month)
day &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;day)
hour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{now.hour:02d}&amp;#39;&lt;/span&gt;
day &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{now.day:02d}&amp;#39;&lt;/span&gt;
month &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{now.month:02d}&amp;#39;&lt;/span&gt;
date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; year&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;day
date
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;20200212&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will list the stations we want to extract: example for the province of Quebec and Ontario.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_table(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;swob-xml_station_list.csv&amp;#34;&lt;/span&gt;, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)
stations_quebec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Province/Territory&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Quebec&amp;#39;&lt;/span&gt;)  ,:]
stations_ontario &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Province/Territory&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Ontario&amp;#39;&lt;/span&gt;)  ,:]
stations_mask&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat([stations_quebec,stations_ontario],axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
stations_mask_sans_NaN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations_mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dropna() 
&lt;span style=&#34;color:#75715e&#34;&gt;#stations_mask_sans_NaN_AUTO = stations_mask_sans_NaN.loc[stations_mask_sans_NaN[&amp;#34;AUTO/MAN&amp;#34;]==&amp;#39;AUTO&amp;#39;,:]&lt;/span&gt;
stations_mask_sans_NaN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;IATA_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;WMO_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;MSC_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Latitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Longitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Elevation(m)&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Data_Provider&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Dataset/Network&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;AUTO/MAN&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Province/Territory&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGAH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LA GRANDE IV&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71823&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7093GJ5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-73.6828&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;306.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGBC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BAIE-COMEAU&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71890&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7040442&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.1351&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-68.2024&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGCH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CHIBOUGAMAU-CHAPAIS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73011&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7091410&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.7773&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-74.5304&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;389.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGCL&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CAUSAPSCAL AIRPORT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73005&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7051201&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.3088&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-67.2528&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;52&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGGA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GASPE AIRPORT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73116&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7052603&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.7833&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-64.4833&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;40&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;1--working-with-one-station&#34;&gt;1- Working with one station&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s work with  CWTQ station ID:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
stid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CWTQ&amp;#39;&lt;/span&gt;
tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://dd.weather.gc.ca/observations/swob-ml/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stid&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;year&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;day&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;hour&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;00-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stid&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-AUTO-swob.xml&amp;#39;&lt;/span&gt;
tmp_file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&#39;https://dd.weather.gc.ca/observations/swob-ml/20200212/CWTQ/2020-02-12-1900-CWTQ-AUTO-swob.xml&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(tmp_file)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;100% [............................................................] 9408 / 9408




&#39;2020-02-12-1900-CWTQ-AUTO-swob.xml&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tree &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(year&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;day&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;hour&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;00-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stid&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-AUTO-swob.xml&amp;#39;&lt;/span&gt;)
root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
children &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getchildren()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is the root of our data to extract:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;Element &#39;{http://www.opengis.net/om/1.0}ObservationCollection&#39; at 0x000000000950ED18&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;children
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;Element &#39;{http://www.opengis.net/om/1.0}member&#39; at 0x000000000950EE08&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Number of elements in our file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# total amount of items&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(len(root))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;for child in root.iter(&#39;*&#39;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print(child.items())

#print(child.keys())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;for child in root.iter(&#39;*&#39;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;print(child)

print(child.attrib)

print(child.attrib.get(&#39;value&#39;))

print(child.attrib.get(&#39;name&#39;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The list of variables is available on page 40 of the document:
&amp;mdash; SWOB-ML_Product_User_Guide_v8.2_f.pdf&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
date_tm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[] 
avg_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
max_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
min_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
max_rel_hum_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
min_rel_hum_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
stn_pres&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
mslp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
pcpn_amt_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
wnd_dir_10m_pst1hr_max_spd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
max_wnd_spd_10m_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
avg_wnd_spd_10m_pst10mts&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
avg_snw_dpth_pst5mts_1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
avg_snw_dpth_pst5mts_2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
avg_snw_dpth_pst5mts_3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]


&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iter(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;):  
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date_tm&amp;#39;&lt;/span&gt;:           &lt;span style=&#34;color:#75715e&#34;&gt;# date of actual observation&lt;/span&gt;
        date_tm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_air_temp_pst1hr&amp;#39;&lt;/span&gt;:  &lt;span style=&#34;color:#75715e&#34;&gt;# average air temperature in the last hour &lt;/span&gt;
        avg_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_air_temp_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# minimum air temperature in the last hour&lt;/span&gt;
        min_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_air_temp_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# maximum air temperature in the last hour &lt;/span&gt;
        max_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_rel_hum_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# maximum relative humidity in the past hour&lt;/span&gt;
        max_rel_hum_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_rel_hum_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# minimum relative humidity in the past hour&lt;/span&gt;
        min_rel_hum_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;)) 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stn_pres&amp;#39;&lt;/span&gt;:         &lt;span style=&#34;color:#75715e&#34;&gt;# pressure at the station (start of the hour)&lt;/span&gt;
        stn_pres&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pcpn_amt_pst1hr&amp;#39;&lt;/span&gt;:   &lt;span style=&#34;color:#75715e&#34;&gt;# amount of precipitation in the past hour&lt;/span&gt;
        pcpn_amt_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))  
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_wnd_spd_10m_pst10mts&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# average wind speed at 10 m for 10 min&lt;/span&gt;
        avg_wnd_spd_10m_pst10mts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))      
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_wnd_spd_10m_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;#  maximum wind speed at 10 m for one hour&lt;/span&gt;
        max_wnd_spd_10m_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))      
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wnd_dir_10m_pst1hr_max_spd&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# Instant wind direction at 10 m for maximum hourly wind speed, min 0 to 60&lt;/span&gt;
        wnd_dir_10m_pst1hr_max_spd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))          
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mslp&amp;#39;&lt;/span&gt;:   &lt;span style=&#34;color:#75715e&#34;&gt;# average sea level pressure&lt;/span&gt;
        mslp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))      
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_1&amp;#39;&lt;/span&gt;:
            avg_snw_dpth_pst5mts_1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_2&amp;#39;&lt;/span&gt;:
            avg_snw_dpth_pst5mts_2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_3&amp;#39;&lt;/span&gt;:
            avg_snw_dpth_pst5mts_3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
            
            
data_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date_tm&amp;#39;&lt;/span&gt;:date_tm, 
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_air_temp_pst1hr&amp;#39;&lt;/span&gt;:avg_air_temp_pst1hr, 
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_air_temp_pst1hr&amp;#39;&lt;/span&gt;:min_air_temp_pst1hr,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_air_temp_pst1hr&amp;#39;&lt;/span&gt;: max_air_temp_pst1hr, 
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_rel_hum_pst1hr&amp;#39;&lt;/span&gt;:max_rel_hum_pst1hr,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_rel_hum_pst1hr&amp;#39;&lt;/span&gt;:min_rel_hum_pst1hr,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stn_pres&amp;#39;&lt;/span&gt;:stn_pres,
         &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mslp&amp;#39;&lt;/span&gt;:mslp,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pcpn_amt_pst1hr&amp;#39;&lt;/span&gt;:pcpn_amt_pst1hr,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_wnd_spd_10m_pst10mts&amp;#39;&lt;/span&gt;:avg_wnd_spd_10m_pst10mts,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wnd_dir_10m_pst1hr_max_spd&amp;#39;&lt;/span&gt;:wnd_dir_10m_pst1hr_max_spd,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_wnd_spd_10m_pst1hr&amp;#39;&lt;/span&gt;:max_wnd_spd_10m_pst1hr,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_1&amp;#39;&lt;/span&gt;:avg_snw_dpth_pst5mts_1,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_2&amp;#39;&lt;/span&gt;:avg_snw_dpth_pst5mts_2,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_3&amp;#39;&lt;/span&gt;:avg_snw_dpth_pst5mts_3
        
       } 

data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(data_dict)           
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;date_tm&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;avg_air_temp_pst1hr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;min_air_temp_pst1hr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;max_air_temp_pst1hr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;max_rel_hum_pst1hr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;min_rel_hum_pst1hr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;stn_pres&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mslp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;pcpn_amt_pst1hr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;avg_wnd_spd_10m_pst10mts&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;wnd_dir_10m_pst1hr_max_spd&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;max_wnd_spd_10m_pst1hr&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;avg_snw_dpth_pst5mts_1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;avg_snw_dpth_pst5mts_2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;avg_snw_dpth_pst5mts_3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2020-02-18T20:00:00.000Z&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;86&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;83&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1006.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1010.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;40.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;151&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;37&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;37&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;2--reading-the-station-list&#34;&gt;2- Reading the station list&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_table(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;swob-xml_station_list.csv&amp;#34;&lt;/span&gt;, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;)
stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;IATA_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;WMO_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;MSC_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Latitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Longitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Elevation(m)&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Data_Provider&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Dataset/Network&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;AUTO/MAN&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Province/Territory&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4400488&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;East Chedabucto Bay&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;44488&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9302000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;45.445&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-60.9538&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4400489&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;West Chedabucto Bay&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;44489&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9302001&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;45.4869&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-61.141&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4400490&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;West Bay of Fundy&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;44490&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9300300&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;44.6606&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-66.3686&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4600303&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Southern Georgia Strait&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;46303&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9102000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.025&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-123.43&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4600304&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Entrance to English Bay&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;46304&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9102001&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.3017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-123.357&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;3--filter-stations-over--a-specific-province&#34;&gt;3- Filter stations over  a specific province&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stations_mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Province/Territory&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Quebec&amp;#39;&lt;/span&gt;,:]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stations_mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;IATA_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;WMO_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;MSC_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Latitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Longitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Elevation(m)&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Data_Provider&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Dataset/Network&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;AUTO/MAN&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Province/Territory&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGAH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LA GRANDE IV&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71823&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7093GJ5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-73.6828&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;306.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGBC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BAIE-COMEAU&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71890&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7040442&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.1351&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-68.2024&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGCH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CHIBOUGAMAU-CHAPAIS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73011&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7091410&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.7773&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-74.5304&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;389.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGCL&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CAUSAPSCAL AIRPORT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73005&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7051201&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.3088&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-67.2528&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;52&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGGA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GASPE AIRPORT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73116&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7052603&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.7833&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-64.4833&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;40&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#stations_mask_sans_NaN = stations_mask.dropna() &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#stations_mask_sans_NaN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We want to work with only stations with automatic recording:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stations_mask_AUTO &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations_mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[stations_mask[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AUTO/MAN&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt;,:]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stations_mask_AUTO&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;IATA_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;WMO_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;MSC_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Latitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Longitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Elevation(m)&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Data_Provider&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Dataset/Network&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;AUTO/MAN&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Province/Territory&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGAH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LA GRANDE IV&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71823&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7093GJ5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-73.6828&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;306.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGBC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BAIE-COMEAU&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71890&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7040442&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.1351&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-68.2024&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGCH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CHIBOUGAMAU-CHAPAIS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73011&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7091410&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.7773&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-74.5304&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;389.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGCL&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CAUSAPSCAL AIRPORT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73005&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7051201&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.3088&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-67.2528&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;52&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGGA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GASPE AIRPORT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73116&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7052603&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.7833&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-64.4833&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;40&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Example of a loop on all stations in Quebec:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; index, row &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stations_mask_AUTO&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iterrows():
    stid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; row[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IATA_ID&amp;#39;&lt;/span&gt;]
    tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://dd.weather.gc.ca/observations/swob-ml/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;date&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stid&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;year&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;day&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;hour&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;00-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;stid&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-AUTO-swob.xml&amp;#39;&lt;/span&gt;
    r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(tmp_file)
   
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;status_code &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
    
    root &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromstring(r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content)
    data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    date_tm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[] 
    avg_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    max_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    min_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    max_rel_hum_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    min_rel_hum_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    stn_pres&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    mslp&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    pcpn_amt_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    wnd_dir_10m_pst1hr_max_spd&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    max_wnd_spd_10m_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    avg_wnd_spd_10m_pst10mts&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    avg_snw_dpth_pst5mts_1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    avg_snw_dpth_pst5mts_2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
    avg_snw_dpth_pst5mts_3&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]

    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; child &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iter(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;):  
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date_tm&amp;#39;&lt;/span&gt;:                   &lt;span style=&#34;color:#75715e&#34;&gt;# date-heure d’observation réelle&lt;/span&gt;
            date_tm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_air_temp_pst1hr&amp;#39;&lt;/span&gt;:  &lt;span style=&#34;color:#75715e&#34;&gt;# température de l&amp;#39;air moyenne au cours de la dernière heure (minutes 00 à 60)&lt;/span&gt;
            avg_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_air_temp_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# température de l&amp;#39;air minimale au cours de la dernière heure (minutes 00 à 60)&lt;/span&gt;
            min_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_air_temp_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# température de l&amp;#39;air maximale au cours de la dernière heure (minutes 00 à 60) &lt;/span&gt;
            max_air_temp_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_rel_hum_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# humidité relative maximale au cours de la dernière heure &lt;/span&gt;
            max_rel_hum_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))    
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_rel_hum_pst1hr&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#75715e&#34;&gt;# humidité relative minimale au cours de la dernière heure&lt;/span&gt;
            min_rel_hum_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;)) 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stn_pres&amp;#39;&lt;/span&gt;:         &lt;span style=&#34;color:#75715e&#34;&gt;# pression à la station (début de l’heure)&lt;/span&gt;
            stn_pres&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pcpn_amt_pst1hr&amp;#39;&lt;/span&gt;:   &lt;span style=&#34;color:#75715e&#34;&gt;# quantité de précipitation au cours de la dernière heure&lt;/span&gt;
            pcpn_amt_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))  
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_wnd_spd_10m_pst10mts&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;# vitesse moyenne du vent à 10 m pendant 10 min&lt;/span&gt;
            avg_wnd_spd_10m_pst10mts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))      
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_wnd_spd_10m_pst1hr&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;#  vitesse maximale du vent à 10 m pendant une heure&lt;/span&gt;
            max_wnd_spd_10m_pst1hr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))      
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wnd_dir_10m_pst1hr_max_spd&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;#Direction instantanée du vent à 10 m pour une vitesse horaire maximale du vent, min 0 à 60&lt;/span&gt;
            wnd_dir_10m_pst1hr_max_spd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))          
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mslp&amp;#39;&lt;/span&gt;:   &lt;span style=&#34;color:#75715e&#34;&gt;# pression moyenne au niveau de la mer&lt;/span&gt;
            mslp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))      
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_1&amp;#39;&lt;/span&gt;:
                avg_snw_dpth_pst5mts_1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_2&amp;#39;&lt;/span&gt;:
                avg_snw_dpth_pst5mts_2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attrib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_3&amp;#39;&lt;/span&gt;:
                avg_snw_dpth_pst5mts_3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(child&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;))


    data_dict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;date_tm&amp;#39;&lt;/span&gt;:date_tm, 
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_air_temp_pst1hr&amp;#39;&lt;/span&gt;:avg_air_temp_pst1hr, 
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_air_temp_pst1hr&amp;#39;&lt;/span&gt;:min_air_temp_pst1hr,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_air_temp_pst1hr&amp;#39;&lt;/span&gt;: max_air_temp_pst1hr, 
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_rel_hum_pst1hr&amp;#39;&lt;/span&gt;:max_rel_hum_pst1hr,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_rel_hum_pst1hr&amp;#39;&lt;/span&gt;:min_rel_hum_pst1hr,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stn_pres&amp;#39;&lt;/span&gt;:stn_pres,
             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mslp&amp;#39;&lt;/span&gt;:mslp,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pcpn_amt_pst1hr&amp;#39;&lt;/span&gt;:pcpn_amt_pst1hr,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_wnd_spd_10m_pst10mts&amp;#39;&lt;/span&gt;:avg_wnd_spd_10m_pst10mts,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wnd_dir_10m_pst1hr_max_spd&amp;#39;&lt;/span&gt;:wnd_dir_10m_pst1hr_max_spd,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_wnd_spd_10m_pst1hr&amp;#39;&lt;/span&gt;:max_wnd_spd_10m_pst1hr,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_1&amp;#39;&lt;/span&gt;:avg_snw_dpth_pst5mts_1,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_2&amp;#39;&lt;/span&gt;:avg_snw_dpth_pst5mts_2,
            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;avg_snw_dpth_pst5mts_3&amp;#39;&lt;/span&gt;:avg_snw_dpth_pst5mts_3

           } 

    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; key,value &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data_dict&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items(): 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; value:
            data_dict[key] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NaN&amp;#39;&lt;/span&gt;
            
    data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(data_dict)
    os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;makedirs(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/SWOB/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;, exist_ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)  

       &lt;span style=&#34;color:#75715e&#34;&gt;# file = &amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/SWOB/&amp;#39;+now.strftime(&amp;#34;%Y%m&amp;#34;)+&amp;#39;/&amp;#39;+str(int(row[&amp;#39;WMO_ID&amp;#39;]))+&amp;#39;_&amp;#39;+now.strftime(&amp;#34;%Y%m&amp;#34;)+&amp;#39;.csv&amp;#39;&lt;/span&gt;
    file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/SWOB/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(row[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MSC_ID&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; exists(file):
        &lt;span style=&#34;color:#75715e&#34;&gt;#print (&amp;#34;File exist&amp;#34;)&lt;/span&gt;
        data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/SWOB/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(row[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MSC_ID&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;,mode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False,header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False) 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;#print (&amp;#34;File not exist&amp;#34;)&lt;/span&gt;
        pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(row)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/SWOB/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(row[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MSC_ID&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;,index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)  
        data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:/Utilisateurs/guillaume/Documents/GitHub/Python_XML/SWOB/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(row[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MSC_ID&amp;#39;&lt;/span&gt;])&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;now&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%Y%m&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;,mode&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;False)  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4--we-will-trace-the-location-of-the-stations&#34;&gt;4- We will trace the location of the stations:&lt;/h3&gt;
&lt;p&gt;We will start by extracting the latitudes and longitudes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;list_lat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AUTO/MAN&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt;,:][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
list_lon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AUTO/MAN&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt;,:][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np

fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;))   
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;))

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac&lt;/span&gt;

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières      &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                    facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
    category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
    name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
    scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
    facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)  

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gridlines()           
mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(list_lon, list_lat, c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SWOB Met-ML MSC&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#mm = ax.scatter(dfstat[&amp;#39;lon&amp;#39;].values, dfstat[&amp;#39;lat&amp;#39;].values, c=&amp;#39;green&amp;#39;, s=400, label=&amp;#39;Site&amp;#39;)&lt;/span&gt;

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;best&amp;#34;&lt;/span&gt;, markerscale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;, scatterpoints&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;)
          
&lt;span style=&#34;color:#75715e&#34;&gt;# Define gridline locations and draw the lines using cartopy&amp;#39;s built-in gridliner:&lt;/span&gt;
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)     
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;canvas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw()
 
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Localisation_SWOB_CANADA.png&amp;#39;&lt;/span&gt;, bbox_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tight&amp;#39;&lt;/span&gt;, pad_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()  
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_32_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;5---just-over-quebec&#34;&gt;5-  Just over Quebec:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;list_lat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AUTO/MAN&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Province/Territory&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Quebec&amp;#39;&lt;/span&gt;),:][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
list_lon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AUTO/MAN&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Province/Territory&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Quebec&amp;#39;&lt;/span&gt;),:][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np

fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;))   
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;))

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac&lt;/span&gt;

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières      &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                    facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
    category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
    name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
    scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
    facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)  

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gridlines()           
mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(list_lon, list_lat, c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SWOB Met-ML MSC&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#mm = ax.scatter(dfstat[&amp;#39;lon&amp;#39;].values, dfstat[&amp;#39;lat&amp;#39;].values, c=&amp;#39;green&amp;#39;, s=400, label=&amp;#39;Site&amp;#39;)&lt;/span&gt;

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;best&amp;#34;&lt;/span&gt;, markerscale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;, scatterpoints&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;)
          
&lt;span style=&#34;color:#75715e&#34;&gt;# Define gridline locations and draw the lines using cartopy&amp;#39;s built-in gridliner:&lt;/span&gt;
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)     
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;canvas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw()
 
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Localisation_SWOB_Quebec.png&amp;#39;&lt;/span&gt;, bbox_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tight&amp;#39;&lt;/span&gt;, pad_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()  
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_35_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;6---if-we-want-to-plot-by-grouping-by-province&#34;&gt;6-  If we want to plot by grouping by province:&lt;/h3&gt;
&lt;p&gt;We only want the &amp;ldquo;Automatic&amp;rdquo; stations and group them by province.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;grouped_dataframe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; stations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[stations[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AUTO/MAN&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AUTO&amp;#39;&lt;/span&gt;,:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Province/Territory&amp;#39;&lt;/span&gt;)
grouped_dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;Province/Territory&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;IATA_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;WMO_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;MSC_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Latitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Longitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Elevation(m)&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Data_Provider&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Dataset/Network&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;AUTO/MAN&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Alberta&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;196&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;240&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;British Columbia&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;101&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;119&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Manitoba&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;44&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;New Brunswick&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;20&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Newfoundland and Labrador&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;34&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Northwest Territories&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;34&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Nova Scotia&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;39&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;42&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Nunavut&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;52&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Ontario&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;103&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;111&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Prince Edward Island&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;103&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;122&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Saskatchewan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;56&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;57&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;Yukon&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;17&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; name,group &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; grouped_dataframe:
   &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(name) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Alberta
British Columbia
Manitoba
New Brunswick
Newfoundland and Labrador
Northwest Territories
Nova Scotia
Nunavut
Ontario
Prince Edward Island
Quebec
Saskatchewan
Yukon
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;grouped_dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_group(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Quebec&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;IATA_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Name&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;WMO_ID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;MSC_ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Latitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Longitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Elevation(m)&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Data_Provider&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Dataset/Network&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;AUTO/MAN&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Province/Territory&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGAH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LA GRANDE IV&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71823&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7093GJ5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-73.6828&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;306.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;49&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGBC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BAIE-COMEAU&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;71890&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7040442&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.1351&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-68.2024&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;50&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGCH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CHIBOUGAMAU-CHAPAIS&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73011&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7091410&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.7773&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-74.5304&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;389.3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;51&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGCL&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CAUSAPSCAL AIRPORT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73005&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7051201&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.3088&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-67.2528&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;123&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;52&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CGGA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;GASPE AIRPORT&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73116&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;7052603&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.7833&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-64.4833&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;40&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MSC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AUTO&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We create a random color list for all of our provinces.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
number_of_colors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(grouped_dataframe)
color &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join([random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;choice(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0123456789ABCDEF&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)])
             &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(number_of_colors)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np


fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;))   
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;))

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac&lt;/span&gt;

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières      &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                    facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
    category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
    name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
    scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
    facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)  

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gridlines()
i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; 
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; name,group &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; grouped_dataframe:
    list_lon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; grouped_dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_group(name)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
    list_lat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; grouped_dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_group(name)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
    
    mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scatter(list_lon, list_lat, c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;color[i], s&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SWOB Met-ML MSC: &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; name  )
    plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;best&amp;#34;&lt;/span&gt;, markerscale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;, scatterpoints&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    i&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Define gridline locations and draw the lines using cartopy&amp;#39;s built-in gridliner:&lt;/span&gt;
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)     
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;canvas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw()
 
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Localisation_SWOB_CANADA.png&amp;#39;&lt;/span&gt;, bbox_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tight&amp;#39;&lt;/span&gt;, pad_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()  
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_42_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Shapefiles in python</title>
      <link>/post/shapefiles_in_python/</link>
      <pubDate>Mon, 17 Feb 2020 11:51:51 -0800</pubDate>
      <guid>/post/shapefiles_in_python/</guid>
      <description>&lt;p&gt;﻿&lt;/p&gt;
&lt;h3 id=&#34;about-vector-data&#34;&gt;About Vector Data&lt;/h3&gt;
&lt;p&gt;Vector data are composed of discrete geometric locations (x, y values) known as vertices that define the “shape” of the 
spatial object.&lt;/p&gt;
&lt;p&gt;The organization of the vertices determines the type of vector that you are working with. There are three types of vector data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Points: Each individual point is defined by a single x, y coordinate. There can be many points in a vector point file. 
&lt;img src=&#34;output_17_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lines: Lines are composed of many (at least 2) vertices, or points, that are connected. For instance, a road or a stream may be represented by a line. This line is composed of a series of segments, each “bend” in the road or stream represents a vertex that has defined x, y location.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;![png](./output_20_1.png)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Polygons: A polygon consists of 3 or more vertices that are connected and “closed”. Thus the outlines of plot boundaries, lakes, oceans, and states or countries are often represented by polygons. Occasionally, a polygon can have a hole in the middle of it (like a doughnut), this is something to be aware of but not an issue you will deal with in this tutorial.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;![png](output_30_1.png)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;shapefiles-points-lines-and-polygons&#34;&gt;Shapefiles: Points, Lines, and Polygons&lt;/h3&gt;
&lt;p&gt;Geospatial data in vector format are often stored in a shapefile format. Because the structure of points, lines, and polygons are different, each individual shapefile can only contain one vector type (all points, all lines or all polygons). You will not find a mixture of point, line and polygon objects in a single shapefile.&lt;/p&gt;
&lt;p&gt;Objects stored in a shapefile often have a set of associated attributes that describe the data. For example, a line shapefile that contains the locations of streams, might contain the associated stream name, stream “order” and other information about each stream line object.&lt;/p&gt;
&lt;p&gt;A shapefile is created by 3 or more files, all of which must retain the same NAME and be stored in the same file directory, in order for you to be able to work with them.&lt;/p&gt;
&lt;h3 id=&#34;shapefile-structure&#34;&gt;Shapefile Structure&lt;/h3&gt;
&lt;p&gt;There are 3 key files associated with any and all shapefiles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.shp: the file that contains the geometry for all features.&lt;/li&gt;
&lt;li&gt;.shx: the file that indexes the geometry.&lt;/li&gt;
&lt;li&gt;.dbf: the file that stores feature attributes in a tabular format.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sometimes, a shapefile will have other associated files including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.prj: the file that contains information on projection format including the coordinate system and projection information. It is a plain text file describing the projection using well-known text (WKT) format.&lt;/li&gt;
&lt;li&gt;.sbn and .sbx: the files that are a spatial index of the features.&lt;/li&gt;
&lt;li&gt;.shp.xml: the file that is the geospatial metadata in XML format, (e.g. ISO 19115 or XML format).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will use the geopandas library to work with vector data in Python. You will also use matplotlib.pyplot to plot your data.&lt;/p&gt;
&lt;p&gt;First, we import librairies.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings; warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pyplot &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; geopandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; gpd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1--point-shapefile&#34;&gt;1- Point shapefile&lt;/h3&gt;
&lt;p&gt;We can then open our first shapefile which contains point locations&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shapes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shapefiles\BV_SJ_ponts.shp&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each object in a shapefile has one or more attributes associated with it. Shapefile attributes are similar to fields or columns in a spreadsheet. Each row in the spreadsheet has a set of columns associated with it that describe the row element. In the case of a shapefile, each row represents a spatial object - for example, a road, represented as a line in a line shapefile, will have one “row” of attributes associated with it. These attributes can include different types of information that describe objects stored within a shapefile.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Id&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;ORIG_FID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;OCEAN_EN&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;OCEAN_FR&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;WSCSSDA&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;WSCSDA&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;WSCMDA&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;WSCSSDA_EN&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;WSCSDA_EN&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;WSCMDA_EN&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;WSCSSDA_FR&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;WSCSDA_FR&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;WSCMDA_FR&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;BUFF_DIST&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;ORIG_FID_1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Shape_Leng&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Shape_Area&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;geometry&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Atlantic Ocean&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OcÃ©an Atlantique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01AE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01A&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint John and Southern Bay of Fundy (N.B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Maritime Provinces Drainage Area&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint-Jean et sud de la baie de Fundy (N.-B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aire de drainage des provinces Maritimes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23.6325&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.74042&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;POINT (-68.31290411677341 47.93509135554499)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Atlantic Ocean&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OcÃ©an Atlantique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01AE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01A&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint John and Southern Bay of Fundy (N.B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Maritime Provinces Drainage Area&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint-Jean et sud de la baie de Fundy (N.-B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aire de drainage des provinces Maritimes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23.6325&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.74042&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;POINT (-68.10019745512986 47.8385423546759)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Atlantic Ocean&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OcÃ©an Atlantique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01AE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01A&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint John and Southern Bay of Fundy (N.B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Maritime Provinces Drainage Area&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint-Jean et sud de la baie de Fundy (N.-B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aire de drainage des provinces Maritimes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23.6325&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.74042&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;POINT (-68.05084811719591 47.67967312057342)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Atlantic Ocean&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OcÃ©an Atlantique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01AE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01A&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint John and Southern Bay of Fundy (N.B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Maritime Provinces Drainage Area&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint-Jean et sud de la baie de Fundy (N.-B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aire de drainage des provinces Maritimes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23.6325&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.74042&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;POINT (-67.94013835894734 47.46553718633378)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Atlantic Ocean&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;OcÃ©an Atlantique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01AE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;01A&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;01&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint John and Southern Bay of Fundy (N.B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Maritime Provinces Drainage Area&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fish (Maine)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saint-Jean et sud de la baie de Fundy (N.-B.)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aire de drainage des provinces Maritimes&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;23.6325&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.74042&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;POINT (-67.79256589502562 47.36265881338679)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Notice that the geopandas data structure is a data.frame that contains a geometry column where the x, y point location values are stored. All of the other shapefile feature attributes are contained in columns, similar to what you may be used to if you’ve used a GIS tool such as ArcGIS or QGIS.&lt;/p&gt;
&lt;h3 id=&#34;shapefile-metadata--attributes&#34;&gt;Shapefile Metadata &amp;amp; Attributes&lt;/h3&gt;
&lt;p&gt;When you import the  shapefile layer into Python the gpd.read_file() function automatically stores information about the data as attributes. You are particularly interested in the geospatial metadata, describing the format, CRS, extent, and other components of the vector data, and the attributes which describe properties associated with each individual vector object.&lt;/p&gt;
&lt;h3 id=&#34;spatial-metadata&#34;&gt;Spatial Metadata&lt;/h3&gt;
&lt;p&gt;Key metadata for all shapefiles include:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- Object Type: the class of the imported object.
- Coordinate Reference System (CRS): the projection of the data.
- Extent: the spatial extent (geographic area that the shapefile covers) of the shapefile. Note that the spatial extent for a shapefile represents the extent for ALL spatial objects in the shapefile.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can view shapefile metadata using the class(), .crs and .total_bounds methods:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;type(shapes)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;geopandas.geodataframe.GeoDataFrame
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;total_bounds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([-70.40000541,  45.21527633, -65.03721851,  48.06254733])
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;crs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;{&#39;init&#39;: &#39;epsg:4269&#39;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The CRS for our data is epsg code: 4269.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geom_type&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;0    Point
1    Point
dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;0    POINT (-68.31290411677341 47.93509135554499)
1     POINT (-68.10019745512986 47.8385423546759)
2    POINT (-68.05084811719591 47.67967312057342)
3    POINT (-67.94013835894734 47.46553718633378)
4    POINT (-67.79256589502562 47.36265881338679)
Name: geometry, dtype: object
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;how-many-features-are-in-your-shapefile&#34;&gt;How Many Features Are in Your Shapefile?&lt;/h3&gt;
&lt;p&gt;You can view the number of features (counted by the number of rows in the attribute table) and feature attributes (number of columns) in our data using the pandas .shape method. Note that the data are returned as a vector of two values:&lt;/p&gt;
&lt;p&gt;(rows, columns)&lt;/p&gt;
&lt;p&gt;Also note that the number of columns includes a column where the geometry (the x, y coordinate locations) are stored.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(72, 18)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;plot-our-shapefile&#34;&gt;Plot our Shapefile&lt;/h3&gt;
&lt;p&gt;you can visualize the data in your Python geodata.frame object using the .plot() method.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[:, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;geometry&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x9b129b0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_17_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2--linestring-shapefile&#34;&gt;2- Linestring shapefile&lt;/h3&gt;
&lt;p&gt;We had previously a POINT object.&lt;/p&gt;
&lt;p&gt;We will then convert POINT to LINESTRING.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; shapely.geometry &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; LineString, mapping

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;point_to_linestring&lt;/span&gt;(fili_shps):
    gdf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_file(fili_shps) &lt;span style=&#34;color:#75715e&#34;&gt;#POINTS&lt;/span&gt;
    latlon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [mapping(x)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coordinates&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; gdf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry]
    lats &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; latlon]
    lons &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; latlon]
    linestr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LineString(zip(lons, lats))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GeoDataFrame(index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], crs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;gdf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;crs, geometry&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[linestr])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;line_shapes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; point_to_linestring(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shapefiles\BV_SJ_ponts.shp&amp;#34;&lt;/span&gt;)
line_shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[:, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;geometry&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xa55f128&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_20_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;line_shapes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;geometry&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;LINESTRING (-68.31290411677341 47.93509135554499, &amp;hellip; )&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;If we want to save our new shapefile:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;line_shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shapefiles\BV_SJ_lines.shp&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And for example we can save latitude and longitude values into csv format:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; shapefile
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;shp2csv&lt;/span&gt;(shp_file):
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;Outputs a csv file based on input shapefile vertices&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
    
    out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;splitext(shp_file)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_pnts.csv&amp;#39;&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(out, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; csv:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; shapefile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Reader(shp_file) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; sf:

            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; shp_rec &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; sf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shapeRecords():
                csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(shp_rec&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;record))

                &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; pnt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; shp_rec&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;points:
                    csv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(pnt))

shp2csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shapefiles\BV_SJ_lines.shp&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
BV_border &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.\shapefiles\BV_SJ_lines_pnts.csv&amp;#39;&lt;/span&gt;, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;,skiprows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lon&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lat&amp;#34;&lt;/span&gt;]
BV_border[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lon&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;BV_border[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lon&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply(pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_numeric,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
BV_border[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lat&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;BV_border[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lat&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply(&lt;span style=&#34;color:#66d9ef&#34;&gt;lambda&lt;/span&gt; x: x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;apply(pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_numeric,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon
BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(BV_border, ignore_index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;lon&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;lat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-68.1002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47.8385&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-68.0508&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47.6797&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-67.9401&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47.4655&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-67.7926&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47.3627&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-67.6059&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47.4158&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; cartopy.io.shapereader &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Reader
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ShapelyFeature

fname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;shapefiles\BV_SJ_lines.shp&amp;#39;&lt;/span&gt;

fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), frameon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)  
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Robinson())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;])
        
&lt;span style=&#34;color:#75715e&#34;&gt;#ax.coastlines(resolution=&amp;#39;110m&amp;#39;);&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac&lt;/span&gt;
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières &lt;/span&gt;
        
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                            facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
        category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
        name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
         scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
         facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)  
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;)  
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gridlines()


        &lt;span style=&#34;color:#75715e&#34;&gt;# Define gridline locations and draw the lines using cartopy&amp;#39;s built-in gridliner:&lt;/span&gt;
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
        
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;canvas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw()
colors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;]
maskBV &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BV&amp;#39;&lt;/span&gt;]                      
cs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon,BV_border&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;colors[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;maskBV[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
shape_feature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ShapelyFeature(Reader(fname)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometries(),
                                ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(shape_feature, facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;best&amp;#34;&lt;/span&gt;, markerscale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)     
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./figure.png&amp;#39;&lt;/span&gt;, bbox_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tight&amp;#39;&lt;/span&gt;, pad_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()  
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
       

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Terminé&amp;#39;&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_27_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Terminé
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;3--polygon-shapefile&#34;&gt;3- Polygon shapefile&lt;/h3&gt;
&lt;p&gt;We can now convert our linestring shapefile to a polygon shapefile:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; shapely.geometry &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Polygon, mapping

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;linestring_to_polygon&lt;/span&gt;(fili_shps):
    gdf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_file(fili_shps) &lt;span style=&#34;color:#75715e&#34;&gt;#LINESTRING&lt;/span&gt;
    geom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; gdf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry]
    all_coords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mapping(geom[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coordinates&amp;#39;&lt;/span&gt;]
    lats &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; all_coords]
    lons &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; all_coords]
    linestr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Polygon(zip(lons, lats))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GeoDataFrame(index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], crs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;gdf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;crs, geometry&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[linestr])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;poly_shapes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; linestring_to_polygon(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shapefiles\BV_SJ_lines.shp&amp;#34;&lt;/span&gt;)
poly_shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_file(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;shapefiles\BV_SJ_WGS84.shp&amp;#39;&lt;/span&gt;)
poly_shapes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[:, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;geometry&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xa5f0a90&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_30_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;poly_shapes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;geometry&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;POLYGON ((-68.31290411677341 47.93509135554499, &amp;hellip;))&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;4--check-if-a-point-in-inside-a-polygon&#34;&gt;4- Check if a point in inside a polygon&lt;/h3&gt;
&lt;p&gt;Function bellow will check if a point, defined by a specific latitude and longitude, is inside or not a polygon shapefile.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check&lt;/span&gt;(lon, lat, ds_in):
  lyr_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds_in&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GetLayer(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)  
  &lt;span style=&#34;color:#75715e&#34;&gt;# create point geometry&lt;/span&gt;
  pt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ogr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geometry(ogr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;wkbPoint)
  pt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SetPoint_2D(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, lon, lat)
  &lt;span style=&#34;color:#75715e&#34;&gt;# go over all the polygons in the layer see if one include the point&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; feat_in &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lyr_in:
    &lt;span style=&#34;color:#75715e&#34;&gt;# roughly subsets features, instead of go over everything&lt;/span&gt;
    ply &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; feat_in&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GetGeometryRef()
    &lt;span style=&#34;color:#75715e&#34;&gt;# test&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ply&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Contains(pt):
      &lt;span style=&#34;color:#75715e&#34;&gt;# TODO do what you need to do here&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Point in shapefile polygon&amp;#39;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(lon, lat)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(True)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Point not in shapefile polygon&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds_in  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ogr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;shapefiles\BV_SJ_WGS84.shp&amp;#34;&lt;/span&gt;)
lon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;68.&lt;/span&gt;
lat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;
ind &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; check(lon, lat, ds_in)
ind
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Point in shapefile polygon

(-68.0, 47)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; cartopy.io.shapereader &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Reader
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ShapelyFeature

fname &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;shapefiles\BV_SJ_WGS84.shp&amp;#39;&lt;/span&gt;
fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;), frameon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)  
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Robinson())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;70&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;])
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac&lt;/span&gt;
   
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                            facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)    
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
            category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
            name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
            scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
            facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;) 
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ind[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], ind[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;go&amp;#39;&lt;/span&gt;, ms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geodetic())

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text(ind[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, ind[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, 
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Point in shapefile polygon&amp;#39;&lt;/span&gt;, 
                va&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;, 
                ha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geodetic(), fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;48.5&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ro&amp;#39;&lt;/span&gt;, ms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geodetic())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;48.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, 
                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Point outside shapefile polygon&amp;#39;&lt;/span&gt;, 
                va&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;, 
                ha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geodetic(), fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;)

shape_feature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ShapelyFeature(Reader(fname)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometries(),
                                ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(), edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(shape_feature, facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_35_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Canadian shapefile province</title>
      <link>/post/province_shapefiles/</link>
      <pubDate>Fri, 14 Feb 2020 09:14:48 -0800</pubDate>
      <guid>/post/province_shapefiles/</guid>
      <description>&lt;p&gt;﻿&lt;/p&gt;
&lt;h3 id=&#34;from-shapefiles-to-netcdf-mask&#34;&gt;From shapefiles to Netcdf Mask&lt;/h3&gt;
&lt;p&gt;In this tutorial, we will use shapefiles to create masks over canadian provinces.&lt;/p&gt;
&lt;p&gt;We will use gridded dataset ANUSPLIN meteorological data.&lt;/p&gt;
&lt;p&gt;Agriculture and Agri-Food Canada have produced daily precipitation, minimum and maximum temperature across Canada (south of 60°N) for climate related application purpose using thin-plate smoothing splines, as implemented in the ANUSPLIN climate modeling software (Hutchinson et al., 2009; McKenney et al., 2011).&lt;/p&gt;
&lt;p&gt;The so-called ANUSPLIN data uses ground-based observations and generates daily gridded data from 1951 to 2017 on a Lambert conformal conic projection with 5’ arc minutes spacing (equivalent to a resolution of about 10 km). The key strength of this spatial interpolation method is its global dependence on all data, permitting robust and stable determination of spatially varying dependences on elevation. Hutchinson et al. (2009) have shown that while ANUSPLIN fall month’s absolute errors were remarkably small, those of winter months were quite large due to rather difficult observation and measurement conditions.&lt;/p&gt;
&lt;p&gt;Data are available on this &lt;a href=&#34;ftp://ftp.nrcan.gc.ca/pub/outgoing/canada_daily_grids&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I will present a  solution based on open-source Python modules:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    - xarray: for manipulating &amp;amp; reading gridded data, and – very important – operate out-of-memory thanks to its dask capabilities
    - numpy: for simple array manipulations
    - geopandas: to open shapefiles
    - osgeo: 
    - matplotlib: for plotting
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1--first-we-need-to-import-librairies-and-create-aliases&#34;&gt;1- First we need to import librairies and create aliases.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; regionmask
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; geopandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; gpd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; osgeo &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; ogr
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings; warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;working-over-canadian-province&#34;&gt;Working over canadian province&lt;/h4&gt;
&lt;p&gt;In this example we will use canadian province shapefiles developped by statistics canada.&lt;/p&gt;
&lt;p&gt;Shapefiles are available on this &lt;a href=&#34;https://www12.statcan.gc.ca/census-recensement/2011/geo/bound-limit/bound-limit-2016-eng.cfm&#34;&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After downloaded the shapefile, we must load it using geopandas library:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;PATH_TO_SHAPEFILE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Canadian_province/lpr_000b16a_e/lpr_000b16a_e.shp&amp;#39;&lt;/span&gt;
province &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_file(PATH_TO_SHAPEFILE)
province
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;PRUID&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PRNAME&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PRENAME&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PRFNAME&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PREABBR&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;PRFABBR&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Newfoundland and Labrador / Terre-Neuve-et-Labrador&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Newfoundland and Labrador&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Terre-Neuve-et-Labrador&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.L.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;T.-N.-L.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Prince Edward Island / Île-du-Prince-Édouard&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Prince Edward Island&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Île-du-Prince-Édouard&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;P.E.I.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Î.-P.-É.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nova Scotia / Nouvelle-Écosse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nova Scotia&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nouvelle-Écosse&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.S.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.-É.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;13&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Brunswick / Nouveau-Brunswick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;New Brunswick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nouveau-Brunswick&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.B.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.-B.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec / Québec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Québec&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Que.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Qc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;35&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ontario&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ontario&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ontario&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ont.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ont.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;46&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Manitoba&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Manitoba&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Manitoba&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Man.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Man.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saskatchewan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saskatchewan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Saskatchewan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sask.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sask.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alberta&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alberta&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alberta&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alta.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alb.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;British Columbia / Colombie-Britannique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;British Columbia&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Colombie-Britannique&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;B.C.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;C.-B.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yukon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yukon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yukon&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y.T.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;61&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Northwest Territories / Territoires du Nord-Ouest&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Northwest Territories&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Territoires du Nord-Ouest&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N.W.T.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;T.N.-O.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nunavut&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nunavut&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nunavut&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nvt.&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nt&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Shapes are here a GeoDataFrame containing all polygons illustrating the province boundaries.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ID_PROV &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PRNAME[ID_PROV])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Ontario
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[:, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;geometry&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xad67400&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output_6_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tmpWGS84 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_crs({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;proj&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longlat&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ellps&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;WGS84&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datum&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;WGS84&amp;#39;&lt;/span&gt;})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tmpWGS84&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x1327ac88&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output_8_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now we can load the ANUSPLIN_10km gridded data. The parameter chunks is very important, it defines how big are the “pieces” of data moved from the disk to the memory. With this value the entire computation on a workstation with 32 GB takes a couple of minutes.&lt;/p&gt;
&lt;p&gt;We will load all the temperature files using Xarray library.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ANUSPLIN_10km_YEAR_Mean_tasmoy_1950-2017&amp;#39;&lt;/span&gt;
t_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/DONNEES_AMERIQUE_DU_NORD/ANUSPLIN_10km/Netcdf/INDICES_ANNEES/Mean_tasmoy/&amp;#39;&lt;/span&gt;        
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; model &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.nc&amp;#39;&lt;/span&gt;
ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_mfdataset(data, chunks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;})
ds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:      (time: 68, x: 510, y: 1068)
Coordinates:
    lon          (y, x) float32 dask.array&amp;lt;shape=(1068, 510), chunksize=(1068, 510)&amp;gt;
    lat          (y, x) float32 dask.array&amp;lt;shape=(1068, 510), chunksize=(1068, 510)&amp;gt;
  * time         (time) float64 1.0 2.0 3.0 4.0 5.0 ... 64.0 65.0 66.0 67.0 68.0
Dimensions without coordinates: x, y
Data variables:
    Mean_tasmoy  (time, y, x) float32 dask.array&amp;lt;shape=(68, 1068, 510), chunksize=(10, 1068, 510)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our xarray Dataset contains a single variable (Mean_tasmoy) which is stored as a dask.array. This is the result of loading files with open_mfdataset.&lt;/p&gt;
&lt;p&gt;Now we will use  regionmask module to create a gridded mask with the function regions_cls documented &lt;a href=&#34;https://regionmask.readthedocs.io/en/stable/generated/regionmask.Regions_cls.html#regionmask.Regions_cls&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this function we will create an object able to mask ANUSPLIN gridded data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;province_mask_poly &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; regionmask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Regions_cls(name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PRENAME&amp;#39;&lt;/span&gt;, numbers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;)), names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(tmpWGS84&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PRENAME), abbrevs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(tmpWGS84&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PRENAME), outlines &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(tmpWGS84&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[i] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;)))
province_mask_poly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;13 &#39;PRENAME&#39; Regions ()
Newfoundland and Labrador Prince Edward Island Nova Scotia New Brunswick Quebec Ontario Manitoba Saskatchewan Alberta British Columbia Yukon Northwest Territories Nunavut
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are ready to apply the mask on the gridded dataset xarray ANUSPLIN.&lt;/p&gt;
&lt;p&gt;We select only the first timestep to speed up the process.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; province_mask_poly&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mask(ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), lat_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;, lon_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;)
mask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray (y: 1068, x: 510)&amp;gt;
array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       ...,
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan]])
Coordinates:
  * y        (y) int64 0 1 2 3 4 5 6 7 ... 1061 1062 1063 1064 1065 1066 1067
  * x        (x) int64 0 1 2 3 4 5 6 7 8 ... 501 502 503 504 505 506 507 508 509
    lat      (y, x) float32 83.45833 83.375 83.291664 ... 41.125 41.041668
    lon      (y, x) float32 -140.95833 -140.95833 ... -52.04167 -52.04167
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray (y: 1068, x: 510)&amp;gt;
array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       ...,
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan]])
Coordinates:
  * y        (y) int64 0 1 2 3 4 5 6 7 ... 1061 1062 1063 1064 1065 1066 1067
  * x        (x) int64 0 1 2 3 4 5 6 7 8 ... 501 502 503 504 505 506 507 508 509
    lat      (y, x) float32 83.45833 83.375 83.291664 ... 41.125 41.041668
    lon      (y, x) float32 -140.95833 -140.95833 ... -52.04167 -52.04167
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mask can be saved (for example as a NetCDF) for a later use.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./mask_all_province.nc&amp;#39;&lt;/span&gt;) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A quick visualisation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x1b989828&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output_20_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2--extract-one-province&#34;&gt;2- Extract one province&lt;/h3&gt;
&lt;p&gt;We will sho how to mask Ontario province.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ID_PROV &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PRNAME[ID_PROV])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Ontario
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray (y: 1068, x: 510)&amp;gt;
array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       ...,
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan]])
Coordinates:
  * y        (y) int64 0 1 2 3 4 5 6 7 ... 1061 1062 1063 1064 1065 1066 1067
  * x        (x) int64 0 1 2 3 4 5 6 7 8 ... 501 502 503 504 505 506 507 508 509
    lat      (y, x) float32 83.45833 83.375 83.291664 ... 41.125 41.041668
    lon      (y, x) float32 -140.95833 -140.95833 ... -52.04167 -52.04167
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; ID_PROV)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:      (time: 68, x: 510, y: 1068)
Coordinates:
  * y            (y) int64 0 1 2 3 4 5 6 ... 1061 1062 1063 1064 1065 1066 1067
  * x            (x) int64 0 1 2 3 4 5 6 7 8 ... 502 503 504 505 506 507 508 509
    lon          (y, x) float32 dask.array&amp;lt;shape=(1068, 510), chunksize=(1068, 510)&amp;gt;
    lat          (y, x) float32 dask.array&amp;lt;shape=(1068, 510), chunksize=(1068, 510)&amp;gt;
  * time         (time) float64 1.0 2.0 3.0 4.0 5.0 ... 64.0 65.0 66.0 67.0 68.0
Data variables:
    Mean_tasmoy  (time, y, x) float32 dask.array&amp;lt;shape=(68, 1068, 510), chunksize=(10, 1068, 510)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quick visualisation, we will display the first step of our DataArray masked.&lt;/p&gt;
&lt;p&gt;For out_sel2 array :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
out_sel2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Mean_tasmoy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
province&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x18bc95f8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output_28_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Ontario.nc&amp;#39;&lt;/span&gt;) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mpl
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; netCDF4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Dataset, num2date
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

filename&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Ontario.nc&amp;#39;&lt;/span&gt;
nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Dataset(filename,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Mean_tasmoy&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;squeeze()
lons&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;squeeze()
lats&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;squeeze()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(68, 1068, 510)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s use Xarray to compute climatology over 1988-2017.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data_m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;:,:,:]
clim_89_2017&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;data_m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
clim_89_2017&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(1068, 510)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;), frameon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)  
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;, projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;])
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac&lt;/span&gt;
   
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                            facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)    
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
            category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
            name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
            scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
            facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;) 

 
mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(lons,\
                   lats,\
                   clim_89_2017,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.&lt;/span&gt;),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet )
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gridlines()

&lt;span style=&#34;color:#75715e&#34;&gt;# Define gridline locations and draw the lines using cartopy&amp;#39;s built-in gridliner:&lt;/span&gt;
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_label(&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Projection = Lambert Conformal Conic &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Resolution: 5 Arcs-Minutes (10 km)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Data provided by Natural Resources Canada / Created by Guillaume Dueymes&amp;#39;&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;medium&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# Affichage de la légende de la barre de couleur&lt;/span&gt;

cbar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(mm,  shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.75&lt;/span&gt;, drawedges&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;,extend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;)
cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick_params(labelsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;) 
    
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Temperature / Température (°C)&amp;#39;&lt;/span&gt;,size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x-large&amp;#39;&lt;/span&gt;)
string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Climate normals of mean annual temperature (°C)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; 1988 - 2017&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./ANUSPLIN_Ontario_10km_YEAR_CLIM_1988-2017.png&amp;#39;&lt;/span&gt;, bbox_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tight&amp;#39;&lt;/span&gt;, pad_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show() 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;./output_34_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Web scraping using Python</title>
      <link>/post/scrap_eccc/</link>
      <pubDate>Fri, 07 Feb 2020 12:55:20 -0800</pubDate>
      <guid>/post/scrap_eccc/</guid>
      <description>&lt;p&gt;﻿&lt;/p&gt;
&lt;h3 id=&#34;scraping-web-data-using-python&#34;&gt;Scraping web data using Python&lt;/h3&gt;
&lt;p&gt;In this tutorial, we  will see how to scrap data from Environment Canada webpage.&lt;/p&gt;
&lt;h3 id=&#34;1--exploring-the-structure-of-the-eccc-web-page&#34;&gt;1- Exploring the structure of the ECCC web page&lt;/h3&gt;
&lt;p&gt;We will extract the current weather conditions and weather forecast for &lt;a href=&#34;https://meteo.gc.ca/city/pages/qc-147_metric_f.html&#34;&gt;Montreal&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#75715e&#34;&gt;# we download the web page&lt;/span&gt;
page &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://meteo.gc.ca/city/pages/qc-147_metric_e.html&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Using BeautifulSoup to analyze html code&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; bs4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; BeautifulSoup

&lt;span style=&#34;color:#75715e&#34;&gt;# we will analyze the previous content with BeautifulSoup&lt;/span&gt;
soup &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; BeautifulSoup(page&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;content,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;html.parser&amp;#39;&lt;/span&gt;)
soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;/&amp;gt;,
 &amp;lt;meta content=&amp;quot;width=device-width, initial-scale=1&amp;quot; name=&amp;quot;viewport&amp;quot;/&amp;gt;,
 &amp;lt;meta content=&amp;quot;Environment Canada&amp;quot; name=&amp;quot;dcterms.creator&amp;quot;/&amp;gt;,
 &amp;lt;meta content=&amp;quot;eng&amp;quot; name=&amp;quot;dcterms.language&amp;quot; title=&amp;quot;ISO639-2&amp;quot;/&amp;gt;,
 &amp;lt;meta content=&amp;quot;Current conditions and forecasts including 7 day outlook, daily high/low temperature, warnings, chance of precipitation, pressure, humidity/wind chill (when applicable) historical data, normals, record values and sunrise/sunset times&amp;quot; name=&amp;quot;description&amp;quot;/&amp;gt;,
 &amp;lt;meta content=&amp;quot;meteorology;weather;weather warnings;weather forecasts&amp;quot; name=&amp;quot;dcterms.subject&amp;quot; title=&amp;quot;scheme&amp;quot;/&amp;gt;,
 &amp;lt;meta content=&amp;quot;2013-04-16&amp;quot; name=&amp;quot;dcterms.issued&amp;quot; title=&amp;quot;W3CDTF&amp;quot;/&amp;gt;,
 &amp;lt;meta content=&amp;quot;2020-02-07&amp;quot; name=&amp;quot;dcterms.modified&amp;quot; title=&amp;quot;W3CDTF&amp;quot;/&amp;gt;,
 &amp;lt;title&amp;gt;Montréal, QC - 7 Day Forecast - Environment Canada&amp;lt;/title&amp;gt;,
 &amp;lt;meta content=&amp;quot;Montréal, QC - 7 Day Forecast - Environment Canada&amp;quot; name=&amp;quot;dcterms.title&amp;quot;/&amp;gt;,
 &amp;lt;link href=&amp;quot;/template/gcweb/v5.0.1/assets/favicon.ico&amp;quot; rel=&amp;quot;icon&amp;quot; type=&amp;quot;image/x-icon&amp;quot;/&amp;gt;,
 &amp;lt;link href=&amp;quot;/template/gcweb/v5.0.1/css/theme.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;,
 &amp;lt;link href=&amp;quot;/v175/css/city/jquery-ui-1.10.3.custom.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;,
 &amp;lt;noscript&amp;gt;&amp;lt;link href=&amp;quot;/template/gcweb/v5.0.1/css/noscript.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;&amp;lt;/noscript&amp;gt;,
 &amp;lt;link href=&amp;quot;/template/gcweb/v5.0.1/css/noscript.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;,
 &amp;lt;link href=&amp;quot;/rss/city/qc-147_e.xml&amp;quot; rel=&amp;quot;alternate&amp;quot; title=&amp;quot;ATOM feed for Montréal - Weather - Environment Canada&amp;quot; type=&amp;quot;application/atom+xml&amp;quot;/&amp;gt;,
 &amp;lt;link href=&amp;quot;/rss/warning/qc-147_e.xml&amp;quot; rel=&amp;quot;alternate&amp;quot; title=&amp;quot;ATOM feed for Montréal - Warning - Environment Canada&amp;quot; type=&amp;quot;application/atom+xml&amp;quot;/&amp;gt;,
 &amp;lt;link href=&amp;quot;/v175/css/city/city.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;,
 &amp;lt;link href=&amp;quot;https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;,
 &amp;lt;link href=&amp;quot;/v175/css/wxotemplate/wxo.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
 &amp;lt;link href=&amp;quot;/v175/css/wxotemplate/print-sm.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;
 &amp;lt;!--[if lte IE 9]&amp;gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;/v175/css/wxotemplate/wxo-ie8.css&amp;quot; /&amp;gt;&amp;lt;![endif]--&amp;gt;
 &amp;lt;/link&amp;gt;,
 &amp;lt;link href=&amp;quot;/v175/css/wxotemplate/print-sm.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;Montréal, QC - 7 Day Forecast - Environment Canada&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1---reading-current-conditions&#34;&gt;1-  Reading current conditions&lt;/h3&gt;
&lt;h4 id=&#34;column-1&#34;&gt;Column 1&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;conditions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mainContent&amp;#34;&lt;/span&gt;)
col1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conditions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dl-horizontal wxo-conds-col1&amp;#34;&lt;/span&gt;)
today1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; col1[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;#print(today1.prettify())&lt;/span&gt;
tmp1  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; today1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;select(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.mrgn-bttm-0&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tmp1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;dd class=&amp;quot;mrgn-bttm-0&amp;quot;&amp;gt;Light Snow and Blowing Snow&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-metric-hide&amp;quot;&amp;gt;98.5 &amp;lt;abbr title=&amp;quot;kilopascals&amp;quot;&amp;gt;kPa&amp;lt;/abbr&amp;gt;
&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-imperial-hide wxo-city-hidden&amp;quot;&amp;gt;29.1 inches&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0&amp;quot;&amp;gt;Falling&amp;lt;/dd&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;short_desc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [tmp1[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()]
short_desc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;Light Snow and Blowing Snow&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;pression &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [tmp1[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)]
trend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[ tmp1[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;weather &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;short_desc&amp;#34;&lt;/span&gt;: short_desc,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pression&amp;#34;&lt;/span&gt;:   pression,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;trend&amp;#34;&lt;/span&gt;:   trend,
                       })
weather
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;short_desc&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;pression&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;trend&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Light Snow and Blowing Snow&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;98.5 kPa&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Falling&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;column-2&#34;&gt;Column 2&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;col2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conditions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dl-horizontal wxo-conds-col2&amp;#34;&lt;/span&gt;)
today2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; col2[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;#print(today2.prettify())&lt;/span&gt;
tmp2  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; today2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;select(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.mrgn-bttm-0&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tmp2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-metric-hide&amp;quot;&amp;gt;-6.7°&amp;lt;abbr title=&amp;quot;Celsius&amp;quot;&amp;gt;C&amp;lt;/abbr&amp;gt;
&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-imperial-hide wxo-city-hidden&amp;quot;&amp;gt;19.9°
                    &amp;lt;abbr title=&amp;quot;Fahrenheit&amp;quot;&amp;gt;F&amp;lt;/abbr&amp;gt;
&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-metric-hide&amp;quot;&amp;gt;-8.8°&amp;lt;abbr title=&amp;quot;Celsius&amp;quot;&amp;gt;C&amp;lt;/abbr&amp;gt;
&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-imperial-hide wxo-city-hidden&amp;quot;&amp;gt;16.2°&amp;lt;abbr title=&amp;quot;Fahrenheit&amp;quot;&amp;gt;F&amp;lt;/abbr&amp;gt;
&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0&amp;quot;&amp;gt;85%&amp;lt;/dd&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [tmp2[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)]
rosee &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [tmp2[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)]
humidity &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [tmp2[&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;weather &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temperature&amp;#34;&lt;/span&gt;: temperature,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temperature_rosee&amp;#34;&lt;/span&gt;:   rosee,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;humidity&amp;#34;&lt;/span&gt;:   humidity,
                       })
weather
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;temperature&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;temperature_rosee&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;humidity&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-6.7°C&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-8.8°C&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;85%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;column-3&#34;&gt;Column 3&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;col3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conditions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dl-horizontal wxo-conds-col3&amp;#34;&lt;/span&gt;)
today3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; col3[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;#print(today2.prettify())&lt;/span&gt;
tmp3  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; today3&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;select(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.mrgn-bttm-0&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(tmp3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;dd class=&amp;quot;longContent mrgn-bttm-0 wxo-metric-hide&amp;quot;&amp;gt;
&amp;lt;abbr title=&amp;quot;North&amp;quot;&amp;gt;N&amp;lt;/abbr&amp;gt; 35  &amp;lt;br class=&amp;quot;visible-xs&amp;quot;/&amp;gt;gust 53 &amp;lt;abbr title=&amp;quot;kilometres per hour&amp;quot;&amp;gt;km/h&amp;lt;/abbr&amp;gt;
&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;longContent mrgn-bttm-0 wxo-imperial-hide wxo-city-hidden&amp;quot;&amp;gt;
&amp;lt;abbr title=&amp;quot;North&amp;quot;&amp;gt;N&amp;lt;/abbr&amp;gt; 22  &amp;lt;br class=&amp;quot;visible-xs&amp;quot;/&amp;gt;gust 33 &amp;lt;abbr title=&amp;quot;miles per hour&amp;quot;&amp;gt;mph&amp;lt;/abbr&amp;gt;
&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-metric-hide&amp;quot;&amp;gt;-16&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-imperial-hide wxo-city-hidden&amp;quot;&amp;gt;3&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-metric-hide&amp;quot;&amp;gt;0.8 &amp;lt;abbr title=&amp;quot;kilometres&amp;quot;&amp;gt;km&amp;lt;/abbr&amp;gt;
&amp;lt;/dd&amp;gt;, &amp;lt;dd class=&amp;quot;mrgn-bttm-0 wxo-imperial-hide wxo-city-hidden&amp;quot;&amp;gt;0.5 mile
                        &amp;lt;/dd&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;wind &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [tmp3[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)]
visibility &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [tmp3[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;weather &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;short_desc&amp;#34;&lt;/span&gt;: short_desc,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pression&amp;#34;&lt;/span&gt;:   pression,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trend&amp;#34;&lt;/span&gt;:   trend,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temperature&amp;#34;&lt;/span&gt;: temperature,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temperature_rosee&amp;#34;&lt;/span&gt;:   rosee,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;humidity&amp;#34;&lt;/span&gt;:   humidity,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wind&amp;#34;&lt;/span&gt;:   wind,
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;visibility&amp;#34;&lt;/span&gt;:   visibility,
                       })
weather
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;short_desc&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;pression&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Trend&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;temperature&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;temperature_rosee&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;humidity&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;wind&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;visibility&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Light Snow and Blowing Snow&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;98.5 kPa&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Falling&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-6.7°C&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-8.8°C&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;85%&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N 35  gust 53 km/h&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-16&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;weather&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;current.csv&amp;#34;&lt;/span&gt;, header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True, sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;,encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2---reading-forecasting-values&#34;&gt;2-  Reading forecasting values&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;period_tags &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mainContent&amp;#34;&lt;/span&gt;)
row1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; period_tags&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;div-row div-row1 div-row-head&amp;#34;&lt;/span&gt;)
row1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;div class=&amp;quot;div-row div-row1 div-row-head&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;/forecast/hourly/qc-147_metric_e.html&amp;quot;&amp;gt;&amp;lt;strong title=&amp;quot;Friday&amp;quot;&amp;gt;Fri&amp;lt;/strong&amp;gt;&amp;lt;br/&amp;gt;7 &amp;lt;abbr title=&amp;quot;February&amp;quot;&amp;gt;Feb&amp;lt;/abbr&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;,
 &amp;lt;div class=&amp;quot;div-row div-row1 div-row-head&amp;quot;&amp;gt;
 &amp;lt;strong title=&amp;quot;Saturday&amp;quot;&amp;gt;Sat&amp;lt;/strong&amp;gt;&amp;lt;br/&amp;gt;8 &amp;lt;abbr title=&amp;quot;February&amp;quot;&amp;gt;Feb&amp;lt;/abbr&amp;gt;
 &amp;lt;/div&amp;gt;,
 &amp;lt;div class=&amp;quot;div-row div-row1 div-row-head&amp;quot;&amp;gt;
 &amp;lt;strong title=&amp;quot;Sunday&amp;quot;&amp;gt;Sun&amp;lt;/strong&amp;gt;&amp;lt;br/&amp;gt;9 &amp;lt;abbr title=&amp;quot;February&amp;quot;&amp;gt;Feb&amp;lt;/abbr&amp;gt;
 &amp;lt;/div&amp;gt;,
 &amp;lt;div class=&amp;quot;div-row div-row1 div-row-head&amp;quot;&amp;gt;
 &amp;lt;strong title=&amp;quot;Monday&amp;quot;&amp;gt;Mon&amp;lt;/strong&amp;gt;&amp;lt;br/&amp;gt;10 &amp;lt;abbr title=&amp;quot;February&amp;quot;&amp;gt;Feb&amp;lt;/abbr&amp;gt;
 &amp;lt;/div&amp;gt;,
 &amp;lt;div class=&amp;quot;div-row div-row1 div-row-head&amp;quot;&amp;gt;
 &amp;lt;strong title=&amp;quot;Tuesday&amp;quot;&amp;gt;Tue&amp;lt;/strong&amp;gt;&amp;lt;br/&amp;gt;11 &amp;lt;abbr title=&amp;quot;February&amp;quot;&amp;gt;Feb&amp;lt;/abbr&amp;gt;
 &amp;lt;/div&amp;gt;,
 &amp;lt;div class=&amp;quot;div-row div-row1 div-row-head&amp;quot;&amp;gt;
 &amp;lt;strong title=&amp;quot;Wednesday&amp;quot;&amp;gt;Wed&amp;lt;/strong&amp;gt;&amp;lt;br/&amp;gt;12 &amp;lt;abbr title=&amp;quot;February&amp;quot;&amp;gt;Feb&amp;lt;/abbr&amp;gt;
 &amp;lt;/div&amp;gt;,
 &amp;lt;div class=&amp;quot;div-row div-row1 div-row-head&amp;quot;&amp;gt;
 &amp;lt;strong title=&amp;quot;Thursday&amp;quot;&amp;gt;Thu&amp;lt;/strong&amp;gt;&amp;lt;br/&amp;gt;13 &amp;lt;abbr title=&amp;quot;February&amp;quot;&amp;gt;Feb&amp;lt;/abbr&amp;gt;
 &amp;lt;/div&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;period_tags &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mainContent&amp;#34;&lt;/span&gt;)
row1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; period_tags&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;div-row div-row1 div-row-head&amp;#34;&lt;/span&gt;)
periods &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [pt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\xa0&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; pt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; row1]
periods
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;Fri7 Feb&#39;,
 &#39;Sat8 Feb&#39;,
 &#39;Sun9 Feb&#39;,
 &#39;Mon10 Feb&#39;,
 &#39;Tue11 Feb&#39;,
 &#39;Wed12 Feb&#39;,
 &#39;Thu13 Feb&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;period_tags &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mainContent&amp;#34;&lt;/span&gt;)
row2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; period_tags&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;div-row div-row2 div-row-data&amp;#34;&lt;/span&gt;)
row2[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&amp;quot;div-row div-row2 div-row-data&amp;quot;&amp;gt;
&amp;lt;img alt=&amp;quot;A mix of sun and cloud&amp;quot; class=&amp;quot;center-block&amp;quot; height=&amp;quot;51&amp;quot; src=&amp;quot;/weathericons/02.gif&amp;quot; width=&amp;quot;60&amp;quot;/&amp;gt;&amp;lt;p class=&amp;quot;mrgn-bttm-0&amp;quot;&amp;gt;&amp;lt;span class=&amp;quot;high wxo-metric-hide&amp;quot; title=&amp;quot;max&amp;quot;&amp;gt;-13°&amp;lt;abbr title=&amp;quot;Celsius&amp;quot;&amp;gt;C&amp;lt;/abbr&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;quot;high wxo-imperial-hide wxo-city-hidden&amp;quot; title=&amp;quot;max&amp;quot;&amp;gt;9°&amp;lt;abbr title=&amp;quot;Fahrenheit&amp;quot;&amp;gt;F&amp;lt;/abbr&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p class=&amp;quot;mrgn-bttm-0 pop text-center&amp;quot;&amp;gt; &amp;lt;/p&amp;gt;
&amp;lt;p class=&amp;quot;mrgn-bttm-0&amp;quot;&amp;gt;A mix of sun and cloud&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;period_tags &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; soup&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(id&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mainContent&amp;#34;&lt;/span&gt;)
row2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; period_tags&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;div-row div-row2 div-row-data&amp;#34;&lt;/span&gt;)
temperature_f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [pt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;][:] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; pt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; row2]
temperature_f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;-5°C23°F&#39;,
 &#39;-13°C9°F&#39;,
 &#39;-6°C21°F&#39;,
 &#39;-3°C27°F&#39;,
 &#39;-2°C28°F&#39;,
 &#39;-6°C21°F&#39;,
 &#39;-6°C21°F&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;temperature_2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[]
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; val &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; enumerate(temperature_f):
    temperature_2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(val[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C&amp;#39;&lt;/span&gt;)
temperature_2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;-5°C&#39;, &#39;-13°C&#39;, &#39;-6°C&#39;, &#39;-3°C&#39;, &#39;-2°C&#39;, &#39;-6°C&#39;, &#39;-6°C&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;conditions_f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [pt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_text()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;split(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; pt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; row2]
conditions_f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;Snow at times heavy and blowing snow&#39;,
 &#39;A mix of sun and cloud&#39;,
 &#39;Sunny&#39;,
 &#39;Snow&#39;,
 &#39;Periods of snow&#39;,
 &#39;A mix of sun and cloud&#39;,
 &#39;Chance of flurries&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;weather_f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Period&amp;#34;&lt;/span&gt;: periods,
                       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;temperature_f&amp;#34;&lt;/span&gt;: temperature_f,
                       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;conditions_f&amp;#34;&lt;/span&gt;:conditions_f,
                       })
weather_f

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Period&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;temperature_f&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;conditions_f&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Fri7 Feb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-5°C23°F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Snow at times heavy and blowing snow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sat8 Feb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-13°C9°F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A mix of sun and cloud&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sun9 Feb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-6°C21°F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Sunny&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Mon10 Feb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-3°C27°F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Snow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tue11 Feb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-2°C28°F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Periods of snow&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Wed12 Feb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-6°C21°F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;A mix of sun and cloud&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Thu13 Feb&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;-6°C21°F&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Chance of flurries&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;3--download-of-weather-icons-for-the-next-7-days&#34;&gt;3- Download of weather icons for the next 7 days&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; urllib &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; request
row3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; period_tags&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find_all(class_&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;div-row div-row2 div-row-data&amp;#34;&lt;/span&gt;)
i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; images &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; row3:
    s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; images&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;)
    f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(str(i) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.gif&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt;)
    f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(request&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;urlopen(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://meteo.gc.ca/weathericons/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(s)[str(s)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gif&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:(str(s)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gif&amp;#39;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.gif&amp;#34;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read())
    f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close() 
    i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;scrap.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;weather_f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;forecast.csv&amp;#34;&lt;/span&gt;, header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; True, sep &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;,encoding&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Web Map Service and Cartopy</title>
      <link>/post/cartopy_wms/</link>
      <pubDate>Fri, 07 Feb 2020 12:42:01 -0800</pubDate>
      <guid>/post/cartopy_wms/</guid>
      <description>&lt;h2 id=&#34;cartopy-add-wms-image-from-environment-canada&#34;&gt;Cartopy: Add WMS image from Environment Canada&lt;/h2&gt;
&lt;p&gt;In this tutorial, we will use a Web Map Service and Cartopy python library to display products from Environment Canada&lt;/p&gt;
&lt;p&gt;A Web Map Service (WMS) defines an interface that allows a client to get maps of geospatial data and gain detailed information on specific features shown on the map. A &amp;ldquo;map&amp;rdquo; is defined here as a visual representation of geospatial data, not the geospatial data itself.&lt;/p&gt;
&lt;p&gt;Environnement Canada generates and archives  moasic .png images every 5 minutes. These images are served as a Web Map Service. This notebook shows how to add those images to a cartopy figure axes.&lt;/p&gt;
&lt;p&gt;Here is a &lt;a href=&#34;https://eccc-msc.github.io/open-data/msc-data/readme_fr/&#34;&gt;link&lt;/a&gt; with availables datasets.&lt;/p&gt;
&lt;p&gt;Data Source: &lt;a href=&#34;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=RADAR_1KM_RRAI&#34;&gt;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=RADAR_1KM_RRAI&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1--plot-rrai-1-km-for-a-specific-date&#34;&gt;1- plot RRAI 1 km for a specific date&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;DATE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime(&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)

fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))

ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STATES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;# Date string format for data request&lt;/span&gt;
strDATE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DATE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;T%H:%M:%SZ&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; DATE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%H:%M UTC &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %b %Y&amp;#39;&lt;/span&gt;), loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title( &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RADAR_1km_RRAI&amp;#39;&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;, fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;)
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
                layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RADAR_1KM_RRAI&amp;#39;&lt;/span&gt; ,
                wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;:strDATE, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stock_img()
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;))   

fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots_adjust(wspace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.02&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_3_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2--plot-the-most-recent-time-available&#34;&gt;2- Plot the most recent time available&lt;/h3&gt;
&lt;p&gt;Simply leave out the &amp;lsquo;time&amp;rsquo; argument in the wms_kwargs dict. The transparent option should default to True.&lt;/p&gt;
&lt;p&gt;The timestamp of the image is retrieved from the &lt;a href=&#34;https://mesonet.agron.iastate.edu/data/gis/images/4326/USCOMP/n0q_0.json&#34;&gt;JSON file&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Get the metadata for the most recent NEXRAD image from JSON file.&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_timestamp&lt;/span&gt;():
    f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://mesonet.agron.iastate.edu/data/gis/images/4326/USCOMP/n0q_0.json&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;json()
    validDATE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strptime(f[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;meta&amp;#39;&lt;/span&gt;][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;valid&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;T%H:%M:%SZ&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; validDATE
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latest Image:&amp;#39;&lt;/span&gt;, get_timestamp())
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Current Time:&amp;#39;&lt;/span&gt;, datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow())

diff &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;utcnow()&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;get_timestamp())
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Difference (minutes):&amp;#39;&lt;/span&gt;, diff&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;seconds&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Latest Image: 2020-02-07 19:15:00
Current Time: 2020-02-07 19:17:32.276824
Difference (minutes): 2.533333333333333
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))

ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                     projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STATES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;# Date string format for data reques&lt;/span&gt;

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Most Recent Time&amp;#39;&lt;/span&gt;, fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; get_timestamp()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%H:%M UTC &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %b %Y&amp;#39;&lt;/span&gt;), loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
           layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
           wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# ^ For current time (most recent time in last 5 minutes), leave the &amp;#39;time&amp;#39; &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   wms_kwargs unassigned. Transparetn should be True by default, but it&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   doesn&amp;#39;t hurt to be explicit.&lt;/span&gt;

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;)) 

fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots_adjust(wspace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.02&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_7_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3&#34;&gt;3&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))

ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                         projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STATES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
    
&lt;span style=&#34;color:#75715e&#34;&gt;# Date string format for data request&lt;/span&gt;
strDATE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DATE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;T%H:%M:%SZ&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Most Recent Time&amp;#39;&lt;/span&gt;, fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; get_timestamp()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%H:%M UTC &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %b %Y&amp;#39;&lt;/span&gt;), loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
           layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
           wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;))
&lt;span style=&#34;color:#75715e&#34;&gt;# ^ If you add a background image or use tiles you neet to set transparent&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   as True and set the zorder as a higher number, i.e. 10.&lt;/span&gt;
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;stock_img()
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;])   
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STATES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;# Date string format for data reques&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# https://mesonet.agron.iastate.edu/docs/nexrad_mosaic/&lt;/span&gt;

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Most Recent Time&amp;#39;&lt;/span&gt;, fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; get_timestamp()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%H:%M UTC &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %b %Y&amp;#39;&lt;/span&gt;), loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
           layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
           wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;)) 
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots_adjust(wspace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.02&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_9_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;An other example using &lt;a href=&#34;https://mesonet.agron.iastate.edu/docs/nexrad_composites/&#34;&gt;NEXRAD mosaic&lt;/a&gt;  image from Iowa Environmental Mesonet.&lt;/p&gt;
&lt;p&gt;See the data source URL for dBZ colormaps. You can generate an approximate colormap with MetPy&amp;rsquo;s NWSReflectivity and NWSReflectivityExpanded ctables.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;N0Q: Base Reflectivity - 8 bit/0.5 dbz resolution&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;colorbars&#34;&gt;Colorbars&lt;/h4&gt;
&lt;p&gt;See the data source website for the real colormaps.&lt;/p&gt;
&lt;p&gt;Approximate colorbars can be made with metpy. The NWSReflectivity colormap is nearly exact for N0R, but NWSReflectivityExpanded is very different for N0Q. When I need it, I probably will make a custom colormap sometime in the future.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; metpy.plots &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; colortables
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
ctable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NWSReflectivityExpanded&amp;#39;&lt;/span&gt;
norm, cmap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; colortables&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_with_steps(ctable, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.5&lt;/span&gt;)

fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))

ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STATES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;# Date string format for data reques&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# https://mesonet.agron.iastate.edu/docs/nexrad_mosaic/&lt;/span&gt;

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Most Recent Time&amp;#39;&lt;/span&gt;, fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; get_timestamp()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%H:%M UTC &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %b %Y&amp;#39;&lt;/span&gt;), loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0q-t.cgi?&amp;#39;&lt;/span&gt;,
           layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nexrad-n0q-wmst&amp;#39;&lt;/span&gt;,
           wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# ^ For current time (most recent time in last 5 minutes), leave the &amp;#39;time&amp;#39; &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   wms_kwargs unassigned. Transparetn should be True by default, but it&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   doesn&amp;#39;t hurt to be explicit.&lt;/span&gt;
norm, cmap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; colortables&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_with_steps(ctable, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.5&lt;/span&gt;)

fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;# Make a placeholder mesh that the colorbar will be made with,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# then remove the axis and the image&lt;/span&gt;
im &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pcolormesh(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]),norm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;norm, cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axis(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;off&amp;#39;&lt;/span&gt;)
im&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove()

&lt;span style=&#34;color:#75715e&#34;&gt;# Add the colorbar&lt;/span&gt;
cbar_ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_axes([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;])
cbar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(im, cax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cbar_ax, orientation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horizontal&amp;#39;&lt;/span&gt;,
                    label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;N0Q: &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ctable)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;)) 

fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots_adjust(wspace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.02&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_11_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;output_11_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can combine these two differents products:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))

ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STATES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
    
&lt;span style=&#34;color:#75715e&#34;&gt;# Date string format for data request&lt;/span&gt;
strDATE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DATE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;T%H:%M:%SZ&amp;#39;&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RADAR_1km_RRAI&amp;#39;&lt;/span&gt;, fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; get_timestamp()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%H:%M UTC &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %b %Y&amp;#39;&lt;/span&gt;), loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
           layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RADAR_1KM_RRAI&amp;#39;&lt;/span&gt;,
           wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;# ^ If you add a background image or use tiles you neet to set transparent&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#   as True and set the zorder as a higher number, i.e. 10.&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;])  

ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STATES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;# Date string format for data reques&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# https://mesonet.agron.iastate.edu/docs/nexrad_mosaic/&lt;/span&gt;

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NOQ&amp;#39;&lt;/span&gt;, fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; get_timestamp()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%H:%M UTC &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %b %Y&amp;#39;&lt;/span&gt;), loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://mesonet.agron.iastate.edu/cgi-bin/wms/nexrad/n0q-t.cgi?&amp;#39;&lt;/span&gt;,
           layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nexrad-n0q-wmst&amp;#39;&lt;/span&gt;,
           wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;)) 
fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots_adjust(wspace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.02&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_13_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;exemple-2--gdps&#34;&gt;Exemple 2 : GDPS&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))

ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                     projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
&lt;span style=&#34;color:#75715e&#34;&gt;# Date string format for data reques&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Most Recent Time&amp;#39;&lt;/span&gt;, fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;, loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; get_timestamp()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%H:%M UTC &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; %b %Y&amp;#39;&lt;/span&gt;), loc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=GDPS.ETA_TT&amp;#39;&lt;/span&gt;,
           layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GDPS.ETA_TT&amp;#39;&lt;/span&gt;,
           wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_wms(wms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://geo.weather.gc.ca/geomet?service=WMS&amp;amp;version=1.3.0&amp;amp;request=GetCapabilities&amp;amp;layer=GDPS.ETA_UU&amp;#39;&lt;/span&gt;,
           layers&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;GDPS.ETA_UU&amp;#39;&lt;/span&gt;,
           wms_kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;transparent&amp;#39;&lt;/span&gt;:True}, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;STATES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent((&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;120&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_16_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Create Synoptic NARR map</title>
      <link>/post/narr_synoptic/</link>
      <pubDate>Fri, 07 Feb 2020 11:31:00 -0800</pubDate>
      <guid>/post/narr_synoptic/</guid>
      <description>&lt;h3 id=&#34;working-with-netcd4-python-data-synoptic-map&#34;&gt;Working with Netcd4-python data: Synoptic map&lt;/h3&gt;
&lt;p&gt;In this tutorial, we will use the features of the Python xarray library to process and analyze Netcdf files.
We will then use matplotlib to plot it, and cartopy to map our analyse.&lt;/p&gt;
&lt;p&gt;We will see the different steps to plot an exemple of synoptic map over North America with:
+ geopotential 850hpa 
+ Temperature 850hpa
+ UU,VV 250hpa&lt;/p&gt;
&lt;p&gt;We fist import the necessary packages. The plt.rcParams[&amp;lsquo;figure.figsize&amp;rsquo;] just sets the size of the inline figures in this notebook to make them larger and easier to read.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mpl
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;figure.figsize&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will work with fields from NARR reanalysis at pressure levels.&lt;/p&gt;
&lt;p&gt;Data can be directly download on this &lt;a href=&#34;ftp://ftp.cdc.noaa.gov/Datasets/NARR/pressure/&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tas &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/NARR/3hrs/NARR_air_lc_2018_01_3hrs.nc&amp;#39;&lt;/span&gt;)
uu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/NARR/3hrs/NARR_uwnd_lc_2018_01_3hrs.nc&amp;#39;&lt;/span&gt;)
vv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/NARR/3hrs/NARR_vwnd_lc_2018_01_3hrs.nc&amp;#39;&lt;/span&gt;)
omega &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/NARR/Daily/omega/NARR_omega_lc_2018_01_d.nc&amp;#39;&lt;/span&gt;)
hgt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_dataset(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/NARR/3hrs/NARR_hgt_lc_2018_01_3hrs.nc&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;--exploring-the-data&#34;&gt;- Exploring the data&lt;/h3&gt;
&lt;p&gt;We can quickly explore our datasets by using some methods of the xarray library:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- DS.var
- DS.dims
= DS.coords
- DS.attrs
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;hgt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:            (level: 29, time: 248, x: 349, y: 277)
Coordinates:
  * time               (time) datetime64[ns] 2018-01-01 ... 2018-01-31T21:00:00
  * level              (level) float32 1000.0 975.0 950.0 ... 150.0 125.0 100.0
    lat                (y, x) float32 ...
    lon                (y, x) float32 ...
  * y                  (y) float32 0.0 32463.0 64926.0 ... 8927325.0 8959788.0
  * x                  (x) float32 0.0 32463.0 64926.0 ... 11264660.0 11297120.0
Data variables:
    Lambert_Conformal  int32 ...
    hgt                (time, level, y, x) float32 ...
Attributes:
    Conventions:    CF-1.2
    centerlat:      50.0
    centerlon:      -107.0
    comments:       
    institution:    National Centers for Environmental Prediction
    latcorners:     [ 1.000001  0.897945 46.3544   46.63433 ]
    loncorners:     [-145.5       -68.32005    -2.569891  148.6418  ]
    platform:       Model
    standardpar1:   50.0
    standardpar2:   50.000001
    title:          8x Daily NARR
    history:        created Mon Jul 18 17:37:00 MDT 2016 by NOAA/ESRL/PSD
    dataset_title:  NCEP North American Regional Reanalysis (NARR)
    references:     https://www.esrl.noaa.gov/psd/data/gridded/data.narr.html
    source:         http://www.emc.ncep.noaa.gov/mmb/rreanl/index.html
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;hgt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coords
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Coordinates:
  * time     (time) datetime64[ns] 2018-01-01 ... 2018-01-31T21:00:00
  * level    (level) float32 1000.0 975.0 950.0 925.0 ... 150.0 125.0 100.0
    lat      (y, x) float32 ...
    lon      (y, x) float32 ...
  * y        (y) float32 0.0 32463.0 64926.0 ... 8894862.0 8927325.0 8959788.0
  * x        (x) float32 0.0 32463.0 64926.0 ... 11264660.0 11297120.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can quickly explore our datasets by using some methods of the xarray library.&lt;/p&gt;
&lt;p&gt;We want to analyse a specific date : 13/01/2018 at 12UTC.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;time
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;time&#39; (time: 248)&amp;gt;
array([&#39;2018-01-01T00:00:00.000000000&#39;, &#39;2018-01-01T03:00:00.000000000&#39;,
       &#39;2018-01-01T06:00:00.000000000&#39;, ..., &#39;2018-01-31T15:00:00.000000000&#39;,
       &#39;2018-01-31T18:00:00.000000000&#39;, &#39;2018-01-31T21:00:00.000000000&#39;],
      dtype=&#39;datetime64[ns]&#39;)
Coordinates:
  * time     (time) datetime64[ns] 2018-01-01 ... 2018-01-31T21:00:00
Attributes:
    axis:                T
    coordinate_defines:  point
    delta_t:             0000-00-00 03:00:00
    long_name:           Time
    standard_name:       time
    actual_range:        [1910952. 1911693.]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#To select a specifi date: &lt;/span&gt;
date &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2018-01-13T12&amp;#39;&lt;/span&gt;
tas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;date)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;340&lt;/span&gt;), y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;230&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:            (x: 280, y: 180)
Coordinates:
    time               datetime64[ns] 2018-01-13T12:00:00
    level              float32 500.0
    lat                (y, x) float32 ...
    lon                (y, x) float32 ...
  * y                  (y) float32 1623150.0 1655613.0 ... 7401564.0 7434027.0
  * x                  (x) float32 1947780.0 1980243.0 ... 10972490.0 11004960.0
Data variables:
    Lambert_Conformal  int32 ...
    air                (y, x) float32 ...
Attributes:
    Conventions:    CF-1.2
    centerlat:      50.0
    centerlon:      -107.0
    comments:       
    institution:    National Centers for Environmental Prediction
    latcorners:     [ 1.000001  0.897945 46.3544   46.63433 ]
    loncorners:     [-145.5       -68.32005    -2.569891  148.6418  ]
    platform:       Model
    standardpar1:   50.0
    standardpar2:   50.000001
    title:          8x Daily NARR
    history:        created Mon Jul 18 17:31:43 MDT 2016 by NOAA/ESRL/PSD
    dataset_title:  NCEP North American Regional Reanalysis (NARR)
    references:     https://www.esrl.noaa.gov/psd/data/gridded/data.narr.html
    source:         http://www.emc.ncep.noaa.gov/mmb/rreanl/index.html
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;hgt850 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hgt[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hgt&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;date)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;850&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;340&lt;/span&gt;), y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;230&lt;/span&gt;))
tt850 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tas[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;air&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;date)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;850&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;340&lt;/span&gt;), y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;230&lt;/span&gt;))
urel250 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; uu[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uwnd&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;date)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;340&lt;/span&gt;), y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;230&lt;/span&gt;))
vrel250 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vv[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;vwnd&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(time&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;date)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(level&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;340&lt;/span&gt;), y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;slice(&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;230&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;plotMap&lt;/span&gt;():
    &lt;span style=&#34;color:#75715e&#34;&gt;#Set the projection information&lt;/span&gt;
    proj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal(central_longitude&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;97.0&lt;/span&gt;,central_latitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;, standard_parallels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;])
    &lt;span style=&#34;color:#75715e&#34;&gt;#Create a figure with an axes object on which we will plot. Pass the projection to that axes.&lt;/span&gt;
    fig, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplots(subplot_kw&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;dict(projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;proj))
    
    &lt;span style=&#34;color:#75715e&#34;&gt;#Zoom in&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#ax.set_extent([-140,-60,10,70])&lt;/span&gt;
    
    &lt;span style=&#34;color:#75715e&#34;&gt;#Add map features&lt;/span&gt;
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND, facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0.9&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;#Grayscale colors can be set using 0 (black) to 1 (white)&lt;/span&gt;
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.9&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;#Alpha sets transparency (0 is transparent, 1 is solid)&lt;/span&gt;
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COASTLINE, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

    &lt;span style=&#34;color:#75715e&#34;&gt;#We can use additional features from Natural Earth (http://www.naturalearthdata.com/features/)&lt;/span&gt;
    states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
            category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,  name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
            scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;, facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
    
    &lt;span style=&#34;color:#75715e&#34;&gt;#Add lat/lon gridlines every 20° to the map&lt;/span&gt;
    ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gridlines(xlocs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;361&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;), ylocs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;90&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)) 
    
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fig, ax
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We specify the interval for our height contours. We use numpy&amp;rsquo;s function arange to select a range of contours from 500 to 2000 m, every 60 m.&lt;/p&gt;
&lt;p&gt;A key thing to note is the transform argument at the end of the contour call. This is what tells matplotlib to transform our variable in lat/lon coordinates onto our map projection coordinates.&lt;/p&gt;
&lt;p&gt;We then plot temperature in filled contours. Matplotlib has many colormaps from which to choose. Here, we use cm.jet_r.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Import scipy.ndimage to get the gaussian_filter function&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scipy.ndimage &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ndimage
hght_levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;) 
&lt;span style=&#34;color:#75715e&#34;&gt;#Plot a new figure and map axes&lt;/span&gt;
fig, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plotMap()
&lt;span style=&#34;color:#75715e&#34;&gt;## Choisissons une colormap&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet_r
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_under(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;## on met en blanc les valeurs inferieures au min de clev&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_over(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkblue&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;#Smooth and re-plot the temperature field&lt;/span&gt;
tt_smooth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ndimage&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gaussian_filter(tt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;273.15&lt;/span&gt;, sigma&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;, order&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
tt_contour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(tt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, tt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, tt_smooth, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,  
                           cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;cmap0, transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())

&lt;span style=&#34;color:#75715e&#34;&gt;#Smooth and re-plot the height field&lt;/span&gt;
hght_smooth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ndimage&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gaussian_filter(hgt850, sigma&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, order&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
hght_contour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contour(hgt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon, hgt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat, hght_smooth, levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;hght_levels, linewidths&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, colors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;k&amp;#39;&lt;/span&gt;,transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
&lt;span style=&#34;color:#75715e&#34;&gt;#Plot contour labels for the heights, leaving a break in the contours for the text (inline=True)&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clabel(hght_contour,  hght_levels, inline&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, fmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%1i&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;a list of 18 text.Text objects&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_13_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can improve our synoptic map with adding wind barbs in Knots and using our own colormap.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#Import scipy.ndimage to get the gaussian_filter function&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scipy.ndimage &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ndimage
hght_levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;) 
tt_levels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) 
&lt;span style=&#34;color:#75715e&#34;&gt;#Plot a new figure and map axes&lt;/span&gt;
fig, ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plotMap()
&lt;span style=&#34;color:#75715e&#34;&gt;## Choisissons une colormap&lt;/span&gt;
Y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;115&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;181&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;160&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;222&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;195&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;93&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;177&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;95&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;227&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;224&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;248&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;202&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;250&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;179&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;181&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;139&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;81&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;72&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;157&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;240&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;96&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;213&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;166&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;241&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;247&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;248&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;185&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;68&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;124&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;235&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;78&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;215&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;189&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;162&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;135&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;65&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;107&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;73&lt;/span&gt;]])&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;255.&lt;/span&gt;

colbar&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListedColormap(Y)

cmap0&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jet_r
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_under(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;## on met en blanc les valeurs inferieures au min de clev&lt;/span&gt;
cmap0&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_over(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;darkblue&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;#Smooth and re-plot the temperature field&lt;/span&gt;
tt_smooth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ndimage&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gaussian_filter(tt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;273.15&lt;/span&gt;, sigma&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.5&lt;/span&gt;, order&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
tt_contour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contourf(tt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, tt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, tt_smooth,  levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tt_levels, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,  
                           cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;colbar, transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())

&lt;span style=&#34;color:#75715e&#34;&gt;#Smooth and re-plot the height field&lt;/span&gt;
hght_smooth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ndimage&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gaussian_filter(hgt850, sigma&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, order&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
hght_contour &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;contour(hgt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon, hgt850&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat, hght_smooth, levels&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;hght_levels, linewidths&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, colors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;,transform &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())
&lt;span style=&#34;color:#75715e&#34;&gt;#Plot contour labels for the heights, leaving a break in the contours for the text (inline=True)&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;clabel(hght_contour,  hght_levels, inline&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, fmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%1i&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;#Plot the barbs&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;barbs(urel250&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, urel250&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values, urel250&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.944&lt;/span&gt;, vrel250&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.944&lt;/span&gt;, regrid_shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, zorder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree())

&lt;span style=&#34;color:#75715e&#34;&gt;#Create a colorbar and shrink it down a bit.&lt;/span&gt;
cb &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(tt_contour, shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, ticks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;40.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))

&lt;span style=&#34;color:#75715e&#34;&gt;#Set the title&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;850-hPa Heights, 850-hPa Temperature, Wind (kts) &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(date), fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Text(0.5, 1.0, &#39;850-hPa Heights, 850-hPa Temperature, Wind (kts) \n 2018-01-13T12&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;output_15_1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Python connection to MSS Server</title>
      <link>/post/mss_server/</link>
      <pubDate>Fri, 07 Feb 2020 10:57:37 -0800</pubDate>
      <guid>/post/mss_server/</guid>
      <description>&lt;h3 id=&#34;connexion-to-microsoft-sql-server-management-studio&#34;&gt;Connexion to Microsoft SQL Server Management Studio&lt;/h3&gt;
&lt;p&gt;This is a short tutorial to connect python to a Miscrosoft SQL Server.&lt;/p&gt;
&lt;h3 id=&#34;steps-to-connect-with-pyodbc-python-library&#34;&gt;Steps to connect with pyodbc python library&lt;/h3&gt;
&lt;p&gt;You need to know some informations on your local server, database and tables you want to connect:
In our case: 
- The Server Name is: DESKTOP-BE6M578
- The Database Name is: BDSOPFEU
- The Table Name is: dbo.Meteo_stations
- The Table dbo.Meteo_stations containes stations information&lt;/p&gt;
&lt;h3 id=&#34;1-retrieve-your-server-name&#34;&gt;1 Retrieve your server name&lt;/h3&gt;
&lt;p&gt;You can get your server name by opening Microsoft SQL Server. You’ll then see the Connect to Server box, where the server name will be displayed.&lt;/p&gt;
&lt;p&gt;In my case, the server name is: DESKTOP-BE6M578&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-retrieve-your-database-name&#34;&gt;2 Retrieve your Database name&lt;/h3&gt;
&lt;p&gt;Next, you’ll need to obtain the database name in which your desired table is stored.&lt;/p&gt;
&lt;p&gt;You can find the database name under the Object Explorer menu (underneath the Databases section) which is located on the left-hand side of your SQL Server.&lt;/p&gt;
&lt;p&gt;In our example, the database name is: BDSOPFEU&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3-get-the-table-name&#34;&gt;3 Get the table name&lt;/h3&gt;
&lt;p&gt;Now you’ll need to get the name of your desired table.&lt;/p&gt;
&lt;p&gt;The name of your table would also be located under the Object Explorer menu (underneath the Tables section).&lt;/p&gt;
&lt;p&gt;Here, the name of the table is: dbo.Meteo_stations&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;image3.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-connect-python-to-our-microsoft-sql-server&#34;&gt;4 Connect Python to our Microsoft SQL Server&lt;/h3&gt;
&lt;p&gt;Now we have all the informations about our server and database to connect Python .&lt;/p&gt;
&lt;p&gt;Here is the structure of the code that you may use in Python:&lt;/p&gt;
&lt;p&gt;import pyodbc 
conn = pyodbc.connect(&amp;lsquo;Driver={SQL Server};&amp;rsquo;
&amp;lsquo;Server=server_name;&amp;rsquo;
&amp;lsquo;Database=db_name;&amp;rsquo;
&amp;lsquo;Trusted_Connection=yes;&#39;)&lt;/p&gt;
&lt;p&gt;cursor = conn.cursor()
cursor.execute(&amp;lsquo;SELECT * FROM db_name.Table&amp;rsquo;)&lt;/p&gt;
&lt;p&gt;for row in cursor:
print(row)
And this is how the code would look like in Python using our example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pyodbc 
connexion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pyodbc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Driver={SQL Server};&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Server=DESKTOP-BE6M578;&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Database=BDSOPFEU;&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trusted_Connection=yes;&amp;#39;&lt;/span&gt;)

cursor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; connexion&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cursor()
cursor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;execute(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SELECT * FROM BDSOPFEU.dbo.Meteo_stations&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# to loop over each row&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#for row in cursor:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    print(row)&lt;/span&gt;
row &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cursor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fetchone()
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(row)
connexion&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(111, datetime.datetime(1978, 4, 1, 0, 0), 1, &#39;STE-PERPETUE&#39;, &#39;4113-1-5355&#39;, 111, datetime.datetime(1989, 10, 31, 0, 0), 400, &#39;M&#39;, &#39;N&#39;, 1, 1, &#39;MFFP_CEL&#39;, None, 13, &#39; &#39;, None, False, None, None, None)
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;For having basic informations about our table:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [column[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; column &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; cursor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;description]
columns
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;No_station&#39;,
 &#39;Ouverture&#39;,
 &#39;Base&#39;,
 &#39;Nom&#39;,
 &#39;Quadr&#39;,
 &#39;Secteur&#39;,
 &#39;Fermeture&#39;,
 &#39;Elevation&#39;,
 &#39;T_hr&#39;,
 &#39;Vent&#39;,
 &#39;T_donnees&#39;,
 &#39;T_station&#39;,
 &#39;Provenance&#39;,
 &#39;Stn_mere&#39;,
 &#39;Hre_levee&#39;,
 &#39;Memo&#39;,
 &#39;Contour&#39;,
 &#39;Active&#39;,
 &#39;Cladonie&#39;,
 &#39;Latitude&#39;,
 &#39;Longitude&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, I’ll show you how to get data from SQL to pandas DataFrame.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pyodbc
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

connexion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pyodbc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Driver={SQL Server};&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Server=DESKTOP-BE6M578;&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Database=BDSOPFEU;&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trusted_Connection=yes;&amp;#39;&lt;/span&gt;)

SQL_Query &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_sql_query(
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;SELECT
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Nom, No_station, Latitude, Longitude  
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FROM dbo.Meteo_stations 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;WHERE Active = &amp;#39;True&amp;#39; &amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;, connexion)

df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(SQL_Query)
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pyodbc
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd

connexion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pyodbc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Driver={SQL Server};&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Server=DESKTOP-BE6M578;&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Database=BDSOPFEU;&amp;#39;&lt;/span&gt;
                      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Trusted_Connection=yes;&amp;#39;&lt;/span&gt;)

SQL_Query &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_sql_query(
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&amp;#39;SELECT
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Date,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Heure,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Pluie,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Hr,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Tsec,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Thum,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Vv,
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Vvr
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FROM dbo.Meteo_obs 
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; WHERE No_station = 111&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;, connexion)

df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(SQL_Query)
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tail()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;.dataframe tbody tr th {
    vertical-align: top;
}

.dataframe thead th {
    text-align: right;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Mask countries using shapefile</title>
      <link>/post/shapefiles_country/</link>
      <pubDate>Tue, 04 Feb 2020 10:39:49 -0800</pubDate>
      <guid>/post/shapefiles_country/</guid>
      <description>&lt;h3 id=&#34;using-country-shapefiles-to-create-netcdf-mask&#34;&gt;Using country shapefiles to create Netcdf mask&lt;/h3&gt;
&lt;p&gt;In this tutorial, we will use shapefiles to create mask over specific countries.&lt;/p&gt;
&lt;p&gt;In order to work with the whole globe, we will use gridded dataset ERA5 meteorological data.&lt;/p&gt;
&lt;p&gt;I will present a simple solution based on open-source Python modules:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    - xarray: for manipulating &amp;amp; reading gridded data, and – very important – operate out-of-memory thanks to its dask capabilities
    - regionmask: to mask a gridded file according to a shapefile
    - numpy: for simple array manipulations
    - geopandas: to open shapefiles
    - matplotlib: for plotting
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1---import-librairies-and-create-aliases&#34;&gt;1-  Import librairies and create aliases.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; regionmask
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; geopandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; gpd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings; warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;working-over-countries&#34;&gt;Working over countries&lt;/h3&gt;
&lt;p&gt;In this example we will focus on countries in Africa. We will use &lt;a href=&#34;https://community.esri.com/external-link.jspa?url=http%3A%2F%2Fwww.maplibrary.org%2Flibrary%2Fstacks%2FAfrica%2Findex.htm&#34;&gt;shapefiles developped in ESRI format&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After downloaded the shapefile, we must load it using geopandas library:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;PATH_TO_SHAPEFILE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Countries/Africa_Countries.shp&amp;#39;&lt;/span&gt;
countries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_file(PATH_TO_SHAPEFILE)
countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;ID&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;CODE&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;COUNTRY&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;geometry&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;ALG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;Algeria&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;POLYGON ((-5.7636199999979 25.58624999999302, &amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;ANG&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;Angola&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;POLYGON ((13.36632442474365 -8.32172966003418,&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;762
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;my_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(countries[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CODE&amp;#39;&lt;/span&gt;])
my_list_unique &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; set(list(countries[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CODE&amp;#39;&lt;/span&gt;]))
indexes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [my_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; my_list_unique]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Shapes are here a GeoDataFrame containing all polygons illustrating the countries boundaries.&lt;/p&gt;
&lt;p&gt;Now we can load the ERA5 gridded data. The parameter chunks is very important, it defines how big are the “pieces” of data moved from the disk to the memory. With this value the entire computation on a workstation with 32 GB takes a couple of minutes.&lt;/p&gt;
&lt;p&gt;We will load all the temperature files for the year 2018 using Xarray library.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_T2m_1h&amp;#39;&lt;/span&gt;
t_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/T2m_1h/&amp;#39;&lt;/span&gt;        
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; model &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_2018*_sfc.nc&amp;#39;&lt;/span&gt;
ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_mfdataset(data, chunks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;})
ds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 721, longitude: 1440, time: 8760)
Coordinates:
  * longitude  (longitude) float32 0.0 0.25 0.5 0.75 ... 359.25 359.5 359.75
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 dask.array&amp;lt;shape=(8760, 721, 1440), chunksize=(10, 721, 1440)&amp;gt;
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next function &lt;!-- raw HTML omitted --&gt;assign_coords&lt;!-- raw HTML omitted --&gt; will convert the longitude from the 0-360 range to -180,180&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;assign_coords(longitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(((ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;360&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sortby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;)
ds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 721, longitude: 1440, time: 8760)
Coordinates:
  * longitude  (longitude) float32 -180.0 -179.75 -179.5 ... 179.25 179.5 179.75
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 dask.array&amp;lt;shape=(8760, 721, 1440), chunksize=(10, 721, 1440)&amp;gt;
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;len(list(countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[i] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; indexes))
len(list(countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COUNTRY[indexes]))
len(indexes)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;52
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])
np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape(a)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(762,)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our xarray Dataset contains a single variable (t2m) which is stored as a dask.array. This is the result of loading files with open_mfdataset.&lt;/p&gt;
&lt;p&gt;Now we will use regionmask module to create a gridded mask with the 
&lt;a href=&#34;https://regionmask.readthedocs.io/en/stable/generated/regionmask.Regions_cls.html#regionmask.Regions_cls&#34;&gt;function regions_cls&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this function we will create an object able to mask ERA5 gridded data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;countries_mask_poly &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; regionmask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Regions_cls(name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;COUNTRY&amp;#39;&lt;/span&gt;, numbers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; indexes, names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COUNTRY[indexes], abbrevs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COUNTRY[indexes], outlines &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[i] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;])))
countries_mask_poly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;52 &#39;COUNTRY&#39; Regions ()
Burkina Faso Senegal Botswana Liberia Chad Equatorial Guinea Djibouti Ghana Nigeria Sao Tome and Principe Swaziland Uganda Tanzania Comoros Guinea Algeria Niger Madagascar Burundi Cameroon Mali Zimbabwe Cote d`Ivoire Tunisia Sierra Leone Libya Rwanda Benin Malawi Gabon South Africa Western Sahara Zambia Central African Republic Togo Namibia Gambia Congo-Brazzaville Democratic Republic of Congo Morocco Eritrea Cape Verde Angola Ethiopia Lesotho Egypt Guinea-Bissau Kenya Mozambique Sudan Mauritania Somalia
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are ready to apply the mask on the gridded dataset xarray ERA5.&lt;/p&gt;
&lt;p&gt;We select only the first timestep to speed up the process.&lt;/p&gt;
&lt;p&gt;This step could take few minutes because of ERA5 resolution and grid : Dimensions:    (latitude: 721, longitude: 1440)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; countries_mask_poly&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mask(ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), lat_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;, lon_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;)
mask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;region&#39; (latitude: 721, longitude: 1440)&amp;gt;
array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       ...,
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan]])
Coordinates:
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * longitude  (longitude) float32 -180.0 -179.75 -179.5 ... 179.25 179.5 179.75
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mask can be saved (for example as a NetCDF) for a later use.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./mask_Africa_by_countries.nc&amp;#39;&lt;/span&gt;) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can use  &lt;a href=&#34;https://www.giss.nasa.gov/tools/panoply/&#34;&gt;Panoply&lt;/a&gt; free software to plot our netcdf file.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a quick visualisation using Matplotlib:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xbdf0d68&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s now extract one specific country from our mask. We will for example extract informations only over Algeria.
Remember, index for Algeria is: 0  .&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask_algeria &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; )
mask_algeria&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./mask_Algeria.nc&amp;#39;&lt;/span&gt;) 

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
mask_algeria&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x7528278&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2--extract-time-series&#34;&gt;2- Extract time-series&lt;/h3&gt;
&lt;p&gt;We can now for each country aggregate the grid cells in the national borders. 
We will first develop two methods to mask our area. Then, we will extract the time series.&lt;/p&gt;
&lt;h3 id=&#34;--method-1&#34;&gt;- Method 1:&lt;/h3&gt;
&lt;p&gt;I will focus on Algeria.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ID_COUNTRY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;COUNTRY[ID_COUNTRY])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Algeria
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As first step, I will save the latitude and longitude vectors because I will use it later. Then, I select the mask points where the value is equal to target value (the ID_COUNTRY code). In the numpy array sel_mask all the values are nan except for the selected ones.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;lat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
lon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values

sel_mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; ID_COUNTRY)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
sel_mask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       ...,
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan]])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To speed-up the process I want to crop the xarray Dataset selecting the smallest box containing the entire mask. To do this I store in id_lon and id_lat the coordinate points where the mask has at least a non-nan value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;id_lon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lon[np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;all(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isnan(sel_mask), axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;))]
id_lat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lat[np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;all(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isnan(sel_mask), axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))]
id_lat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([37.  , 36.75, 36.5 , 36.25, 36.  , 35.75, 35.5 , 35.25, 35.  ,
       34.75, 34.5 , 34.25, 34.  , 33.75, 33.5 , 33.25, 33.  , 32.75,
       32.5 , 32.25, 32.  , 31.75, 31.5 , 31.25, 31.  , 30.75, 30.5 ,
       30.25, 30.  , 29.75, 29.5 , 29.25, 29.  , 28.75, 28.5 , 28.25,
       28.  , 27.75, 27.5 , 27.25, 27.  , 26.75, 26.5 , 26.25, 26.  ,
       25.75, 25.5 , 25.25, 25.  , 24.75, 24.5 , 24.25, 24.  , 23.75,
       23.5 , 23.25, 23.  , 22.75, 22.5 , 22.25, 22.  , 21.75, 21.5 ,
       21.25, 21.  , 20.75, 20.5 , 20.25, 20.  , 19.75, 19.5 , 19.25,
       19.  ], dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Xarray dataset is reduced selecting only the target year and the coordinates containing the target region. Then the dataset is load from the dask array using compute and then filtered using the mask.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(latitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; slice(id_lat[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], id_lat[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]), longitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; slice(id_lon[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], id_lon[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compute()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; ID_COUNTRY)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 73, longitude: 82, time: 8760)
Coordinates:
  * latitude   (latitude) float64 37.0 36.75 36.5 36.25 ... 19.5 19.25 19.0
  * longitude  (longitude) float64 -8.5 -8.25 -8.0 -7.75 ... 11.25 11.5 11.75
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 nan nan nan ... nan nan nan
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;--method-2&#34;&gt;- Method 2:&lt;/h3&gt;
&lt;p&gt;We can directly use xarray library to apply netcdf mask with using .where() method and DataArray mask:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 721, longitude: 1440, time: 8760)
Coordinates:
  * longitude  (longitude) float32 -180.0 -179.75 -179.5 ... 179.25 179.5 179.75
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 dask.array&amp;lt;shape=(8760, 721, 1440), chunksize=(10, 721, 1440)&amp;gt;
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quick visualisation, we will display the first step of our DataArray masked.&lt;/p&gt;
&lt;p&gt;For out_sel2 array :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
out_sel2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xe73e550&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output3.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;For out_sel1 array :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
out_sel1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
countries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xe8024a8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output4.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally we can aggregate by the arithmetic mean using the groupby function to obtain a time-series of national average temperatures.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out_sel1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()
x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:  (time: 8760)
Coordinates:
  * time     (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m      (time) float32 285.01346 284.65833 283.95526 ... 282.03668 281.461
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we plot the time-series…&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;matplotlib.lines.Line2D at 0xe9dc518&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output5.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Let&amp;rsquo;s resample our dataset by day and then compute a daily mean.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out_sel1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resample(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1D&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;273.15&lt;/span&gt;
x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 73, longitude: 82, time: 365)
Coordinates:
  * longitude  (longitude) float64 -8.5 -8.25 -8.0 -7.75 ... 11.25 11.5 11.75
  * latitude   (latitude) float64 37.0 36.75 36.5 36.25 ... 19.5 19.25 19.0
  * time       (time) datetime64[ns] 2018-01-01 2018-01-02 ... 2018-12-31
Data variables:
    t2m        (time, latitude, longitude) float32 nan nan nan ... nan nan nan
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(dim&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;))
daily_mean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;t2m&#39; (time: 365)&amp;gt;
array([14.550091, 13.812102, 13.700798, ..., 10.975014, 11.182918, 10.956429],
      dtype=float32)
Coordinates:
  * time     (time) datetime64[ns] 2018-01-01 2018-01-02 ... 2018-12-31
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;matplotlib.lines.Line2D at 0xe243f98&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output6.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;And we save it as a csv&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_pandas()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;average-temperature-algeria.csv&amp;#39;&lt;/span&gt;, header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t2m&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2--extract-time-series-for-one-specific-localisation&#34;&gt;2- Extract time-series for one specific localisation&lt;/h3&gt;
&lt;p&gt;In this example, we eant to extract time-series for Alger:&lt;/p&gt;
&lt;p&gt;With:
- longitude = 3.04
- latitude = 36.75&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;lati &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;36.75&lt;/span&gt;
loni &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.04&lt;/span&gt;
data  &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out_sel1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(longitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;loni  , latitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lati  , method&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nearest&amp;#39;&lt;/span&gt;) 
data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;t2m&#39; (time: 8760)&amp;gt;
array([289.91342, 289.63348, 289.2745 , ..., 285.62613, 284.9182 , 284.80624],
      dtype=float32)
Coordinates:
    latitude   float64 36.75
    longitude  float64 3.0
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Attributes:
    units:      K
    long_name:  2 metre temperature
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t2m&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t2m&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;273.15&lt;/span&gt;
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_dataframe()
fig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t2m&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x20773fd0&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./output7.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s plot montlhy temperature distribution for Alger:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;month&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%b&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;time&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;latitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;longitude&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;t2m&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;month&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-01-01 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.7634&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-01-01 01:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.4835&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-01-01 02:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.1245&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-01-01 03:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.197&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-01-01 04:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;36.75&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;16.0389&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jan&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
sns&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;boxplot(x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;month&amp;#34;&lt;/span&gt;, y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;t2m&amp;#34;&lt;/span&gt;, data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;df, palette&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Set1&amp;#34;&lt;/span&gt;)  
figure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_figure()    
figure&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_size_inches(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;) 
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;./output8.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Convert shapefile to netcdf</title>
      <link>/post/shapefile_netcdf/</link>
      <pubDate>Fri, 31 Jan 2020 07:20:28 -0800</pubDate>
      <guid>/post/shapefile_netcdf/</guid>
      <description>&lt;p&gt;﻿&lt;/p&gt;
&lt;h2 id=&#34;from-shapefiles-to-netcdf-mask&#34;&gt;From shapefiles to Netcdf Mask&lt;/h2&gt;
&lt;p&gt;Many times we need to create Netcdf mask files over continents or maybe countries. In this tutorial, we will use shapefiles to create those masks.&lt;/p&gt;
&lt;p&gt;In order to work with the whole globe, we will use gridded dataset ERA5 meteorological data.&lt;/p&gt;
&lt;p&gt;I will present a simple solution based on open-source Python modules:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    - xarray: for manipulating &amp;amp; reading gridded data, and – very important – operate out-of-memory thanks to its dask capabilities
    - regionmask: to mask a gridded file according to a shapefile
    - numpy: for simple array manipulations
    - geopandas: to open shapefiles
    - matplotlib: for plotting
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;1--first-we-need-to-import-librairies-and-create-aliases&#34;&gt;1- First we need to import librairies and create aliases.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr 
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; regionmask
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; geopandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; gpd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings; warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(action&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;matplotlib inline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;working-over-continents&#34;&gt;Working over continents&lt;/h2&gt;
&lt;p&gt;In this example we will use the  classification developed by ARCGIS.&lt;/p&gt;
&lt;p&gt;Shapefiles are available on this &lt;a href=&#34;https://www.arcgis.com/home/item.html?id=5cf4f223c4a642eb9aa7ae1216a04372&#34;&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After downloaded the shapefile, we must load it using geopandas library:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;PATH_TO_SHAPEFILE &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./continent_shapefile/continent.shp&amp;#39;&lt;/span&gt;
continents &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gpd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_file(PATH_TO_SHAPEFILE)
continents
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;0             Asia
1    North America
2           Europe
3           Africa
4    South America
5          Oceania
6        Australia
7       Antarctica
Name: CONTINENT, dtype: GeoDataFrame&lt;/p&gt;
&lt;p&gt;Shapes are here a GeoDataFrame containing all polygons illustrating the continent boundaries.&lt;/p&gt;
&lt;p&gt;Now we can load the ERA5 gridded data. The parameter chunks is very important, it defines how big are the “pieces” of data moved from the disk to the memory. With this value the entire computation on a workstation with 32 GB takes a couple of minutes.&lt;/p&gt;
&lt;p&gt;We will load all the temperature files for the year 2018 using Xarray library.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ERA5_T2m_1h&amp;#39;&lt;/span&gt;
t_in &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;J:/REANALYSES/ERA5/T2m_1h/&amp;#39;&lt;/span&gt;        
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t_in &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; model &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_2018*_sfc.nc&amp;#39;&lt;/span&gt;
ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_mfdataset(data, chunks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;})
ds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 721, longitude: 1440, time: 8760)
Coordinates:
  * longitude  (longitude) float32 0.0 0.25 0.5 0.75 ... 359.25 359.5 359.75
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 dask.array&amp;lt;shape=(8760, 721, 1440), chunksize=(10, 721, 1440)&amp;gt;
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next function &lt;!-- raw HTML omitted --&gt;assign_coords&lt;!-- raw HTML omitted --&gt; will convert the longitude from the 0-360 range to -180,180&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;assign_coords(longitude&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(((ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;360&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;180&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sortby(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;)
ds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 721, longitude: 1440, time: 8760)
Coordinates:
  * longitude  (longitude) float32 -180.0 -179.75 -179.5 ... 179.25 179.5 179.75
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 dask.array&amp;lt;shape=(8760, 721, 1440), chunksize=(10, 721, 1440)&amp;gt;
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our xarray Dataset contains a single variable (t2m) which is stored as a dask.array. This is the result of loading files with open_mfdataset.&lt;/p&gt;
&lt;p&gt;Now we will use regionmask module to create a gridded mask with the 
&lt;a href=&#34;https://regionmask.readthedocs.io/en/stable/generated/regionmask.Regions_cls.html#regionmask.Regions_cls&#34;&gt;function regions_cls&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this function we will create an object able to mask ERA5 gridded data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;continents_mask_poly &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; regionmask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Regions_cls(name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CONTINENT&amp;#39;&lt;/span&gt;, numbers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)), names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(continents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CONTINENT), abbrevs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(continents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CONTINENT), outlines &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; list(continents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;geometry&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values[i] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)))
continents_mask_poly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;8 &#39;CONTINENT&#39; Regions ()
Asia North America Europe Africa South America Oceania Australia Antarctica
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we are ready to apply the mask on the gridded dataset xarray ERA5.&lt;/p&gt;
&lt;p&gt;We select only the first timestep to speed up the process.&lt;/p&gt;
&lt;p&gt;This step could take few minutes because of ERA5 resolution and grid : Dimensions:    (latitude: 721, longitude: 1440)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; continents_mask_poly&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mask(ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), lat_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;, lon_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;)
mask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;region&#39; (latitude: 721, longitude: 1440)&amp;gt;
array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       ...,
       [nan,  7.,  7., ...,  7.,  7.,  7.],
       [nan,  7.,  7., ...,  7.,  7.,  7.],
       [nan, nan, nan, ..., nan, nan, nan]])
Coordinates:
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * longitude  (longitude) float32 -180.0 -179.75 -179.5 ... 179.25 179.5 179.75
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mask can be saved (for example as a NetCDF) for a later use.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_netcdf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./mask_all_continents.nc&amp;#39;&lt;/span&gt;) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A quick visualisation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
continents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x787df98&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./continent1.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;2--extract-time-series&#34;&gt;2- Extract time-series&lt;/h2&gt;
&lt;p&gt;We can now for each contient aggregate the grid cells.&lt;/p&gt;
&lt;p&gt;We will first develop two methods to mask our area. Then, we will extract the time series.&lt;/p&gt;
&lt;h3 id=&#34;--method-1&#34;&gt;- Method 1:&lt;/h3&gt;
&lt;p&gt;We will do this work over Africa.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;ID_CONTINENT &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(continents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CONTINENT[ID_CONTINENT])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Africa
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As first step, I will save the latitude and longitude vectors because I will use it later. Then, I select the mask points where the value is equal to target value (the ID_CONTINENT code define before).&lt;/p&gt;
&lt;p&gt;In the numpy array sel_mask all the values are nan except for the selected ones.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;lat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;latitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
lon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;longitude&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values

sel_mask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mask&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; ID_CONTINENT)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
sel_mask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       ...,
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan]])
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To speed-up the process I want to crop the xarray Dataset selecting the smallest box containing the entire mask. To do this I store in id_lon and id_lat the coordinate points where the mask has at least a non-nan value.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;id_lon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lon[np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;all(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isnan(sel_mask), axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;))]
id_lat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lat[np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(&lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;all(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isnan(sel_mask), axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))]
id_lat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;array([ 37.25,  37.  ,  36.75,  36.5 ,  36.25,  36.  ,  35.75,  35.5 ,
        35.25,  35.  ,  34.75,  34.5 ,  34.25,  34.  ,  33.75,  33.5 ,
        33.25,  33.  ,  32.75,  32.5 ,  32.25,  32.  ,  31.75,  31.5 ,
        31.25,  31.  ,  30.75,  30.5 ,  30.25,  30.  ,  29.75,  29.5 ,
        29.25,  29.  ,  28.75,  28.5 ,  28.25,  28.  ,  27.75,  27.5 ,
        27.25,  27.  ,  26.75,  26.5 ,  26.25,  26.  ,  25.75,  25.5 ,
        25.25,  25.  ,  24.75,  24.5 ,  24.25,  24.  ,  23.75,  23.5 ,
        23.25,  23.  ,  22.75,  22.5 ,  22.25,  22.  ,  21.75,  21.5 ,
        21.25,  21.  ,  20.75,  20.5 ,  20.25,  20.  ,  19.75,  19.5 ,
        19.25,  19.  ,  18.75,  18.5 ,  18.25,  18.  ,  17.75,  17.5 ,
        17.25,  17.  ,  16.75,  16.5 ,  16.25,  16.  ,  15.75,  15.5 ,
        15.25,  15.  ,  14.75,  14.5 ,  14.25,  14.  ,  13.75,  13.5 ,
        13.25,  13.  ,  12.75,  12.5 ,  12.25,  12.  ,  11.75,  11.5 ,
        11.25,  11.  ,  10.75,  10.5 ,  10.25,  10.  ,   9.75,   9.5 ,
         9.25,   9.  ,   8.75,   8.5 ,   8.25,   8.  ,   7.75,   7.5 ,
         7.25,   7.  ,   6.75,   6.5 ,   6.25,   6.  ,   5.75,   5.5 ,
         5.25,   5.  ,   4.75,   4.5 ,   4.25,   4.  ,   3.75,   3.5 ,
         3.25,   3.  ,   2.75,   2.5 ,   2.25,   2.  ,   1.75,   1.5 ,
         1.25,   1.  ,   0.75,   0.5 ,   0.25,   0.  ,  -0.25,  -0.5 ,
        -0.75,  -1.  ,  -1.25,  -1.5 ,  -1.75,  -2.  ,  -2.25,  -2.5 ,
        -2.75,  -3.  ,  -3.25,  -3.5 ,  -3.75,  -4.  ,  -4.25,  -4.5 ,
        -4.75,  -5.  ,  -5.25,  -5.5 ,  -5.75,  -6.  ,  -6.25,  -6.5 ,
        -6.75,  -7.  ,  -7.25,  -7.5 ,  -7.75,  -8.  ,  -8.25,  -8.5 ,
        -8.75,  -9.  ,  -9.25,  -9.5 ,  -9.75, -10.  , -10.25, -10.5 ,
       -10.75, -11.  , -11.25, -11.5 , -11.75, -12.  , -12.25, -12.5 ,
       -12.75, -13.  , -13.25, -13.5 , -13.75, -14.  , -14.25, -14.5 ,
       -14.75, -15.  , -15.25, -15.5 , -15.75, -16.  , -16.25, -16.5 ,
       -16.75, -17.  , -17.25, -17.5 , -17.75, -18.  , -18.25, -18.5 ,
       -18.75, -19.  , -19.25, -19.5 , -19.75, -20.  , -20.25, -20.5 ,
       -20.75, -21.  , -21.25, -21.5 , -21.75, -22.  , -22.25, -22.5 ,
       -22.75, -23.  , -23.25, -23.5 , -23.75, -24.  , -24.25, -24.5 ,
       -24.75, -25.  , -25.25, -25.5 , -25.75, -26.  , -26.25, -26.5 ,
       -26.75, -27.  , -27.25, -27.5 , -27.75, -28.  , -28.25, -28.5 ,
       -28.75, -29.  , -29.25, -29.5 , -29.75, -30.  , -30.25, -30.5 ,
       -30.75, -31.  , -31.25, -31.5 , -31.75, -32.  , -32.25, -32.5 ,
       -32.75, -33.  , -33.25, -33.5 , -33.75, -34.  , -34.25, -34.5 ,
       -34.75], dtype=float32)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Xarray dataset is reduced selecting only the target year and the coordinates containing the target region. Then the dataset is load from the dask array using compute and then filtered using the mask.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sel(latitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; slice(id_lat[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], id_lat[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]), longitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; slice(id_lon[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], id_lon[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;compute()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; ID_CONTINENT)
out_sel1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 289, longitude: 333, time: 8760)
Coordinates:
  * latitude   (latitude) float64 37.25 37.0 36.75 36.5 ... -34.25 -34.5 -34.75
  * longitude  (longitude) float64 -25.25 -25.0 -24.75 ... 57.25 57.5 57.75
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 nan nan nan ... nan nan nan
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;--method-2&#34;&gt;- Method 2:&lt;/h3&gt;
&lt;p&gt;We can directly use xarray library to apply netcdf mask with using .where() method and DataArray mask:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mask
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;region&#39; (latitude: 721, longitude: 1440)&amp;gt;
array([[nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       [nan, nan, nan, ..., nan, nan, nan],
       ...,
       [nan,  7.,  7., ...,  7.,  7.,  7.],
       [nan,  7.,  7., ...,  7.,  7.,  7.],
       [nan, nan, nan, ..., nan, nan, nan]])
Coordinates:
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * longitude  (longitude) float32 -180.0 -179.75 -179.5 ... 179.25 179.5 179.75
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ds&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;where(mask &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 289, longitude: 333, time: 8760)
Coordinates:
  * latitude   (latitude) float64 37.25 37.0 36.75 36.5 ... -34.25 -34.5 -34.75
  * longitude  (longitude) float64 -25.25 -25.0 -24.75 ... 57.25 57.5 57.75
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 nan nan nan ... nan nan nan
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;out_sel2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 721, longitude: 1440, time: 8760)
Coordinates:
  * longitude  (longitude) float32 -180.0 -179.75 -179.5 ... 179.25 179.5 179.75
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * time       (time) datetime64[ns] 2018-01-01 ... 2018-12-31T23:00:00
Data variables:
    t2m        (time, latitude, longitude) float32 dask.array&amp;lt;shape=(8760, 721, 1440), chunksize=(10, 721, 1440)&amp;gt;
Attributes:
    Conventions:  CF-1.6
    history:      2019-11-11 13:33:07 GMT by grib_to_netcdf-2.14.0: /opt/ecmw...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quick visualisation, we will display the first step of our DataArray masked.&lt;/p&gt;
&lt;p&gt;For out_sel1 array :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
out_sel1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
continents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0xba03908&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./continent2.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;For out_sel2 array :&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;axes()
out_sel2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;isel(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax)
continents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax, alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, facecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;matplotlib.axes._subplots.AxesSubplot at 0x759f9e8&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;!&lt;img src=&#34;./continent3.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Finally we can resample our dataset by day and then compute a daily mean.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With out_sel1:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out_sel1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resample(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1D&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;273.15&lt;/span&gt;
daily_mean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 289, longitude: 333, time: 365)
Coordinates:
  * latitude   (latitude) float64 37.25 37.0 36.75 36.5 ... -34.25 -34.5 -34.75
  * longitude  (longitude) float64 -25.25 -25.0 -24.75 ... 57.25 57.5 57.75
  * time       (time) datetime64[ns] 2018-01-01 2018-01-02 ... 2018-12-31
Data variables:
    t2m        (time, latitude, longitude) float32 nan nan nan ... nan nan nan
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To compute spatial mean over Africa:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; daily_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(dim&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;))
daily_mean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;t2m&#39; (time: 365)&amp;gt;
array([20.868923, 20.559137, 20.618475, ..., 20.510223, 20.604036, 20.943094],
      dtype=float32)
Coordinates:
  * time     (time) datetime64[ns] 2018-01-01 2018-01-02 ... 2018-12-31
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we plot the time-series…&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;matplotlib.lines.Line2D at 0xc2d4cf8&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./continent4.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;And we save it as a csv.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_pandas()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;average-daily-temperature.csv&amp;#39;&lt;/span&gt;, header &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t2m&amp;#39;&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Just to see if we find same results with masking method 2. We will plot the same time serie with out_sel2 Xarray:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; out_sel2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resample(time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1D&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;273.15&lt;/span&gt;
daily_mean2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.Dataset&amp;gt;
Dimensions:    (latitude: 721, longitude: 1440, time: 365)
Coordinates:
  * latitude   (latitude) float32 90.0 89.75 89.5 89.25 ... -89.5 -89.75 -90.0
  * longitude  (longitude) float32 -180.0 -179.75 -179.5 ... 179.25 179.5 179.75
  * time       (time) datetime64[ns] 2018-01-01 2018-01-02 ... 2018-12-31
Data variables:
    t2m        (time, latitude, longitude) float32 dask.array&amp;lt;shape=(365, 721, 1440), chunksize=(1, 721, 1440)&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; daily_mean2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;t2m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(dim&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitude&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitude&amp;#39;&lt;/span&gt;))
daily_mean2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;xarray.DataArray &#39;t2m&#39; (time: 365)&amp;gt;
dask.array&amp;lt;shape=(365,), dtype=float32, chunksize=(1,)&amp;gt;
Coordinates:
  * time     (time) datetime64[ns] 2018-01-01 2018-01-02 ... 2018-12-31
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;daily_mean2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&amp;lt;matplotlib.lines.Line2D at 0xc2d1f28&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./continent5.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Temperature Radial Chart</title>
      <link>/post/temperature_radial_chart/</link>
      <pubDate>Fri, 06 Dec 2019 20:00:03 -0800</pubDate>
      <guid>/post/temperature_radial_chart/</guid>
      <description>&lt;h3 id=&#34;plot-of-a-radial-temperature-chart&#34;&gt;Plot of a radial temperature chart&lt;/h3&gt;
&lt;p&gt;In this post, we will plot a radial temperature chart using daily temperature from Environment Canada.&lt;/p&gt;
&lt;p&gt;The objective of this product is to obtain an analysis of the daily evolution of the temperature and its positioning in relation to the norm and the historical records of the Julian day.&lt;/p&gt;
&lt;p&gt;In this work, we will extract data from Environment and Climate Change Canada for the RIGAUD station in Quebec. Here is the information about this station:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Name: RIGAUD
Username: 5252
Latitude: 45.5 degN
Longitude: -74.37 degW
Period covered: 1963 - today
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A list of stations is available on this &lt;a href=&#34;ftp://ftp.tor.ec.gc.ca/Pub/Get_More_Data_More_data/Repository%20of%20stations%20FR.csv&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The data will be uploaded directly to Environment and Climate Change Canada&amp;rsquo;s  &lt;a href=&#34;Repository%20of%20stations%20FR.csv&#34;&gt;website&lt;/a&gt; &lt;a href=&#34;http://climate.weather.gc.ca/)&#34;&gt;http://climate.weather.gc.ca/)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The data is in XML format. XML or eXtensible Markup Language is a generic markup language. To read this format, we will call the &lt;a href=&#34;https://docs.python.org/2/library/xml.etree.elementtree.html#module-xml.etree.ElementTree&#34;&gt;&amp;lsquo;xml.etree.ElementTree&amp;rsquo; library&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, we import the necessary libraries:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;- matplotlib: module to plot our graph
- datetime: python module for manipulating dates
- wget: module to extract data on a url
- pandas: module for working with data structures
- os: &amp;quot;system&amp;quot; module to create, delete ... files from our environment
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pyplot &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.ticker &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ticker
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; date
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; wget
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xml.etree.ElementTree &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ET
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example, we will extract the year 2000 daily records of the station RIGAUD (ID: 5252).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;id_stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5252&lt;/span&gt;
year &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;
tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=2&amp;#39;&lt;/span&gt;)
tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(tmp_file)
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(tmp_file)
root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
stationsdata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.//stationdata&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;-1 / unknown
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notre fichier XML a la structure suivant:&lt;br&gt;
Our XML file got this structure:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;We need to target the maxtemp and mintemp tags for our work, so the stationdata[0] and station[1] fields.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;resultmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
resultmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; stationdata &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stationsdata:
    champs1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;maxtemp&amp;#39;&lt;/span&gt;)              
    resultmax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(champs1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text)   &lt;span style=&#34;color:#75715e&#34;&gt;#  we append data for each day in a year &lt;/span&gt;
    data_max&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(resultmax,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)     
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; stationdata &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stationsdata:
    champs2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mintemp&amp;#39;&lt;/span&gt;)              
    resultmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(champs2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text)   &lt;span style=&#34;color:#75715e&#34;&gt;#  we append data for each day in a year &lt;/span&gt;
    data_min&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(resultmin,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We then have two python lists with daily minimum and maximum temperatures.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(resultmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;[&#39;-1.0&#39;, &#39;5.5&#39;, &#39;2.0&#39;, &#39;4.0&#39;, &#39;-3.0&#39;]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can do the same over the whole recording period of the station (1963-2019) by applying a for loop over the years.&lt;/p&gt;
&lt;p&gt;For each year and each variable to be extracted we will increment a list in the variables min_array = [] and max_array = [].&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1963&lt;/span&gt;
yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;
id_stat &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5252&lt;/span&gt;
station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;RIGAUD&amp;#39;&lt;/span&gt;
max_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
min_array &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yi,yf&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):    &lt;span style=&#34;color:#75715e&#34;&gt;### loop over yars &lt;/span&gt;
    tmp_file &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wget&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;download(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://climate.weather.gc.ca/climate_data/bulk_data_e.html?format=xml&amp;amp;stationID=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(int(id_stat))&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Year=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(year)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;Month=01&amp;amp;Day=14&amp;amp;timeframe=2&amp;#39;&lt;/span&gt;)
    tree&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ET&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(tmp_file)
    os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(tmp_file)
    root&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tree&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getroot()
    stationsdata &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; root&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;findall(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.//stationdata&amp;#39;&lt;/span&gt;)
    resultmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    resultmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;  stationdata &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stationsdata:
         champs1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;maxtemp&amp;#39;&lt;/span&gt;)              
         resultmax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(champs1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text)   &lt;span style=&#34;color:#75715e&#34;&gt;#  loop over days for tmax &lt;/span&gt;
         data_max&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(resultmax,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)     
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;  stationdata &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; stationsdata:
         champs2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;stationdata&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mintemp&amp;#39;&lt;/span&gt;)              
         resultmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(champs2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text)   &lt;span style=&#34;color:#75715e&#34;&gt;#  loop over days for tmin &lt;/span&gt;
         data_min&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(resultmin,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;) 
         
    max_array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(data_max)
    min_array&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(data_min)
len(max_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;-1 / unknown




57
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For each min_array and max_array fields, we get a list of lists. We will flatten thoses lists:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;flatten&lt;/span&gt;(input):
    new_list &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; input:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; i:
            new_list&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(j)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; new_list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;min_array&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;flatten(min_array) 
max_array&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;flatten(max_array)
len(min_array)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;20819
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So we now have two lists of 20454 days for each min_array and max_array fields.&lt;/p&gt;
&lt;p&gt;Knowing that the period extends from January 1, 1963 to December 31, 2018, we can add a temporal dimension to our dataframe with the datetime module of python.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date(&lt;span style=&#34;color:#ae81ff&#34;&gt;1963&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date(&lt;span style=&#34;color:#ae81ff&#34;&gt;2019&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;)
delta&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;start) 
nb_days &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; delta&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;days &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 
rng &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date_range(start, periods&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nb_days, freq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;)
tmin_dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Series(min_array, index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rng)
tmax_dataset &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Series(max_array, index&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;rng)
tmax_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;1963-01-01   -11.1
1963-01-02    -6.7
1963-01-03    -3.9
1963-01-04    -2.2
1963-01-05    -3.9
Freq: D, dtype: float64
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One of the big advantages of the pandas dataframe is that we can very easily work with time series.
Here we will calculate the daily climatologies of the tmin_dataset and tmax_dataset variables over the 1981-2010 normal period.&lt;/p&gt;
&lt;p&gt;Also, with the pandas groupby tools, we can calculate the daily minimum and maximum of tmin_dataset and tmax_dataset over the full period of the recording.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;mintmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
maxtmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
climtmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
climtmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

clim_min_dataset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tmin_dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1981&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2010&amp;#39;&lt;/span&gt;]
clim_max_dataset&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tmax_dataset[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1981&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2010&amp;#39;&lt;/span&gt;]
climtmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clim_min_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby([clim_min_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month, clim_min_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;day])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()
climtmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; clim_max_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby([clim_max_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month, clim_max_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;day])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()

mintmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tmin_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby([tmin_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month, tmin_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;day])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;min()
maxtmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tmax_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;groupby([tmax_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month, tmax_dataset&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;day])&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;max()


data_min_tmin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(mintmin,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)  
data_max_tmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(maxtmax,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;) 
data_clim_tmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(climtmax,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;)     
data_clim_tmin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array(climtmin,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;float&amp;#34;&lt;/span&gt;) 

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(len(data_clim_tmax))
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(len(maxtmax))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;366
366
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can know visualize our timeries with a radial chart.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
ndays&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;366&lt;/span&gt;
Azs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,ndays)
angle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Azs &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pi &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; ndays

fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fig&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;, polar&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot([angle[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],angle[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]], [data_min[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],data_max[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]],&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;str(yf))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot([angle[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],angle[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]], [data_clim_tmin[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],data_clim_tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]],&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Climatology (1981-2010)&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot([angle[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],angle[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]], [data_min_tmin[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],data_max_tmax[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]],&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grey&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Extreme (&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yi)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yf)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;)

leg&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;legend(bbox_to_anchor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
leg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_frame()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_linewidth(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
leg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_title(str(station)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yf), prop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;size&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;weight&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;heavy&amp;#39;&lt;/span&gt;})

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot([angle,angle], [data_min,data_max],&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot([angle,angle], [data_clim_tmin,data_clim_tmax],&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot([angle,angle], [data_min_tmin,data_max_tmax],&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grey&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_rmin(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_rmax(&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid(True)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_theta_direction(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_theta_offset(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pi &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_rticks([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;])  &lt;span style=&#34;color:#75715e&#34;&gt;# less radial ticks&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_rlabel_position(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;45.&lt;/span&gt;)  &lt;span style=&#34;color:#75715e&#34;&gt;# get radial labels away from plotted line&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_yticklabels([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$-30^{\circ}$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$-20^{\circ}$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$-10^{\circ}$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$0^{\circ}$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$10^{\circ}$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$20^{\circ}$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$30^{\circ}$&amp;#39;&lt;/span&gt; ],
   fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Set the major and minor tick locations&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xaxis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_major_locator(ticker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;MultipleLocator(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pi&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xaxis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_minor_locator(ticker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;MultipleLocator(np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pi&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;))
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grid(linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grey&amp;#39;&lt;/span&gt;, linestyle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Turn off major tick labels&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xaxis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_major_formatter(ticker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NullFormatter())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_frame_on(False)

&lt;span style=&#34;color:#75715e&#34;&gt;# Set the minor tick width to 0 so you don&amp;#39;t see them&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; tick &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xaxis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_minor_ticks():
    tick&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick1line&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_markersize(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    tick&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick2line&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_markersize(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    tick&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;label1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_horizontalalignment(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Set the names of your ticks, with blank spaces for the major ticks&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_xticklabels([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Jan&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Feb&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Mar&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Apr&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;May&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Jun&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Jul&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Aug&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sep&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Oct&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Nov&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Dec&amp;#39;&lt;/span&gt;],minor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)

plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_18_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ECCC homogenized dataset</title>
      <link>/post/eccc_temp/</link>
      <pubDate>Fri, 06 Dec 2019 19:50:39 -0800</pubDate>
      <guid>/post/eccc_temp/</guid>
      <description>&lt;h2 id=&#34;extract-daily-temperature-from-environment-canada-using-python&#34;&gt;Extract daily temperature from Environment Canada using Python&lt;/h2&gt;
&lt;p&gt;The objective of this product is to retrieve daily temperature data from the second generation homogenized dataset of Environment and Climate Change Canada developed by Vincent et al. 2012.&lt;/p&gt;
&lt;p&gt;Adjusted and homogenized Canadian climate dataset (DCCAH) were prepared to provide a better spatial and temporal representation of the climate trends in Canada.&lt;/p&gt;
&lt;p&gt;In the Second Generation of Homogenized Temperature, new adjustments were applied to the daily minimum temperatures at synoptic stations (mainly airports) to address the bias due to the change in observing time in July 1961 (Vincent et al. 2009).&lt;/p&gt;
&lt;p&gt;Daily homogenized temperatures (minimum, maximum and mean) can be dowloaded on this &lt;a href=&#34;ftp://ccrp.tor.ec.gc.ca/pub/EC_data/AHCCD_daily/&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Raw dataset can be downloaded &lt;a href=&#34;http://climate.weather.gc.ca/historical_data/search_historic_data_f.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post, we will work on a specific province in Canada (using filters). To do this, we will use  Temperature_Stations.xls available on ftp site. This file provide us a list of all stations available.&lt;/p&gt;
&lt;p&gt;We first need to import our librairies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; date
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; calendar
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pathlib
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; itertools &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; islice
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will work with daily minimum temperature data only for the Northwest Territories of Canada.&lt;/p&gt;
&lt;p&gt;Referring to the document Temperature_Stations.xls, we see that the acronym for this province is: NWT.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;dataframe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./Temperature_Stations.xls&amp;#34;&lt;/span&gt;, skiprows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Prov&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Nom de station&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;stnid&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;année déb.&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mois déb.&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;année fin.&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mois fin.&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;lat (deg)&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;long (deg)&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;élév (m)&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;stns jointes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;AGASSIZ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1100120&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1893&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-121.77&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;ATLIN&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1200560&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1905&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;59.57&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-133.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;674&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BARKERVILLE&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1090660&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1888&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2015&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53.07&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-121.52&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1265&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BEAVERDELL&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1130771&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1939&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2006&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.48&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-119.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;838&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BC&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BELLA COOLA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1060841&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1895&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;52.37&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-126.68&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Using this Dataframe we can define some input parameters to filter our data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;varin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dn&amp;#39;&lt;/span&gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;# variable acronym                                                                  &lt;/span&gt;
path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Homog_daily_min_temp_v2018&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# path to get data                                       &lt;/span&gt;
varout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tasmin&amp;#39;&lt;/span&gt;                      
province &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NWT&amp;#39;&lt;/span&gt;                      &lt;span style=&#34;color:#75715e&#34;&gt;# Province to work with&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can now filter our dataset.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;globals()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataframe_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(dataframe[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Prov&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; province),:]
globals()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataframe_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Prov&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Nom de station&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;stnid&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;année déb.&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mois déb.&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;année fin.&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mois fin.&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;lat (deg)&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;long (deg)&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;élév (m)&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;stns jointes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;65&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;CAPE PARRY&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2200675&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1957&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;70.17&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-124.72&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;87&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;N&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;66&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FORT GOOD HOPE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2201450&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1944&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;66.23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-128.65&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;82&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;68&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FORT RELIANCE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2201903&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1948&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62.72&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-109.17&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;168&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;69&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FORT SIMPSON&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2202103&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1895&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;61.77&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-121.23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;169&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;70&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;FORT SMITH&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2202201&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1913&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-111.97&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;205&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;71&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;HAY RIVER&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2202401&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1893&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60.83&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-115.78&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;166&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;72&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;INUVIK&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2202578&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1957&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;68.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-133.48&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;103&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;73&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;MOULD BAY&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;250M001&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1948&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;76.23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-119.35&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;74&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NORMAN WELLS&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2202801&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1943&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;65.28&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-126.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;73&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;75&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SACHS HARBOUR&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2503648&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1955&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;72&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-125.27&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;86&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;76&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;TUKTOYAKTUK&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2203914&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1957&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;69.45&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-133&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;77&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;NWT&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;YELLOWKNIFE&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2204101&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62.47&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-114.43&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;206&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Y&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We found 13 stations for this province.&lt;/p&gt;
&lt;p&gt;We want to work with YELLOWKNIFE station:  stnid = 2204101.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;stnid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;2204101&amp;#39;&lt;/span&gt;   
f1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(varin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(stnid)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; line &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; islice(f1, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(line)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;2204101,    YELLOWKNIFE    ,  NWT, station joined    , Homogenized daily minimum temperature        , Deg Celcius,          Updated to December 2018

2204101,    YELLOWKNIFE    ,  NWT, station jointe    , Temperature quotidienne minimale homogeneisee, Deg Celcius, Mise a jour jusqu a decembre 2018

 Year Mo  Day 01  Day 02  Day 03  Day 04  Day 05  Day 06  Day 07  Day 08  Day 09  Day 10  Day 11  Day 12  Day 13  Day 14  Day 15  Day 16  Day 17  Day 18  Day 19  Day 20  Day 21  Day 22  Day 23  Day 24  Day 25  Day 26  Day 27  Day 28  Day 29  Day 30  Day 31

Annee Mo Jour 01 Jour 02 Jour 03 Jour 04 Jour 05 Jour 06 Jour 07 Jour 08 Jour 09 Jour 10 Jour 11 Jour 12 Jour 13 Jour 14 Jour 15 Jour 16 Jour 17 Jour 18 Jour 19 Jour 20 Jour 21 Jour 22 Jour 23 Jour 24 Jour 25 Jour 26 Jour 27 Jour 28 Jour 29 Jour 30 Jour 31

 1942  7    12.2    13.3    11.7    10.0     9.4    11.7    14.4    14.4    13.3    12.2    10.6    11.7    11.1    12.8    14.4    15.0    13.9    14.4    13.9    14.4    13.9    13.3    11.7    12.2    11.1    12.2    13.3    10.0    10.6    11.7     8.3 

 1942  8     7.8     5.0     9.4    12.8     9.4     9.4    10.0    10.6    12.8    10.6    12.2    12.2     9.4    15.0    12.8    11.7    14.4    14.4    11.7     8.3     9.4     7.8    12.2     8.9     3.9     7.2    10.6    11.1     7.2     5.0     3.3 

 1942  9     3.9     6.1     6.1     8.3     9.4    11.1    11.1     6.7     6.1     9.4     5.0     9.4     7.2     4.4     5.0     4.4     3.3     1.1     2.2    -0.6    -2.2     0.0    -1.7     1.1    -4.4    -0.6     0.0    -0.6     1.7     1.1 -9999.9M
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;cleaning-data&#34;&gt;Cleaning data:&lt;/h3&gt;
&lt;p&gt;We see that in our dataset we have for each line the daily data by year and by month according to the structure:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;There is a 4 rows header. We will delete this header and also delete the alphanumeric characters, clean the missing values and create a dataframe.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;f1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(varin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(stnid)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
f2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./tmp.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; line &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; f1:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; line:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;:
                f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(word&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;:
                f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(word&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;))                    
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(word)
f1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()      
df_station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./tmp.txt&amp;#39;&lt;/span&gt;, delim_whitespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, skiprows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))
df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;1942&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;7&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;12.2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;13.3&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;11.7&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;10.0&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;9.4&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;11.7.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;14.4&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;14.4.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;13.3.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;12.2.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;10.6&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;11.7.2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;11.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;12.8&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;14.4.2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;15.0&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;13.9&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;14.4.3&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;13.9.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;14.4.4&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;13.9.2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;13.3.2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;11.7.3&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;12.2.2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;11.1.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;12.2.3&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;13.3.3&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;10.0.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;10.6.1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;11.7.4&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;8.3&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-9999.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-6.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-10.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-7.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-8.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-11.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-13.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-13.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-17.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-21.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-16.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-16.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-17.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-22.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-22.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-17.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-23.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-13.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-18.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-32.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-31.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-34.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-30&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-27.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-9999.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-23.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-20.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-20.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-20.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-20.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-27.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-30&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-31.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-28.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-23.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-31.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-37.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-37.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-38.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-40.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-39.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-35&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-35.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-31.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-34.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-28.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-24.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-40.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;That&amp;rsquo;s better but we still have some missing values. We will also change column names.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Month&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D1&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D2&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D3&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D4&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D5&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D6&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D7&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D8&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D9&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D10&amp;#39;&lt;/span&gt;,
                                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D11&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D12&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D13&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D14&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D15&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D16&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D17&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D18&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D19&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D20&amp;#39;&lt;/span&gt;,
                                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D21&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D22&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D23&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D24&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D25&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D26&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D27&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D28&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D29&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D30&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D31&amp;#39;&lt;/span&gt;]
     
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./tmp.txt&amp;#34;&lt;/span&gt;)
   
   &lt;span style=&#34;color:#75715e&#34;&gt;# nettoyage des valeurs manquantes &lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:  
    df_station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;E&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;}, regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
       &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;: 
    df_station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;}, regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
       &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:     
    df_station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-9999.9&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;}, regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
       &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:     
    df_station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace({&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9999.9&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;}, regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
&lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
       &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;    
    
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; col &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt;  df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:]:
       df_station[col] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_numeric(df_station[col], errors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coerce&amp;#39;&lt;/span&gt;)      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Year&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Month&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D1&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D2&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D3&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D4&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D5&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D6&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D7&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D8&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D9&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D10&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D11&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D12&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D13&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D14&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D15&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D16&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D17&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D18&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D19&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D20&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D21&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D22&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D23&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D24&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D25&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D26&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D27&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D28&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D29&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D30&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;D31&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;14.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-9999.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-6.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-10.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-7.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-3.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-5&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-8.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-11.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-13.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-13.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-17.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-12.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-21.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-16.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-16.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-17.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-11.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-22.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-22.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-17.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-23.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-13.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-18.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-32.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-31.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-34.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-30&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-27.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-9999.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1942&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-23.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-20.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-20.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-20.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-20.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-27.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-30&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-31.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-28.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-23.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-31.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-37.2&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-37.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-38.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-40.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-39.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.3&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-35&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-35.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-26.1&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-31.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-34.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-28.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-24.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.9&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-40.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;We can now detect the minimum and maximum recording years and write the daily data on a single column.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;yearmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;min()                                  
yearmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;max()                                   
m_start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  df_station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Month&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(df_station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; yearmin)]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;min()
m_end   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  df_station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Month&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(df_station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; yearmax)]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;max()
d_end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;monthrange(yearmax, m_end)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]                     

tmp_tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ ] 
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yearmin,yearmax&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):    &lt;span style=&#34;color:#75715e&#34;&gt;### Loop over years&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; month &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;):
        df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
        last_day &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;monthrange(year, month)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] 
        tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df_station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(df_station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Year&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; year) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (df_station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Month&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; month)]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iloc[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:last_day&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
           
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(tmin) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
            a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;empty((calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;monthrange(year,month)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))
            a[:] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan
            df&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(a)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            df&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T)
               
        start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date(year, month, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
        end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;   date(year, month, last_day)
        delta&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;start) 
        nb_days &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; delta&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;days &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 
        rng &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date_range(start, periods&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nb_days, freq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;)          
        df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rng
        df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;]
        tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(df)
           
tmp_tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat(tmp_tmin) 
df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;: tmp_tmin[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Var&amp;#39;&lt;/span&gt;: tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iloc[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]}, columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tmin&amp;#39;&lt;/span&gt;]) 
df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;]
tmp_tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datetime&amp;#34;&lt;/span&gt;], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tail()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;datetime&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;0&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-12-27 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-32.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-12-28 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-12-29 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-27.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-12-30 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-35.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-12-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;visualization&#34;&gt;Visualization:&lt;/h3&gt;
&lt;p&gt;Quick visualization of the monthly average temperatures for the month of January.
We will group the data by month and calculate the average.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
month_tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;resample(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean()
month_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tail()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;datetime&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;0&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-08-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8.9871&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-09-30 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.673333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-10-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-4.99032&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-11-30 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-15.5233&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;2018-12-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-21.8129&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;tmin_janvier &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; month_tmin[month_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;month&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
tmin_janvier&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;datetime&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;0&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1942-01-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;nan&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1943-01-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-32.6871&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1944-01-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-25.471&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1945-01-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-28.6355&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;1946-01-31 00:00:00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-33.4032&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rcParams[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;figure.figsize&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]        
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(tmin_janvier&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index, tmin_janvier[:],  label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tmin Station&amp;#39;&lt;/span&gt;, linewidth&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, c&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Monthly mean of daily minimum temperature: January from &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(yearmin, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; et &amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; datetime&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date(yearmax, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;%Y&amp;#39;&lt;/span&gt;), fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;semibold&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Year&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;semibold&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;°C&amp;#39;&lt;/span&gt;, fontsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;, weight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;semibold&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;output_20_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;final-code&#34;&gt;Final code&lt;/h2&gt;
&lt;p&gt;The following code retrieves all stations for a specific province but for a common period.&lt;/p&gt;
&lt;p&gt;For example, we wish to extract all daily temperature data for the province of the Northwest Territories but only for the common period 1989-2018.&lt;/p&gt;
&lt;p&gt;We wish to have one file per station.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; datetime &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; date
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; calendar
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pathlib

&lt;span style=&#34;color:#75715e&#34;&gt;################################################                                                            #&lt;/span&gt;
varin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dn&amp;#39;&lt;/span&gt;                                                                  
path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Homog_daily_min_temp_v2018&amp;#39;&lt;/span&gt;                                           
varout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tasmoy&amp;#39;&lt;/span&gt;
province &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NWT&amp;#39;&lt;/span&gt;  
yearmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1989&lt;/span&gt; 
yearmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;###############################################################################&lt;/span&gt;

dataframe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_excel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./Temperature_Stations.xls&amp;#34;&lt;/span&gt;, skiprows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))

globals()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataframe_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dataframe&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(dataframe[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Prov&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; province) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (dataframe[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;année déb.&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; yearmin) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (dataframe[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;année fin.&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; yearmax),:]

names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i, row &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; globals()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataframe_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iterrows():
   stnid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; row[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;stnid&amp;#39;&lt;/span&gt;]   
   f1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(varin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(stnid)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
   f2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./tmp.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)

   &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; line &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; f1:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; line:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;:
                f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(word&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;M&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; word &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;:
                f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(word&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;))                    
            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(word)
   f1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
   f2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
          
   station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./tmp.txt&amp;#39;&lt;/span&gt;, delim_whitespace&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, skiprows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))
   
   station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Annee&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Mois&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D1&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D2&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D3&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D4&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D5&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D6&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D7&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D8&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D9&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D10&amp;#39;&lt;/span&gt;,
                                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D11&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D12&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D13&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D14&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D15&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D16&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D17&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D18&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D19&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D20&amp;#39;&lt;/span&gt;,
                                  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D21&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D22&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D23&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D24&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D25&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D26&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D27&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D28&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D29&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D30&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D31&amp;#39;&lt;/span&gt;]
     
   os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;./tmp.txt&amp;#34;&lt;/span&gt;)
 
   &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:  
       station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;E&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;}, regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
       &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;: 
       station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;}, regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
       &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:     
       station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-9999.9&amp;#39;&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;}, regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
       &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:     
       station &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace({&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9999.9&lt;/span&gt;:&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;}, regex&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
       &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;    
       
   &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; col &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt;  station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;columns[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:]:
       station[col] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_numeric(station[col], errors&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coerce&amp;#39;&lt;/span&gt;)
        
   m_start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Mois&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Annee&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; yearmin)]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;min()
   m_end   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Mois&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Annee&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; yearmax)]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;max()
   
   d_end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;monthrange(yearmax, m_end)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
     
   tmp_tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ ] 
   &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; year &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(yearmin,yearmax&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):    &lt;span style=&#34;color:#75715e&#34;&gt;### Boucle sur les annees&lt;/span&gt;
       &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; month &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;):
           df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
           last_day &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;monthrange(year, month)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] 
           tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; station&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loc[(station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Annee&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; year) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; (station[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mois&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; month)]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iloc[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:last_day&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;values
           
           &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(tmin) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
               a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;empty((calendar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;monthrange(year,month)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]))
               a[:] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;nan
               df&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(a)
           &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
               df&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T)
               
           start &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; date(year, month, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
           end &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;   date(year, month, last_day)
           delta&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;start) 
           nb_days &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; delta&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;days &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 
           rng &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;date_range(start, periods&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nb_days, freq&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D&amp;#39;&lt;/span&gt;)          
           df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rng
           df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;]
           tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(df)
           
   tmp_tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;concat(tmp_tmin) 
   df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;: tmp_tmin[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Var&amp;#39;&lt;/span&gt;: tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;iloc[:,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]}, columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tmin&amp;#39;&lt;/span&gt;]) 
   df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;datetime&amp;#39;&lt;/span&gt;]
   tmp_tmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;drop([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;datetime&amp;#34;&lt;/span&gt;], axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
      
   name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; row[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Nom de station&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;)
   name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; name&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)
   names&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(name)
   mypath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Daily_data_by_Province/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;varout&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;
   pathlib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Path(mypath)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mkdir(parents&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True, exist_ok&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)
   
   tmp_tmin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(mypath&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_daily_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;varout&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmin)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(yearmax)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;)
         
latlon &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame({&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude&amp;#39;&lt;/span&gt;: globals()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataframe_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lat (deg)&amp;#34;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude&amp;#39;&lt;/span&gt;: globals()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dataframe_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province][&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;long (deg)&amp;#34;&lt;/span&gt;] }, columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Latitude&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Longitude&amp;#39;&lt;/span&gt;]) 
latlon&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Daily_data_by_Province/stations_latlon_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;)
names &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(names)
names&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Daily_data_by_Province/stations_noms_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.csv&amp;#39;&lt;/span&gt;)

base_filename &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./Daily_data_by_Province/stations_noms_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;province&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.txt&amp;#39;&lt;/span&gt;
names[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;to_csv(base_filename, sep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;, index &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; False) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ANUSPLIN 10km climatology</title>
      <link>/post/cartopy_climatology/</link>
      <pubDate>Mon, 02 Dec 2019 17:56:14 -0800</pubDate>
      <guid>/post/cartopy_climatology/</guid>
      <description>&lt;h3 id=&#34;anusplin-climatology-using-cartopy&#34;&gt;ANUSPLIN climatology using Cartopy&lt;/h3&gt;
&lt;p&gt;Agriculture and Agri-Food Canada have produced daily precipitation, minimum and maximum temperature across Canada (south of 60°N) for climate related application purpose using thin-plate smoothing splines, as implemented in the ANUSPLIN climate modeling software (Hutchinson et al., 2009; McKenney et al., 2011).&lt;/p&gt;
&lt;p&gt;The so-called ANUSPLIN data uses ground-based observations and generates daily gridded data from 1951 to 2017 on a Lambert conformal conic projection with 5’ arc minutes spacing (equivalent to a resolution of about 10 km). The key strength of this spatial interpolation method is its global dependence on all data, permitting robust and stable determination of spatially varying dependences on elevation. Hutchinson et al. (2009) have shown that while ANUSPLIN fall month’s absolute errors were remarkably small, those of winter months were quite large due to rather difficult observation and measurement conditions.&lt;/p&gt;
&lt;p&gt;Data are available on &lt;a href=&#34;ftp://ftp.nrcan.gc.ca/pub/outgoing/canada_daily_grids&#34;&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post, we will see how to use Cartopy with Netcdf in order to display a nice climatology.&lt;/p&gt;
&lt;p&gt;We will display a climatoly of ANUSPLIN from 1981 to 2010.&lt;/p&gt;
&lt;p&gt;This dataset is only availabe with ascii grid format, I&amp;rsquo;ll here show how to convert it into Netcdf using Python in an other post.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://scitools.org.uk/cartopy/docs/latest/#&#34;&gt;Cartopy&lt;/a&gt; python library allows you to analyze, process and plot georeferenced data with the help of Matplotlib.&lt;/p&gt;
&lt;p&gt;We first import our librairies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; netCDF4 &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Dataset, num2date
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; warnings
warnings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;filterwarnings(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ignore&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; datetime
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; xarray &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; xr
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
filename&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;K:/DATA/ANUSPLIN_10km/Netcdf/all_domaine/YEAR/Mean_tasmoy/ANUSPLIN_10km_MEAN_YEAR_Mean_tasmoy_1950-2017.nc&amp;#39;&lt;/span&gt;
nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Dataset(filename,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;)
nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;OrderedDict([(&#39;lon&#39;, &amp;lt;class &#39;netCDF4._netCDF4.Variable&#39;&amp;gt;
              float32 lon(y, x)
                  units: degrees_east
                  long_name: Longitude
                  CoordinateAxisType: Lon
              unlimited dimensions: 
              current shape = (1068, 510)
              filling on, default _FillValue of 9.969209968386869e+36 used),
             (&#39;lat&#39;, &amp;lt;class &#39;netCDF4._netCDF4.Variable&#39;&amp;gt;
              float32 lat(y, x)
                  units: degrees_north
                  long_name: Latitude
                  CoordinateAxisType: Lat
              unlimited dimensions: 
              current shape = (1068, 510)
              filling on, default _FillValue of 9.969209968386869e+36 used),
             (&#39;time&#39;, &amp;lt;class &#39;netCDF4._netCDF4.Variable&#39;&amp;gt;
              float64 time(time)
                  long_name: Time
                  delta_t: 
              unlimited dimensions: 
              current shape = (68,)
              filling on, default _FillValue of 9.969209968386869e+36 used),
             (&#39;Mean_tasmoy&#39;, &amp;lt;class &#39;netCDF4._netCDF4.Variable&#39;&amp;gt;
              float32 Mean_tasmoy(time, y, x)
                  long_name: Mean_tasmoy
                  units: Celcius
                  missing_value: -999.0
                  coordinates: lon lat
              unlimited dimensions: 
              current shape = (68, 1068, 510)
              filling on, default _FillValue of 9.969209968386869e+36 used)])
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Mean_tasmoy&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;squeeze()
lons&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lon&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;squeeze()
lats&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lat&amp;#39;&lt;/span&gt;][:]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;squeeze()
time &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nc_fid&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;variables[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;time&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(68, 1068, 510)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;data_m &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data[&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt;,:,:]
clim_81_2010&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;data_m&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mean(axis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;clim_81_2010&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;(1068, 510)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will add some cities to display on our map. We first need to create a dataframe with names of stations and localisations.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;names&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Whitehorse&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Yellowknife&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Iqaluit&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Victoria&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Edmonton&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Regina&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Winnipeg&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Toronto&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Ottawa&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Quebec&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Halifax&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Charlottetown&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;St-John s&amp;#39;&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;latitudes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;60.721188&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;62.453972&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;63.748611&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;48.407326&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;53.631611&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;50.445210&lt;/span&gt;,
          &lt;span style=&#34;color:#ae81ff&#34;&gt;49.895077&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;43.651070&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;45.424721&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;46.829853&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;44.651070&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;46.238888&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;47.560539&lt;/span&gt;]
longitudes&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;135.056839&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;114.371788&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;68.519722&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123.329773&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;113.323975&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;104.618896&lt;/span&gt;,
           &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;97.138451&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;79.347015&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;75.695000&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;71.254028&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63.582687&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;63.129166&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;52.712830&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;DataFrame(list(zip(names, latitudes, longitudes)), 
               columns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Names&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitudes&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitudes&amp;#39;&lt;/span&gt;]) 
df
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Names&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;latitudes&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;longitudes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Whitehorse&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;60.7212&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-135.057&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Yellowknife&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;62.454&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-114.372&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;2&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Iqaluit&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;63.7486&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-68.5197&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;3&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Victoria&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;48.4073&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-123.33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Edmonton&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;53.6316&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-113.324&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;5&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Regina&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;50.4452&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-104.619&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Winnipeg&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;49.8951&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-97.1385&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;7&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Toronto&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;43.6511&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-79.347&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Ottawa&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;45.4247&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-75.695&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Quebec&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;46.8299&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-71.254&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;10&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Halifax&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;44.6511&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-63.5827&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;11&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Charlottetown&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;46.2389&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-63.1292&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;12&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;St-John s&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;47.5605&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-52.7128&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib.pylab &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; plt
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.crs &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; ccrs
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; cartopy.feature &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; cfeature
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; np
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; matplotlib &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; mpl
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; carto &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; scale_bar

Y&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;136&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;189&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;102&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;194&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;165&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;171&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;221&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;164&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;230&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;245&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;152&lt;/span&gt;],\
               [&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;191&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;254&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;224&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;139&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;253&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;174&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;97&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;244&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;109&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;],[&lt;span style=&#34;color:#ae81ff&#34;&gt;213&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;62&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;79&lt;/span&gt;]])&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;255.&lt;/span&gt;

colbar&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mpl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListedColormap(Y)
fig&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;figure(figsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;), frameon&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;True)  
ax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;subplot(&lt;span style=&#34;color:#ae81ff&#34;&gt;111&lt;/span&gt;, projection&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LambertConformal())
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_extent([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;130&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;])
 &lt;span style=&#34;color:#75715e&#34;&gt;#ax.coastlines(resolution=&amp;#39;110m&amp;#39;);&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;OCEAN&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche ocean&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAND&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))       &lt;span style=&#34;color:#75715e&#34;&gt;# couche land&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;LAKES&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))      &lt;span style=&#34;color:#75715e&#34;&gt;# couche lac&lt;/span&gt;
   
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;BORDERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))    &lt;span style=&#34;color:#75715e&#34;&gt;# couche frontieres&lt;/span&gt;
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;RIVERS&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;with_scale(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;50m&amp;#39;&lt;/span&gt;))     &lt;span style=&#34;color:#75715e&#34;&gt;# couche rivières &lt;/span&gt;
coast &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;physical&amp;#39;&lt;/span&gt;, scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,     &lt;span style=&#34;color:#75715e&#34;&gt;# ajout de la couche cotière &lt;/span&gt;
                            facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;, name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;coastline&amp;#39;&lt;/span&gt;)
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(coast, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;)    
states_provinces &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cfeature&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NaturalEarthFeature(
            category&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cultural&amp;#39;&lt;/span&gt;,
            name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;admin_1_states_provinces_lines&amp;#39;&lt;/span&gt;,
            scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;10m&amp;#39;&lt;/span&gt;,
            facecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;none&amp;#39;&lt;/span&gt;)
    
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add_feature(states_provinces, edgecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;) 

ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitudes&amp;#39;&lt;/span&gt;], df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitudes&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ko&amp;#39;&lt;/span&gt;, ms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geodetic())

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; lg, lt, name &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; zip(df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;longitudes&amp;#39;&lt;/span&gt;], df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;latitudes&amp;#39;&lt;/span&gt;], df[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Names&amp;#39;&lt;/span&gt;]):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; name &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Nazaré&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Marinha Grande&amp;#39;&lt;/span&gt;]:
        ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text(lg &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;, lt &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;, 
                name, 
                va&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;, 
                ha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geodetic(), fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:    
        ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text(lg &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, lt &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, 
                name, 
                va&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;, 
                ha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;, transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Geodetic(), fontweight&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bold&amp;#39;&lt;/span&gt;)
        
 
mm &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pcolormesh(lons,\
                   lats,\
                   clim_81_2010,\
                   vmin&lt;span style=&#34;color:#f92672&#34;&gt;=-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;,\
                   vmax&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, \
                   transform&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ccrs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;PlateCarree(),\
                   cmap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;colbar )
ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gridlines()

&lt;span style=&#34;color:#75715e&#34;&gt;# Define gridline locations and draw the lines using cartopy&amp;#39;s built-in gridliner:&lt;/span&gt;
xticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;150.0&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;40.0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;)
yticks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Standard 6,000 km scale bar.&lt;/span&gt;
scale_bar(ax, (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.85&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt; ,plot_kwargs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dict(linestyle&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dashed&amp;#39;&lt;/span&gt;, color&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;))

cbar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;colorbar(mm, orientation&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;horizontal&amp;#39;&lt;/span&gt;, shrink&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, drawedges&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;True&amp;#39;&lt;/span&gt;, ticks&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;),extend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;both&amp;#39;&lt;/span&gt;)
cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_label(&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; Projection = Lambert Conformal Conic &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Resolution: 5 Arcs-Minutes (10 km)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Data provided by Natural Resources Canada / Created by Guillaume Dueymes&amp;#39;&lt;/span&gt;, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;medium&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# Affichage de la légende de la barre de couleur&lt;/span&gt;
cbar&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ax&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tick_params(labelsize&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;) 
 
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Temperature / Température (°C)&amp;#39;&lt;/span&gt;,size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x-large&amp;#39;&lt;/span&gt;)
string_title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Climate normals of mean annual temperature (°C)&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; reference period 1981-2010&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;title(string_title, size&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;xx-large&amp;#39;&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;./ANUSPLIN_NLDAS_10km_YEAR_CLIM_1981-2010.png&amp;#39;&lt;/span&gt;, bbox_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tight&amp;#39;&lt;/span&gt;, pad_inches&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)
plt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show() 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;./Plot_Climatoloy_Netcdf_10_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>/post/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On this page, you&#39;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;#34;data.csv&amp;#34;)
data.head()
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#f92672&#34;&gt;as&lt;/span&gt; pd
data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data.csv&amp;#34;&lt;/span&gt;)
data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;head()&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file and adding &lt;code&gt;markup: mmark&lt;/code&gt; to your page front matter.&lt;/p&gt;

&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$$...$$&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tex&#34; data-lang=&#34;tex&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;\gamma_{n} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; \frac{ 
\left | \left &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf x_{n} &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; \mathbf x_{n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;} \right &lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;^T 
\left &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;\nabla F &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf x_{n}&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; \nabla F &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf x_{n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; \right &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; \right |}
{\left \|\nabla F&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf{x}_{n}&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; \nabla F&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;\mathbf{x}_{n&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; \right \|^&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$$\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2$$&lt;/code&gt; renders as &lt;span  class=&#34;math&#34;&gt;\(\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2\)&lt;/span&gt; .&lt;/p&gt;

&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\&lt;/code&gt; math linebreak:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-tex&#34; data-lang=&#34;tex&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;f&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;k;p_&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;*)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; \begin{cases} p_&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &amp;amp; \text{if }k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, \\
&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;p_&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &amp;amp; \text {if }k&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;.\end{cases}&lt;span style=&#34;color:#e6db74&#34;&gt;$$&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[f(k;p_0^*) = \begin{cases} p_0^* &amp; \text{if }k=1, \\
1-p_0^* &amp; \text {if }k=0.\end{cases}\]&lt;/span&gt;&lt;/p&gt;

&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;

&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;graph TD;
  A--&amp;gt;B;
  A--&amp;gt;C;
  B--&amp;gt;D;
  C--&amp;gt;D;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
  participant Alice
  participant Bob
  Alice-&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
  John--&amp;gt;Alice: Great!
  John-&amp;gt;Bob: How about you?
  Bob--&amp;gt;John: Jolly good!
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;sequenceDiagram
  participant Alice
  participant Bob
  Alice-&amp;gt;John: Hello John, how are you?
  loop Healthcheck
      John-&amp;gt;John: Fight against hypochondria
  end
  Note right of John: Rational thoughts &amp;lt;br/&amp;gt;prevail...
  John--&amp;gt;Alice: Great!
  John-&amp;gt;Bob: How about you?
  Bob--&amp;gt;John: Jolly good!&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
gantt
  dateFormat  YYYY-MM-DD
  section Section
  A task           :a1, 2014-01-01, 30d
  Another task     :after a1  , 20d
  section Another
  Task in sec      :2014-01-12  , 12d
  another task      : 24d
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34; data-lang=&#34;mermaid&#34;&gt;gantt
  dateFormat  YYYY-MM-DD
  section Section
  A task           :a1, 2014-01-01, 30d
  Another task     :after a1  , 20d
  section Another
  Task in sec      :2014-01-12  , 12d
  another task      : 24d&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;

&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;- [x]&lt;/span&gt; Write math example
&lt;span style=&#34;color:#66d9ef&#34;&gt;- [x]&lt;/span&gt; Write diagram example
- [ ] Do something else&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; Write math example&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;&#34; disabled=&#34;&#34;&gt; Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled=&#34;&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Represent your data in tables:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;asides&#34;&gt;Asides&lt;/h3&gt;

&lt;p&gt;Academic supports a Markdown extension for asides, also referred to as &lt;em&gt;notices&lt;/em&gt; or &lt;em&gt;hints&lt;/em&gt;. By prefixing a paragraph with &lt;code&gt;A&amp;gt;&lt;/code&gt;, it will render as an aside. You can enable this feature by adding &lt;code&gt;markup: mmark&lt;/code&gt; to your page front matter, or alternatively using the &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#alerts&#34;&gt;&lt;em&gt;Alert&lt;/em&gt; shortcode&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;A&amp;gt; A Markdown aside is useful for displaying notices, hints, or definitions to your readers.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;renders as&lt;/p&gt;

&lt;aside&gt;
&lt;p&gt;A Markdown aside is useful for displaying notices, hints, or definitions to your readers.&lt;/p&gt;
&lt;/aside&gt;

&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h3&gt;
</description>
    </item>
    
  </channel>
</rss>
